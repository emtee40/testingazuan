#!/usr/bin/perl

=head1 
Process , version , status .
Author: 
Purpose: 

=cut




my $_licence = <<'END_OF_LICENCE';

  Copyright (c) 2005-2006, Talend SA

  This source code has been automatically generated by talend
  OpenStudio / ProcessDesigner (CodeGenerator version 1.1.2.r2022).
  You can find more information about talend products at www.talend.com.
  You may distribute this code under the terms of either the GNU General
  Public License or under the Artistic License just like Perl itself.

END_OF_LICENCE

# print $_licence;

use Getopt::Long;
use Time::HiRes qw/gettimeofday tv_interval/;
my %opt = ();
GetOptions(
    \%opt,
    qw/context=s stat_port=i trace_port=i watch/
);

our %_context;
our %_globals;

$_globals{job_name} = 'Prova';
$_globals{start} = [gettimeofday];

if (defined $opt{context}) {
#     print(
#         'tsInfo>  Running process with context: ',
#         $opt{context},
#         ' (./tUser/parameters_', $opt{context}, '.pl)',
#         "\n\n"
#     );

    require $opt{context};
}

use TEST__Date;
use TEST__Misc;
use TEST__String;


use constant true   => 1;
use constant false  => 0;
use constant null   => undef;

$SIG{__DIE__} = \&global_die_catcher;
$current_component=undef;

sub global_die_catcher {
    if (defined $current_component) {
        my $dying_component = $current_component;

        our $_globals;

        my $exception = $_[0];
        chomp($exception);

        $_globals{$dying_component}{ERROR_MESSAGE}      = $exception;
        $_globals{$dying_component}{PERL_ERROR_MESSAGE} = $!;
        $_globals{$dying_component}{PERL_ERROR_CODE}    = int($!);

        if (defined &main::tCatcher_1_subprocess) {
            tCatcher_1_subprocess(
                type => 'Perl die',
                origin => $dying_component,
                priority => 100,
                error_message => $_globals{$dying_component}{ERROR_MESSAGE},
                perl_error_message => $_globals{$dying_component}{PERL_ERROR_MESSAGE},
                perl_error_code => $_globals{$dying_component}{PERL_ERROR_CODE},
            );
        }

        no strict 'refs';
        &{$dying_component.'_error'}();
    }
}
sub tDBInput_1_error() {
}
sub tFileOutputDelimited_1_error() {
}
sub tMsgBox_1_error() {
}

# +-------------------------------------------------------------------------+
# | [subprocess header] starts here                                         |
# +-------------------------------------------------------------------------+ 

	sub tDBInput_1_subprocess  {
		tMsgBox_1_subprocess();
# +-------------------------------------------------------------------------+
# | [subprocess header] stops here                                          |
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 begin ] start
# +-------------------------------------------------------------------------+ 

$current_component="tFileOutputDelimited_1";



=head1 tFileOutputDelimited tFileOutputDelimited_1

=cut

$_globals{tFileOutputDelimited_1}{OK} = false;




use FileHandle;

my %desc_tFileOutputDelimited_1 = (
    filename => 'C:\Documents and Settings\sulis\Desktop\out.csv',
    field_separator => ';',
    row_separator => "\n",
    append => false,
    include_header => false,
    schema => [
    	{
            name    => 'product_class_id',
            key     => false,
            type    => 'int',
            len     => 11,
            null    => false,
            default => '',
            comment => '',
        },
    	{
            name    => 'product_id',
            key     => false,
            type    => 'int',
            len     => 11,
            null    => false,
            default => '',
            comment => '',
        },
    	{
            name    => 'brand_name',
            key     => false,
            type    => 'varchar',
            len     => 60,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'product_name',
            key     => false,
            type    => 'varchar',
            len     => 60,
            null    => false,
            default => '',
            comment => '',
        },
    	{
            name    => 'SKU',
            key     => false,
            type    => 'bigint',
            len     => 20,
            null    => false,
            default => '',
            comment => '',
        },
    	{
            name    => 'SRP',
            key     => false,
            type    => 'decimal',
            len     => 10,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'gross_weight',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'net_weight',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'recyclable_package',
            key     => false,
            type    => 'BIT',
            len     => 1,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'low_fat',
            key     => false,
            type    => 'BIT',
            len     => 1,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'units_per_case',
            key     => false,
            type    => 'smallint',
            len     => 6,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'cases_per_pallet',
            key     => false,
            type    => 'smallint',
            len     => 6,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'shelf_width',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'shelf_height',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
        },
    	{
            name    => 'shelf_depth',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
        },
    ]
);

use constant OUTPUT_FIELD_SEPARATOR_tFileOutputDelimited_1 => ';';
use constant OUTPUT_ROW_SEPARATOR_tFileOutputDelimited_1 => "\n";
my $nb_fields_tFileOutputDelimited_1 = scalar @{ $desc_tFileOutputDelimited_1{schema} };
my $nb_line_tFileOutputDelimited_1 = 0;

my $output_FH_tFileOutputDelimited_1 = new FileHandle;

my $mode;
if ($desc_tFileOutputDelimited_1{append}) {
    $mode = '>>';
}
else {
    $mode = '>';
}

open($output_FH_tFileOutputDelimited_1, $mode, $desc_tFileOutputDelimited_1{filename})
    or die 'cannot open file "' . $desc_tFileOutputDelimited_1{filename} . '"';



# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 begin ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tDBInput_1 begin ] start
# +-------------------------------------------------------------------------+ 

$current_component="tDBInput_1";



=head1 tDBInput tDBInput_1

=cut

$_globals{tDBInput_1}{OK} = false;




use DBI;
use talend::dbOp;

my %desc_tDBInput_1 = (
    dbtype        => mysql,
    driver        => mysql,
    dbhost        => 'localhost',
    dbport        => '3306',
    dbname        => 'foodmart',
    dbuser        => 'root',
    dbpass        => 'mysql',
    encoding      => 'ISO-8859-15',
    query         => 'SELECT * FROM product p',
    schema        => [
    	{
            name    => 'product_class_id',
            key     => false,
            type    => 'int',
            len     => 11,
            null    => false,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'product_id',
            key     => false,
            type    => 'int',
            len     => 11,
            null    => false,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'brand_name',
            key     => false,
            type    => 'varchar',
            len     => 60,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'product_name',
            key     => false,
            type    => 'varchar',
            len     => 60,
            null    => false,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'SKU',
            key     => false,
            type    => 'bigint',
            len     => 20,
            null    => false,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'SRP',
            key     => false,
            type    => 'decimal',
            len     => 10,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'gross_weight',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'net_weight',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'recyclable_package',
            key     => false,
            type    => 'BIT',
            len     => 1,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'low_fat',
            key     => false,
            type    => 'BIT',
            len     => 1,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'units_per_case',
            key     => false,
            type    => 'smallint',
            len     => 6,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'cases_per_pallet',
            key     => false,
            type    => 'smallint',
            len     => 6,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'shelf_width',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'shelf_height',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
		},
	
    	{
            name    => 'shelf_depth',
            key     => false,
            type    => 'double',
            len     => 22,
            null    => true,
            default => '',
            comment => '',
		},
	
    ]
);

my $nb_fields_tDBInput_1 = scalar @{ $desc_tDBInput_1{schema} };
my $nb_line_tDBInput_1 = 0;


my $dbh_tDBInput_1 = DBI->connect(
    getConnectionString(
        driver => $desc_tDBInput_1{driver},
        dbname => $desc_tDBInput_1{dbname},
        dbhost => $desc_tDBInput_1{dbhost},
        dbport => $desc_tDBInput_1{dbport},
    ),
    $desc_tDBInput_1{dbuser},
    $desc_tDBInput_1{dbpass},
)
    or die "can't connect to database";

my $sth_tDBInput_1;
my $query;

if ($desc_tDBInput_1{dbtype} eq 'mysql'
    and lc $desc_tDBInput_1{encoding} eq 'utf-8') {
    $query = '
set names "UTF8"
';
    $sth_tDBInput_1 = $dbh_tDBInput_1->prepare($query);
    $sth_tDBInput_1->execute();
    $sth_tDBInput_1->finish();
}

if ($desc_tDBInput_1{dbtype} eq 'postgresql') {
    my $encoding = $desc_tDBInput_1{encoding};

    $query = '
set names \''.$encoding.'\'
';
    $sth_tDBInput_1 = $dbh_tDBInput_1->prepare($query);
    $sth_tDBInput_1->execute();
}

$sth_tDBInput_1 = $dbh_tDBInput_1->prepare(
    $desc_tDBInput_1{query}
);

$sth_tDBInput_1->execute()
    or die "can't execute input query";

if ($_context{StoreSQLQuery}) {
    $_globals{tDBInput_1}{QUERY} = $desc_tDBInput_1{query};
}

# fetch the N first columns (defined by component schema) from the SQL
# result
while (my @tDBInput_1 = ($sth_tDBInput_1->fetchrow_array())[0 .. $nb_fields_tDBInput_1 - 1]) {
    $nb_line_tDBInput_1++;


# +-------------------------------------------------------------------------+
# | [tDBInput_1 begin ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tDBInput_1 main ] start
# +-------------------------------------------------------------------------+ 

$current_component="tDBInput_1";







my @row1 = @tDBInput_1;

# +-------------------------------------------------------------------------+
# | [tDBInput_1 main ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 main ] start
# +-------------------------------------------------------------------------+ 

$current_component="tFileOutputDelimited_1";


	my @tFileOutputDelimited_1 = @row1;


if (@tFileOutputDelimited_1) {
    print {$output_FH_tFileOutputDelimited_1} (
	    join(
                OUTPUT_FIELD_SEPARATOR_tFileOutputDelimited_1,
                @tFileOutputDelimited_1[0 .. $nb_fields_tFileOutputDelimited_1 - 1]
            ),
	    OUTPUT_ROW_SEPARATOR_tFileOutputDelimited_1
    )
        or die "can't write to file " . $output_desc_tFileOutputDelimited_1{filename} . "\n";

    $nb_line_tFileOutputDelimited_1++;

}
    

# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 main ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [                                                                       |
# +-------------------------------------------------------------------------+ 

# +-------------------------------------------------------------------------+
# | [tDBInput_1 end ] start
# +-------------------------------------------------------------------------+ 

$current_component="tDBInput_1";




}

$sth_tDBInput_1->finish();
$dbh_tDBInput_1->disconnect();

$_globals{tDBInput_1}{NB_LINE} = $nb_line_tDBInput_1;



$_globals{tDBInput_1}{OK} = true;


# +-------------------------------------------------------------------------+
# | [tDBInput_1 end ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 end ] start
# +-------------------------------------------------------------------------+ 

$current_component="tFileOutputDelimited_1";



close($output_FH_tFileOutputDelimited_1);

$_globals{tFileOutputDelimited_1}{NB_LINE} = $nb_line_tFileOutputDelimited_1;




$_globals{tFileOutputDelimited_1}{OK} = true;


# +-------------------------------------------------------------------------+
# | [tFileOutputDelimited_1 end ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [subprocess footer] starts here                                         |
# +-------------------------------------------------------------------------+ 
	}
# +-------------------------------------------------------------------------+
# | [subprocess footer] stops here                                          |
# +-------------------------------------------------------------------------+ 

# +-------------------------------------------------------------------------+
# | [subprocess header] starts here                                         |
# +-------------------------------------------------------------------------+ 

	sub tMsgBox_1_subprocess  {
# +-------------------------------------------------------------------------+
# | [subprocess header] stops here                                          |
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tMsgBox_1 begin ] start
# +-------------------------------------------------------------------------+ 

$current_component="tMsgBox_1";



=head1 tMsgBox tMsgBox_1

=cut

$_globals{tMsgBox_1}{OK} = false;





# +-------------------------------------------------------------------------+
# | [tMsgBox_1 begin ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [tMsgBox_1 main ] start
# +-------------------------------------------------------------------------+ 

$current_component="tMsgBox_1";




my $title = 'Talend Open Studio';
if ($title eq '') {
    $title = 'Default message';
}

if (eval "require Win32") {
    Win32::MsgBox(
        $_context{par1} . ' - ' . $_context{par2},
        Win32::MB_ICONINFORMATION | 0,
        $title
    );
}
elsif (eval "require Text::ASCIITable") {
    my $t = Text::ASCIITable->new();
    $t->setCols($title);
    $t->alignColName($title, 'center');
    $t->setColWidth($title,80);
    $t->addRow($_context{par1} . ' - ' . $_context{par2});
    $t->addRowLine();
    print $t;
}
else {
    print "\n";
    print "=========== ", $title, " ============\n";
    print $_context{par1} . ' - ' . $_context{par2}, "\n";
    print "===========", "=" x (length($title) + 2), "============\n";
}


# +-------------------------------------------------------------------------+
# | [tMsgBox_1 main ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [                                                                       |
# +-------------------------------------------------------------------------+ 

# +-------------------------------------------------------------------------+
# | [tMsgBox_1 end ] start
# +-------------------------------------------------------------------------+ 

$current_component="tMsgBox_1";




$_globals{tMsgBox_1}{OK} = true;


# +-------------------------------------------------------------------------+
# | [tMsgBox_1 end ] stop
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
# | [subprocess footer] starts here                                         |
# +-------------------------------------------------------------------------+ 
	}
# +-------------------------------------------------------------------------+
# | [subprocess footer] stops here                                          |
# +-------------------------------------------------------------------------+ 

# +-------------------------------------------------------------------------+
# | [footer] starts here                                                    |
# +-------------------------------------------------------------------------+ 



tDBInput_1_subprocess();


$_globals{stop} = [gettimeofday];

$_globals{duration} = sprintf(
    '%.1f', 
    tv_interval(
        $_globals{start},
        $_globals{stop}
    )
);


if (defined $opt{watch}) {
    printf(
        "===\nexecution time: %s seconds\n===\n",
        $_globals{duration}
    );
}

# +-------------------------------------------------------------------------+
# | [footer] stops here                                                     |
# +-------------------------------------------------------------------------+ 
# +-------------------------------------------------------------------------+
#      21318 characters generated by Talend OpenStudio 
#      on the 2 aprile 2007 15.18.10 CEST
# +-------------------------------------------------------------------------+