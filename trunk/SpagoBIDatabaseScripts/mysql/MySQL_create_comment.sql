ALTER TABLE SBI_CHECKS COMMENT = 'Checks to validate paramenters data entry.';
ALTER TABLE SBI_DOMAINS COMMENT = 'Support domains for defined data values. The table contains the possible values of: 1) STATE; 2) BIOBJ Type; 3) PARAMETER Type; 4) INPUT type; 4) VALUE Type; 5) ROLE type; 6) Functionality type; 7) BIObject execution mode; 8) BIObject state handling;';
ALTER TABLE SBI_ENGINES COMMENT = 'Engine repository. The table contains all Engine information for its servlet invocation.';
ALTER TABLE SBI_EXT_ROLES COMMENT = 'User roles. The role defines user visibility and interaction modality with parameters values. The roles are imported from outside systems, which maintains their management responsibility. The set of the user''s roles realized his profile.';
ALTER TABLE SBI_FUNC_ROLE COMMENT = 'Permissions to the use of the functionalities on the user''s roles basis.';
ALTER TABLE SBI_FUNCTIONS COMMENT = 'Functions in the mining of Business Intelligence Documents thematic group.';
ALTER TABLE SBI_LOV COMMENT = 'Lists of values and inputation mode for parameters presentation and values entry.';
ALTER TABLE SBI_OBJ_FUNC COMMENT = 'Relationship between SBIObjects and Functionalities.';
ALTER TABLE SBI_OBJ_PAR COMMENT = 'Parameters used by BIObjects.';
ALTER TABLE SBI_OBJ_STATE COMMENT = 'Historical state''s changes of every BI Objects.';
ALTER TABLE SBI_OBJECTS COMMENT = 'Business Intelligence Objects. The table contains all BI Objects, also of different family (report, OLAP, DM, Dash), with their essential attributes.';
ALTER TABLE SBI_PARAMETERS COMMENT = 'The table contains all parameters usable by all the BI objects. Every parameter can have several inputation and validation mode, depending of users roles.';
ALTER TABLE SBI_PARUSE COMMENT = 'Parameters use mode. According to user''s role, every parameter can be work in a different way. It present itself and validate the particular input value according to user''s role. There are three different table to do that: 1) SBI_PARUSE lets you to choose how the parameter can present itsefl (only one mode for user''s role, but many for the same parameter) 2) SBI_PARUSE_DET binds presentation mode with user''s roles 3) SBI_PARUSE_CK contains all input value''s validation rules (many checks for one input value) With this structure, if you whant to bind checks with roles, you have to instantiate different SBI_PARUSE rows.';
ALTER TABLE SBI_PARUSE_CK COMMENT = 'SBI_PARUSE_CK contains all input value''s validation rules (many checks for one input value)';
ALTER TABLE SBI_PARUSE_DET COMMENT = 'SBI_PARUSE_DET binds presentation mode with user''s roles';


ALTER TABLE SBI_OBJECTS MODIFY COLUMN BIOBJ_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Business Intelligence Object identifier';
ALTER TABLE SBI_OBJ_FUNC MODIFY COLUMN BIOBJ_ID INTEGER NOT NULL COMMENT 'Business Intelligence Object identifier';
ALTER TABLE SBI_OBJ_STATE MODIFY COLUMN BIOBJ_ID INTEGER NOT NULL COMMENT 'Business Intelligence Object identifier';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN BIOBJ_ID INTEGER NOT NULL COMMENT 'Business Intelligence Object identifier';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN BIOBJ_TYPE_CD VARCHAR(20) NOT NULL COMMENT 'Business Intelligence Object Type code (ex. report, OLAP, Data mining, Dashboard). Denormalizated attribute from SBI_DOMAINS.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN BIOBJ_TYPE_ID INTEGER NOT NULL COMMENT 'Business Intelligence Object Type identifier.';
ALTER TABLE SBI_PARUSE_CK MODIFY COLUMN CHECK_ID INTEGER NOT NULL COMMENT 'Check identifier. For every parameter-presentation mode (use_id) you can have many check to apply sequentially.';
ALTER TABLE SBI_CHECKS MODIFY COLUMN CHECK_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT '';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN CODE VARCHAR(20) NULL COMMENT 'Role code.';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN CODE VARCHAR(20) NOT NULL COMMENT 'Functionality code';
ALTER TABLE SBI_LOV MODIFY COLUMN DEFAULT_VAL VARCHAR(40) NULL COMMENT 'Default value for the parameter.';
ALTER TABLE SBI_PARUSE_DET MODIFY COLUMN DEFAULT_VAL VARCHAR(40) NULL COMMENT '';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Parameter description';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Functionality description';
ALTER TABLE SBI_CHECKS MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Parameter description';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Role description';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'BI Object description';
ALTER TABLE SBI_LOV MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Parameter description';
ALTER TABLE SBI_ENGINES MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Engine description';
ALTER TABLE SBI_PARUSE MODIFY COLUMN DESCR VARCHAR(160) NULL COMMENT 'Description of the parameter use mode.';
ALTER TABLE SBI_DOMAINS MODIFY COLUMN DOMAIN_CD VARCHAR(20) NULL COMMENT '';
ALTER TABLE SBI_DOMAINS MODIFY COLUMN DOMAIN_NM VARCHAR(40) NULL COMMENT '';
ALTER TABLE SBI_ENGINES MODIFY COLUMN DRIVER_NM VARCHAR(400) NOT NULL COMMENT 'Driver''s name for specific engine interface.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN ENCRYPT SMALLINT NULL COMMENT 'Parameter encryption request.';
ALTER TABLE SBI_ENGINES MODIFY COLUMN ENCRYPT SMALLINT NULL COMMENT 'Encripting support';
ALTER TABLE SBI_OBJ_STATE MODIFY COLUMN END_DT DATE NULL COMMENT 'End date for object in state.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN ENGINE_ID INTEGER NOT NULL COMMENT 'Engine idenitifier (FK)';
ALTER TABLE SBI_ENGINES MODIFY COLUMN ENGINE_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Engine idenitifier';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN EXEC_MODE_CD VARCHAR(20) NULL COMMENT 'Business Intelligence Object execution mode (ex. delegated, supervised, proprietary). Denormalizated attribute from SBI_DOMAINS.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN EXEC_MODE_ID INTEGER NULL COMMENT 'Execution mode identifier.';
ALTER TABLE SBI_PARUSE_DET MODIFY COLUMN EXT_ROLE_ID INTEGER NOT NULL COMMENT 'User role identifier';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN EXT_ROLE_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'User role identifier';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN FUNCT_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Functionality identifier';
ALTER TABLE SBI_OBJ_FUNC MODIFY COLUMN FUNCT_ID INTEGER NOT NULL COMMENT 'Functionality identifier';
ALTER TABLE SBI_FUNC_ROLE MODIFY COLUMN FUNCT_ID INTEGER NOT NULL COMMENT 'Functionality identifier';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN FUNCT_TYPE_CD VARCHAR(20) NOT NULL COMMENT 'Functionality type code';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN FUNCT_TYPE_ID INTEGER NOT NULL COMMENT 'Functionality type identifier';
ALTER TABLE SBI_PARUSE_DET MODIFY COLUMN HIDDEN_FL SMALLINT NULL COMMENT '';
ALTER TABLE SBI_LOV MODIFY COLUMN INPUT_TYPE_CD VARCHAR(20) NOT NULL COMMENT 'Input type (ex. manual input, profile, values list, query statement). Denormalizated attribute from SBI_DOMAINS.';
ALTER TABLE SBI_LOV MODIFY COLUMN INPUT_TYPE_ID INTEGER NOT NULL COMMENT 'Input type identifier.';
ALTER TABLE SBI_LOV MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Parameter label (short textual identifier).';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Parameter label in BIObj use (short textual identifier)';
ALTER TABLE SBI_PARUSE MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Label to identify the parameter use mode.';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Parameter label (short textual identifier).';
ALTER TABLE SBI_ENGINES MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT '';
ALTER TABLE SBI_CHECKS MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Parameter label (short textual identifier).';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN LABEL VARCHAR(20) NOT NULL COMMENT 'Engine label (short textual identifier)';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN LENGTH SMALLINT NOT NULL COMMENT 'Parameter dimension.';
ALTER TABLE SBI_PARUSE MODIFY COLUMN LOV_ID INTEGER NOT NULL COMMENT 'Identifier for input mode and predefined list of values or reading criteria.';
ALTER TABLE SBI_LOV MODIFY COLUMN LOV_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT '';
ALTER TABLE SBI_LOV MODIFY COLUMN LOV_PROVIDER VARCHAR(2000) NULL COMMENT 'List of values provider. According to INPUT_TYPE_ID and INPUT_TYPE_ID, the column contains hard-coded values, query statement, function load name and so on.';
ALTER TABLE SBI_ENGINES MODIFY COLUMN MAIN_URL VARCHAR(400) NOT NULL COMMENT 'Engine URL (main location/invocation)';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN MASK VARCHAR(20) NULL COMMENT 'Parameter input format.';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN MOD_FL SMALLINT NULL COMMENT 'Parameter modifiable flag.';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN MULT_FL SMALLINT NULL COMMENT 'Multivalue parameter.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT '';
ALTER TABLE SBI_CHECKS MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT '';
ALTER TABLE SBI_PARUSE MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT '';
ALTER TABLE SBI_ENGINES MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT 'Engine name';
ALTER TABLE SBI_LOV MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT '';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN NAME VARCHAR(40) NULL COMMENT 'Functionality name';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN NAME VARCHAR(40) NULL COMMENT 'Role name';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN NAME VARCHAR(40) NOT NULL COMMENT '';
ALTER TABLE SBI_OBJ_STATE MODIFY COLUMN NOTE VARCHAR(300) NULL COMMENT '';
ALTER TABLE SBI_ENGINES MODIFY COLUMN OBJ_UPL_DIR VARCHAR(400) NULL COMMENT 'Path for documents upload (before approval iteration)';
ALTER TABLE SBI_ENGINES MODIFY COLUMN OBJ_USE_DIR VARCHAR(400) NULL COMMENT 'Path for usable documents';
ALTER TABLE SBI_PARUSE MODIFY COLUMN PAR_ID INTEGER NOT NULL COMMENT 'Parameter identifier';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN PAR_ID INTEGER NOT NULL COMMENT 'Parameter identifier';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN PAR_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Parameter identifier';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN PAR_TYPE_CD VARCHAR(20) NOT NULL COMMENT 'Parameter type (ex. date, number, string). Denormalizated attribute from SBI_DOMAINS.';
ALTER TABLE SBI_PARAMETERS MODIFY COLUMN PAR_TYPE_ID INTEGER NOT NULL COMMENT 'Parameter type identifier.';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN PARENT_FUNCT_ID INTEGER NULL COMMENT 'Functionality identifier';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN PARURL_NM VARCHAR(20) NULL COMMENT 'Parameter name in HTTP request.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN PATH VARCHAR(400) NULL COMMENT '';
ALTER TABLE SBI_FUNCTIONS MODIFY COLUMN PATH VARCHAR(400) NULL COMMENT 'Functionality location for category link.';
ALTER TABLE SBI_LOV MODIFY COLUMN PROFILE_ATTR VARCHAR(20) NULL COMMENT 'Name of the user''s profile attribute to use for value setting.';
ALTER TABLE SBI_PARUSE_CK MODIFY COLUMN PROG INTEGER NULL COMMENT '';
ALTER TABLE SBI_PARUSE_DET MODIFY COLUMN PROG INTEGER NULL COMMENT 'Progressive.';
ALTER TABLE SBI_OBJ_FUNC MODIFY COLUMN PROG INTEGER NULL COMMENT '';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN PROG INTEGER NULL COMMENT 'Ordinal number of BIObj and Parameter association and input form.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN REL_NAME VARCHAR(400) NULL COMMENT 'Relative path + file object name';
ALTER TABLE SBI_OBJ_PAR MODIFY COLUMN REQ_FL SMALLINT NULL COMMENT 'Parameter required flag.';
ALTER TABLE SBI_FUNC_ROLE MODIFY COLUMN ROLE_ID INTEGER NOT NULL COMMENT 'User role identifier';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN ROLE_TYPE_CD VARCHAR(20) NOT NULL COMMENT 'Role type (administrative role, functional role), if role domains isn''t sufficiently detailed.';
ALTER TABLE SBI_EXT_ROLES MODIFY COLUMN ROLE_TYPE_ID INTEGER NOT NULL COMMENT 'Role type identifier';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN SCHED_FL SMALLINT NULL COMMENT 'Schedulable document.';
ALTER TABLE SBI_ENGINES MODIFY COLUMN SECN_URL VARCHAR(400) NULL COMMENT 'Secondary engine URL (location/invocation)';
ALTER TABLE SBI_OBJ_STATE MODIFY COLUMN START_DT DATE NOT NULL COMMENT 'State assumption date';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN STATE_CD VARCHAR(20) NOT NULL COMMENT 'State code. Initially hard-coded valued, in the future, managed by a states workflow with historical storage.';
ALTER TABLE SBI_FUNC_ROLE MODIFY COLUMN STATE_CD VARCHAR(20) NULL COMMENT 'State code. Initially hard-coded valued, in the future, managed by a states workflow with historical storage.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN STATE_CONS_CD VARCHAR(20) NULL COMMENT 'State consideration code (statefull, stateless).Denormalizated attribute from SBI_DOMAINS. It can be also inherited form BIObjectType';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN STATE_CONS_ID INTEGER NULL COMMENT 'State consideration identifier.';
ALTER TABLE SBI_OBJECTS MODIFY COLUMN STATE_ID INTEGER NOT NULL COMMENT 'State identifier (actually not used)';
ALTER TABLE SBI_OBJ_STATE MODIFY COLUMN STATE_ID INTEGER NOT NULL COMMENT '';
ALTER TABLE SBI_FUNC_ROLE MODIFY COLUMN STATE_ID INTEGER NOT NULL COMMENT '';
ALTER TABLE SBI_PARUSE_DET MODIFY COLUMN USE_ID INTEGER NOT NULL COMMENT 'Use mode identifier. It''s an auxiliary identifier used for a simpler handling of the relation between parameters, lovs, checks and roles.';
ALTER TABLE SBI_PARUSE_CK MODIFY COLUMN USE_ID INTEGER NOT NULL COMMENT 'Use mode identifier.';
ALTER TABLE SBI_PARUSE MODIFY COLUMN USE_ID INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Use mode identifier. It''s an auxiliary identifier used for a simpler handling of the relation between parameters, lovs, checks and roles.';
ALTER TABLE SBI_CHECKS MODIFY COLUMN VALUE_1 VARCHAR(400) NULL COMMENT 'Lower threshold of a range or punctual value for a comparison.';
