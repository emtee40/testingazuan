CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE SBI_CHECKS(CHECK_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,VALUE_TYPE_CD VARCHAR,VALUE_TYPE_ID INTEGER,VALUE_1 VARCHAR,VALUE_2 VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_CHECKS PRIMARY KEY(CHECK_ID))
CREATE MEMORY TABLE SBI_DOMAINS(VALUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,VALUE_CD VARCHAR,VALUE_NM VARCHAR,DOMAIN_CD VARCHAR,DOMAIN_NM VARCHAR,VALUE_DS VARCHAR,CONSTRAINT XPKSBI_DOMAINS PRIMARY KEY(VALUE_ID))
CREATE MEMORY TABLE SBI_ENGINES(ENGINE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENCRYPT SMALLINT,NAME VARCHAR,DESCR VARCHAR,MAIN_URL VARCHAR,SECN_URL VARCHAR,OBJ_UPL_DIR VARCHAR,OBJ_USE_DIR VARCHAR,DRIVER_NM VARCHAR,LABEL VARCHAR,ENGINE_TYPE INTEGER,CLASS_NM VARCHAR,BIOBJ_TYPE INTEGER,CONSTRAINT XPKSBI_ENGINES PRIMARY KEY(ENGINE_ID),CONSTRAINT FK_SBI_ENGINES_1 FOREIGN KEY(BIOBJ_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_ENGINES_2 FOREIGN KEY(ENGINE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_EXT_ROLES(EXT_ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,CODE VARCHAR,ROLE_TYPE_CD VARCHAR,ROLE_TYPE_ID INTEGER,CONSTRAINT XPKSBI_EXT_ROLES PRIMARY KEY(EXT_ROLE_ID),CONSTRAINT FK_SBI_EXT_ROLES_1 FOREIGN KEY(ROLE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_FUNC_ROLE(ROLE_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,STATE_CD VARCHAR,STATE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_FUNC_ROLE PRIMARY KEY(FUNCT_ID,STATE_ID,ROLE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNC_ROLE_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID))
CREATE MEMORY TABLE SBI_FUNCTIONS(FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCT_TYPE_CD VARCHAR,PARENT_FUNCT_ID INTEGER,NAME VARCHAR,DESCR VARCHAR,PATH VARCHAR,CODE VARCHAR,PROG INTEGER NOT NULL,FUNCT_TYPE_ID INTEGER,CONSTRAINT XPKSBI_FUNCTIONS PRIMARY KEY(FUNCT_ID),CONSTRAINT FK_SBI_FUNCTIONS_1 FOREIGN KEY(FUNCT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_FUNCTIONS_2 FOREIGN KEY(PARENT_FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_LOV(LOV_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,INPUT_TYPE_CD VARCHAR,DEFAULT_VAL VARCHAR,LOV_PROVIDER VARCHAR,INPUT_TYPE_ID INTEGER,PROFILE_ATTR VARCHAR,NAME VARCHAR,CONSTRAINT XPKSBI_LOV PRIMARY KEY(LOV_ID),CONSTRAINT FK_SBI_LOV_1 FOREIGN KEY(INPUT_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJ_FUNC(BIOBJ_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_OBJ_FUNC PRIMARY KEY(BIOBJ_ID,FUNCT_ID),CONSTRAINT FK_SBI_OBJ_FUNC_1 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID))
CREATE MEMORY TABLE SBI_OBJ_PAR(PAR_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL,LABEL VARCHAR,REQ_FL SMALLINT,MOD_FL SMALLINT,VIEW_FL SMALLINT,MULT_FL SMALLINT,PROG INTEGER NOT NULL,PARURL_NM VARCHAR,OBJ_PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,PRIORITY INTEGER,CONSTRAINT XPKSBI_OBJ_PAR PRIMARY KEY(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_OBJ_STATE(BIOBJ_ID INTEGER NOT NULL,STATE_ID INTEGER NOT NULL,END_DT DATE,START_DT DATE NOT NULL,NOTE VARCHAR,CONSTRAINT XPKSBI_OBJ_STATE PRIMARY KEY(BIOBJ_ID,STATE_ID,START_DT),CONSTRAINT FK_SBI_OBJ_STATE_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_OBJECTS(BIOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENGINE_ID INTEGER,DESCR VARCHAR,LABEL VARCHAR,ENCRYPT SMALLINT,PATH VARCHAR,REL_NAME VARCHAR,STATE_ID INTEGER,STATE_CD VARCHAR,BIOBJ_TYPE_CD VARCHAR,BIOBJ_TYPE_ID INTEGER,SCHED_FL SMALLINT,EXEC_MODE_ID INTEGER,STATE_CONS_ID INTEGER,EXEC_MODE_CD VARCHAR,STATE_CONS_CD VARCHAR,NAME VARCHAR,VISIBLE SMALLINT,UUID VARCHAR,CONSTRAINT XPKSBI_OBJECTS PRIMARY KEY(BIOBJ_ID),CONSTRAINT FK_SBI_OBJECTS_1 FOREIGN KEY(STATE_CONS_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_2 FOREIGN KEY(STATE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_3 FOREIGN KEY(BIOBJ_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_4 FOREIGN KEY(EXEC_MODE_ID) REFERENCES SBI_DOMAINS(VALUE_ID),CONSTRAINT FK_SBI_OBJECTS_5 FOREIGN KEY(ENGINE_ID) REFERENCES SBI_ENGINES(ENGINE_ID))
CREATE MEMORY TABLE SBI_PARAMETERS(PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCTIONAL_FLAG SMALLINT DEFAULT 1 NOT NULL,DESCR VARCHAR,LENGTH SMALLINT,LABEL VARCHAR,PAR_TYPE_CD VARCHAR,MASK VARCHAR,PAR_TYPE_ID INTEGER,NAME VARCHAR,CONSTRAINT XPKSBI_PARAMETERS PRIMARY KEY(PAR_ID),CONSTRAINT FK_SBI_PARAMETERS_1 FOREIGN KEY(PAR_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID))
CREATE MEMORY TABLE SBI_PARUSE(USE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,LOV_ID INTEGER,LABEL VARCHAR,DESCR VARCHAR,PAR_ID INTEGER,NAME VARCHAR,MAN_IN INTEGER,SELECTION_TYPE VARCHAR DEFAULT 'LIST',MULTIVALUE_FLAG SMALLINT DEFAULT 0,CONSTRAINT XPKSBI_PARUSE PRIMARY KEY(USE_ID),CONSTRAINT FK_SBI_PARUSE_2 FOREIGN KEY(LOV_ID) REFERENCES SBI_LOV(LOV_ID),CONSTRAINT FK_SBI_PARUSE_1 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID))
CREATE MEMORY TABLE SBI_PARUSE_CK(CHECK_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,PROG INTEGER,CONSTRAINT XPKSBI_PARUSE_CK PRIMARY KEY(USE_ID,CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_2 FOREIGN KEY(CHECK_ID) REFERENCES SBI_CHECKS(CHECK_ID),CONSTRAINT FK_SBI_PARUSE_CK_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_PARUSE_DET(EXT_ROLE_ID INTEGER NOT NULL,PROG INTEGER,USE_ID INTEGER NOT NULL,HIDDEN_FL SMALLINT,DEFAULT_VAL VARCHAR,CONSTRAINT XPKSBI_PARUSE_DET PRIMARY KEY(USE_ID,EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_2 FOREIGN KEY(EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_PARUSE_DET_1 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID))
CREATE MEMORY TABLE SBI_SUBREPORTS(MASTER_RPT_ID INTEGER NOT NULL,SUB_RPT_ID INTEGER NOT NULL,PRIMARY KEY(MASTER_RPT_ID,SUB_RPT_ID),CONSTRAINT FK_SBI_SUBREPORTS_1 FOREIGN KEY(MASTER_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID),CONSTRAINT FK_SBI_SUBREPORTS_2 FOREIGN KEY(SUB_RPT_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID))
CREATE MEMORY TABLE SBI_OBJ_PARUSE(OBJ_PAR_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,OBJ_PAR_FATHER_ID INTEGER NOT NULL,FILTER_OPERATION VARCHAR NOT NULL,PROG INTEGER NOT NULL,FILTER_COLUMN VARCHAR NOT NULL,PRE_CONDITION VARCHAR,POST_CONDITION VARCHAR,LOGIC_OPERATOR VARCHAR,CONSTRAINT XPKSBI_OBJ_PARUSE PRIMARY KEY(OBJ_PAR_ID,USE_ID,OBJ_PAR_FATHER_ID,FILTER_OPERATION),CONSTRAINT FK_SBI_OBJ_PARUSE_1 FOREIGN KEY(OBJ_PAR_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_2 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID),CONSTRAINT FK_SBI_OBJ_PARUSE_3 FOREIGN KEY(OBJ_PAR_FATHER_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID))
CREATE MEMORY TABLE SBI_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,CONSTRAINT XPKSBI_EVENTS PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_LOG(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,EVENT_DATE TIMESTAMP DEFAULT NOW NOT NULL,DESCR VARCHAR NOT NULL,PARAMS VARCHAR NOT NULL,HANDLER VARCHAR DEFAULT 'it.eng.spagobi.events.handlers.DefaultEventPresentationHandler' NOT NULL,CONSTRAINT XPKSBI_EVENTS_LOG PRIMARY KEY(ID))
CREATE MEMORY TABLE SBI_EVENTS_ROLES(EVENT_ID INTEGER NOT NULL,ROLE_ID INTEGER NOT NULL,CONSTRAINT XPKSBI_EVENTS_ROLES PRIMARY KEY(EVENT_ID,ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_1 FOREIGN KEY(ROLE_ID) REFERENCES SBI_EXT_ROLES(EXT_ROLE_ID),CONSTRAINT FK_SBI_EVENTS_ROLES_2 FOREIGN KEY(EVENT_ID) REFERENCES SBI_EVENTS_LOG(ID))
CREATE MEMORY TABLE SBI_AUDIT(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USERNAME VARCHAR NOT NULL,USERGROUP VARCHAR,DOC_REF INTEGER,DOC_ID INTEGER,DOC_LABEL VARCHAR NOT NULL,DOC_NAME VARCHAR NOT NULL,DOC_TYPE VARCHAR NOT NULL,DOC_STATE VARCHAR NOT NULL,DOC_PARAMETERS VARCHAR,ENGINE_REF INTEGER,ENGINE_ID INTEGER,ENGINE_LABEL VARCHAR NOT NULL,ENGINE_NAME VARCHAR NOT NULL,ENGINE_TYPE VARCHAR NOT NULL,ENGINE_URL VARCHAR,ENGINE_DRIVER VARCHAR,ENGINE_CLASS VARCHAR,REQUEST_TIME TIMESTAMP NOT NULL,EXECUTION_START TIMESTAMP,EXECUTION_END TIMESTAMP,EXECUTION_TIME INTEGER,EXECUTION_STATE VARCHAR,ERROR SMALLINT,ERROR_MESSAGE VARCHAR,ERROR_CODE VARCHAR,EXECUTION_MODALITY VARCHAR,CONSTRAINT FK_SBI_AUDIT_1 FOREIGN KEY(DOC_REF) REFERENCES SBI_OBJECTS(BIOBJ_ID) ON DELETE SET NULL,CONSTRAINT FK_SBI_AUDIT_2 FOREIGN KEY(ENGINE_REF) REFERENCES SBI_ENGINES(ENGINE_ID) ON DELETE SET NULL)
CREATE MEMORY TABLE QRTZ_JOB_DETAILS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,DESCRIPTION VARCHAR(120),JOB_CLASS_NAME VARCHAR(128) NOT NULL,IS_DURABLE VARCHAR(1) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,IS_STATEFUL VARCHAR(1) NOT NULL,REQUESTS_RECOVERY VARCHAR(1) NOT NULL,JOB_DATA BINARY,PRIMARY KEY(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_JOB_LISTENERS(JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,JOB_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(JOB_NAME,JOB_GROUP,JOB_LISTENER),CONSTRAINT SYS_FK_47 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,JOB_NAME VARCHAR(80) NOT NULL,JOB_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,DESCRIPTION VARCHAR(120),NEXT_FIRE_TIME NUMERIC(13),PREV_FIRE_TIME NUMERIC(13),PRIORITY INTEGER,TRIGGER_STATE VARCHAR(16) NOT NULL,TRIGGER_TYPE VARCHAR(8) NOT NULL,START_TIME NUMERIC(13) NOT NULL,END_TIME NUMERIC(13),CALENDAR_NAME VARCHAR(80),MISFIRE_INSTR NUMERIC(2),JOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_51 FOREIGN KEY(JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP))
CREATE MEMORY TABLE QRTZ_SIMPLE_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,REPEAT_COUNT NUMERIC(7) NOT NULL,REPEAT_INTERVAL NUMERIC(12) NOT NULL,TIMES_TRIGGERED NUMERIC(7) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_55 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CRON_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,CRON_EXPRESSION VARCHAR(80) NOT NULL,TIME_ZONE_ID VARCHAR(80),PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_59 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_BLOB_TRIGGERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,BLOB_DATA BINARY,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP),CONSTRAINT SYS_FK_63 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_TRIGGER_LISTENERS(TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,TRIGGER_LISTENER VARCHAR(80) NOT NULL,PRIMARY KEY(TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),CONSTRAINT SYS_FK_67 FOREIGN KEY(TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP))
CREATE MEMORY TABLE QRTZ_CALENDARS(CALENDAR_NAME VARCHAR(80) NOT NULL PRIMARY KEY,CALENDAR BINARY NOT NULL)
CREATE MEMORY TABLE QRTZ_PAUSED_TRIGGER_GRPS(TRIGGER_GROUP VARCHAR(80) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE QRTZ_FIRED_TRIGGERS(ENTRY_ID VARCHAR(95) NOT NULL PRIMARY KEY,TRIGGER_NAME VARCHAR(80) NOT NULL,TRIGGER_GROUP VARCHAR(80) NOT NULL,IS_VOLATILE VARCHAR(1) NOT NULL,INSTANCE_NAME VARCHAR(80) NOT NULL,FIRED_TIME NUMERIC(13) NOT NULL,PRIORITY INTEGER NOT NULL,STATE VARCHAR(16) NOT NULL,JOB_NAME VARCHAR(80),JOB_GROUP VARCHAR(80),IS_STATEFUL VARCHAR(1),REQUESTS_RECOVERY VARCHAR(1))
CREATE MEMORY TABLE QRTZ_SCHEDULER_STATE(INSTANCE_NAME VARCHAR(80) NOT NULL PRIMARY KEY,LAST_CHECKIN_TIME NUMERIC(13) NOT NULL,CHECKIN_INTERVAL NUMERIC(13) NOT NULL)
CREATE MEMORY TABLE QRTZ_LOCKS(LOCK_NAME VARCHAR(40) NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE JBPM_ACTION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS CHAR(1) NOT NULL,NAME_ VARCHAR(255),ISPROPAGATIONALLOWED_ BOOLEAN,ACTIONEXPRESSION_ VARCHAR(255),ISASYNC_ BOOLEAN,REFERENCEDACTION_ BIGINT,ACTIONDELEGATION_ BIGINT,EVENT_ BIGINT,PROCESSDEFINITION_ BIGINT,TIMERNAME_ VARCHAR(255),DUEDATE_ VARCHAR(255),REPEAT_ VARCHAR(255),TRANSITIONNAME_ VARCHAR(255),TIMERACTION_ BIGINT,EXPRESSION_ VARCHAR(4000),EVENTINDEX_ INTEGER,EXCEPTIONHANDLER_ BIGINT,EXCEPTIONHANDLERINDEX_ INTEGER,CONSTRAINT FK_CRTETIMERACT_TA FOREIGN KEY(TIMERACTION_) REFERENCES JBPM_ACTION(ID_),CONSTRAINT FK_ACTION_REFACT FOREIGN KEY(REFERENCEDACTION_) REFERENCES JBPM_ACTION(ID_))
CREATE MEMORY TABLE JBPM_BYTEARRAY(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),FILEDEFINITION_ BIGINT)
CREATE MEMORY TABLE JBPM_BYTEBLOCK(PROCESSFILE_ BIGINT NOT NULL,BYTES_ VARBINARY(1024),INDEX_ INTEGER NOT NULL,PRIMARY KEY(PROCESSFILE_,INDEX_),CONSTRAINT FK_BYTEBLOCK_FILE FOREIGN KEY(PROCESSFILE_) REFERENCES JBPM_BYTEARRAY(ID_))
CREATE MEMORY TABLE JBPM_COMMENT(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION_ INTEGER NOT NULL,ACTORID_ VARCHAR(255),TIME_ TIMESTAMP,MESSAGE_ VARCHAR(4000),TOKEN_ BIGINT,TASKINSTANCE_ BIGINT,TOKENINDEX_ INTEGER,TASKINSTANCEINDEX_ INTEGER)
CREATE MEMORY TABLE JBPM_DECISIONCONDITIONS(DECISION_ BIGINT NOT NULL,TRANSITIONNAME_ VARCHAR(255),EXPRESSION_ VARCHAR(255),INDEX_ INTEGER NOT NULL,PRIMARY KEY(DECISION_,INDEX_))
CREATE MEMORY TABLE JBPM_DELEGATION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASSNAME_ VARCHAR(4000),CONFIGURATION_ VARCHAR(4000),CONFIGTYPE_ VARCHAR(255),PROCESSDEFINITION_ BIGINT)
CREATE MEMORY TABLE JBPM_EVENT(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,EVENTTYPE_ VARCHAR(255),TYPE_ CHAR(1),GRAPHELEMENT_ BIGINT,PROCESSDEFINITION_ BIGINT,NODE_ BIGINT,TRANSITION_ BIGINT,TASK_ BIGINT)
CREATE MEMORY TABLE JBPM_EXCEPTIONHANDLER(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,EXCEPTIONCLASSNAME_ VARCHAR(4000),TYPE_ CHAR(1),GRAPHELEMENT_ BIGINT,PROCESSDEFINITION_ BIGINT,GRAPHELEMENTINDEX_ INTEGER,NODE_ BIGINT,TRANSITION_ BIGINT,TASK_ BIGINT)
CREATE MEMORY TABLE JBPM_ID_GROUP(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),TYPE_ VARCHAR(255),PARENT_ BIGINT,CONSTRAINT FK_ID_GRP_PARENT FOREIGN KEY(PARENT_) REFERENCES JBPM_ID_GROUP(ID_))
CREATE MEMORY TABLE JBPM_ID_MEMBERSHIP(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),ROLE_ VARCHAR(255),USER_ BIGINT,GROUP_ BIGINT,CONSTRAINT FK_ID_MEMSHIP_GRP FOREIGN KEY(GROUP_) REFERENCES JBPM_ID_GROUP(ID_))
CREATE MEMORY TABLE JBPM_ID_PERMISSIONS(ENTITY_ BIGINT NOT NULL,CLASS_ VARCHAR(255),NAME_ VARCHAR(255),ACTION_ VARCHAR(255))
CREATE MEMORY TABLE JBPM_ID_USER(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),EMAIL_ VARCHAR(255),PASSWORD_ VARCHAR(255))
CREATE MEMORY TABLE JBPM_LOG(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,INDEX_ INTEGER,DATE_ TIMESTAMP,TOKEN_ BIGINT,PARENT_ BIGINT,MESSAGE_ VARCHAR(4000),EXCEPTION_ VARCHAR(4000),ACTION_ BIGINT,NODE_ BIGINT,ENTER_ TIMESTAMP,LEAVE_ TIMESTAMP,DURATION_ BIGINT,NEWLONGVALUE_ BIGINT,TRANSITION_ BIGINT,CHILD_ BIGINT,SOURCENODE_ BIGINT,DESTINATIONNODE_ BIGINT,VARIABLEINSTANCE_ BIGINT,OLDBYTEARRAY_ BIGINT,NEWBYTEARRAY_ BIGINT,OLDDATEVALUE_ TIMESTAMP,NEWDATEVALUE_ TIMESTAMP,OLDDOUBLEVALUE_ DOUBLE,NEWDOUBLEVALUE_ DOUBLE,OLDLONGIDCLASS_ VARCHAR(255),OLDLONGIDVALUE_ BIGINT,NEWLONGIDCLASS_ VARCHAR(255),NEWLONGIDVALUE_ BIGINT,OLDSTRINGIDCLASS_ VARCHAR(255),OLDSTRINGIDVALUE_ VARCHAR(255),NEWSTRINGIDCLASS_ VARCHAR(255),NEWSTRINGIDVALUE_ VARCHAR(255),OLDLONGVALUE_ BIGINT,OLDSTRINGVALUE_ VARCHAR(4000),NEWSTRINGVALUE_ VARCHAR(4000),TASKINSTANCE_ BIGINT,TASKACTORID_ VARCHAR(255),TASKOLDACTORID_ VARCHAR(255),SWIMLANEINSTANCE_ BIGINT,CONSTRAINT FK_LOG_OLDBYTES FOREIGN KEY(OLDBYTEARRAY_) REFERENCES JBPM_BYTEARRAY(ID_),CONSTRAINT FK_LOG_NEWBYTES FOREIGN KEY(NEWBYTEARRAY_) REFERENCES JBPM_BYTEARRAY(ID_),CONSTRAINT FK_LOG_PARENT FOREIGN KEY(PARENT_) REFERENCES JBPM_LOG(ID_),CONSTRAINT FK_LOG_ACTION FOREIGN KEY(ACTION_) REFERENCES JBPM_ACTION(ID_))
CREATE MEMORY TABLE JBPM_MESSAGE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,DESTINATION_ VARCHAR(255),EXCEPTION_ VARCHAR(4000),ISSUSPENDED_ BOOLEAN,TOKEN_ BIGINT,TEXT_ VARCHAR(255),ACTION_ BIGINT,NODE_ BIGINT,TRANSITIONNAME_ VARCHAR(255),TASKINSTANCE_ BIGINT,CONSTRAINT FK_CMD_ACTION FOREIGN KEY(ACTION_) REFERENCES JBPM_ACTION(ID_))
CREATE MEMORY TABLE JBPM_MODULEDEFINITION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(4000),PROCESSDEFINITION_ BIGINT,STARTTASK_ BIGINT)
CREATE MEMORY TABLE JBPM_MODULEINSTANCE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,PROCESSINSTANCE_ BIGINT,TASKMGMTDEFINITION_ BIGINT,NAME_ VARCHAR(255),CONSTRAINT FK_TASKMGTINST_TMD FOREIGN KEY(TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION(ID_))
CREATE MEMORY TABLE JBPM_NODE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),PROCESSDEFINITION_ BIGINT,ISASYNC_ BOOLEAN,ACTION_ BIGINT,SUPERSTATE_ BIGINT,SUBPROCESSDEFINITION_ BIGINT,DECISIONEXPRESSION_ VARCHAR(255),DECISIONDELEGATION BIGINT,SIGNAL_ INTEGER,CREATETASKS_ BOOLEAN,ENDTASKS_ BOOLEAN,NODECOLLECTIONINDEX_ INTEGER,CONSTRAINT FK_NODE_ACTION FOREIGN KEY(ACTION_) REFERENCES JBPM_ACTION(ID_),CONSTRAINT FK_DECISION_DELEG FOREIGN KEY(DECISIONDELEGATION) REFERENCES JBPM_DELEGATION(ID_),CONSTRAINT FK_NODE_SUPERSTATE FOREIGN KEY(SUPERSTATE_) REFERENCES JBPM_NODE(ID_))
CREATE MEMORY TABLE JBPM_POOLEDACTOR(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,ACTORID_ VARCHAR(255),SWIMLANEINSTANCE_ BIGINT)
CREATE INDEX IDX_PLDACTR_ACTID ON JBPM_POOLEDACTOR(ACTORID_)
CREATE MEMORY TABLE JBPM_PROCESSDEFINITION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),VERSION_ INTEGER,ISTERMINATIONIMPLICIT_ BOOLEAN,STARTSTATE_ BIGINT,CONSTRAINT FK_PROCDEF_STRTSTA FOREIGN KEY(STARTSTATE_) REFERENCES JBPM_NODE(ID_))
CREATE MEMORY TABLE JBPM_PROCESSINSTANCE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION_ INTEGER NOT NULL,START_ TIMESTAMP,END_ TIMESTAMP,ISSUSPENDED_ BOOLEAN,PROCESSDEFINITION_ BIGINT,ROOTTOKEN_ BIGINT,SUPERPROCESSTOKEN_ BIGINT,CONSTRAINT FK_PROCIN_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_))
CREATE MEMORY TABLE JBPM_RUNTIMEACTION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION_ INTEGER NOT NULL,EVENTTYPE_ VARCHAR(255),TYPE_ CHAR(1),GRAPHELEMENT_ BIGINT,PROCESSINSTANCE_ BIGINT,ACTION_ BIGINT,PROCESSINSTANCEINDEX_ INTEGER,CONSTRAINT FK_RTACTN_PROCINST FOREIGN KEY(PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_),CONSTRAINT FK_RTACTN_ACTION FOREIGN KEY(ACTION_) REFERENCES JBPM_ACTION(ID_))
CREATE MEMORY TABLE JBPM_SWIMLANE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),ACTORIDEXPRESSION_ VARCHAR(255),POOLEDACTORSEXPRESSION_ VARCHAR(255),ASSIGNMENTDELEGATION_ BIGINT,TASKMGMTDEFINITION_ BIGINT,CONSTRAINT FK_SWL_ASSDEL FOREIGN KEY(ASSIGNMENTDELEGATION_) REFERENCES JBPM_DELEGATION(ID_),CONSTRAINT FK_SWL_TSKMGMTDEF FOREIGN KEY(TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION(ID_))
CREATE MEMORY TABLE JBPM_SWIMLANEINSTANCE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),ACTORID_ VARCHAR(255),SWIMLANE_ BIGINT,TASKMGMTINSTANCE_ BIGINT,CONSTRAINT FK_SWIMLANEINST_TM FOREIGN KEY(TASKMGMTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE(ID_),CONSTRAINT FK_SWIMLANEINST_SL FOREIGN KEY(SWIMLANE_) REFERENCES JBPM_SWIMLANE(ID_))
CREATE MEMORY TABLE JBPM_TASK(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),PROCESSDEFINITION_ BIGINT,DESCRIPTION_ VARCHAR(4000),ISBLOCKING_ BOOLEAN,ISSIGNALLING_ BOOLEAN,DUEDATE_ VARCHAR(255),ACTORIDEXPRESSION_ VARCHAR(255),POOLEDACTORSEXPRESSION_ VARCHAR(255),TASKMGMTDEFINITION_ BIGINT,TASKNODE_ BIGINT,STARTSTATE_ BIGINT,ASSIGNMENTDELEGATION_ BIGINT,SWIMLANE_ BIGINT,TASKCONTROLLER_ BIGINT,CONSTRAINT FK_TASK_ASSDEL FOREIGN KEY(ASSIGNMENTDELEGATION_) REFERENCES JBPM_DELEGATION(ID_),CONSTRAINT FK_TASK_TASKNODE FOREIGN KEY(TASKNODE_) REFERENCES JBPM_NODE(ID_),CONSTRAINT FK_TASK_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_),CONSTRAINT FK_TASK_STARTST FOREIGN KEY(STARTSTATE_) REFERENCES JBPM_NODE(ID_),CONSTRAINT FK_TASK_TASKMGTDEF FOREIGN KEY(TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION(ID_),CONSTRAINT FK_TASK_SWIMLANE FOREIGN KEY(SWIMLANE_) REFERENCES JBPM_SWIMLANE(ID_))
CREATE MEMORY TABLE JBPM_TASKACTORPOOL(TASKINSTANCE_ BIGINT NOT NULL,POOLEDACTOR_ BIGINT NOT NULL,PRIMARY KEY(TASKINSTANCE_,POOLEDACTOR_),CONSTRAINT FK_TSKACTPOL_PLACT FOREIGN KEY(POOLEDACTOR_) REFERENCES JBPM_POOLEDACTOR(ID_))
CREATE MEMORY TABLE JBPM_TASKCONTROLLER(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,TASKCONTROLLERDELEGATION_ BIGINT,CONSTRAINT FK_TSKCTRL_DELEG FOREIGN KEY(TASKCONTROLLERDELEGATION_) REFERENCES JBPM_DELEGATION(ID_))
CREATE MEMORY TABLE JBPM_TASKINSTANCE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),DESCRIPTION_ VARCHAR(4000),ACTORID_ VARCHAR(255),CREATE_ TIMESTAMP,START_ TIMESTAMP,END_ TIMESTAMP,DUEDATE_ TIMESTAMP,PRIORITY_ INTEGER,ISCANCELLED_ BOOLEAN,ISSUSPENDED_ BOOLEAN,ISOPEN_ BOOLEAN,ISSIGNALLING_ BOOLEAN,ISBLOCKING_ BOOLEAN,TASK_ BIGINT,TOKEN_ BIGINT,SWIMLANINSTANCE_ BIGINT,TASKMGMTINSTANCE_ BIGINT,CONSTRAINT FK_TASKINST_TMINST FOREIGN KEY(TASKMGMTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE(ID_),CONSTRAINT FK_TASKINST_SLINST FOREIGN KEY(SWIMLANINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE(ID_),CONSTRAINT FK_TASKINST_TASK FOREIGN KEY(TASK_) REFERENCES JBPM_TASK(ID_))
CREATE INDEX IDX_TASK_ACTORID ON JBPM_TASKINSTANCE(ACTORID_)
CREATE MEMORY TABLE JBPM_TIMER(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),DUEDATE_ TIMESTAMP,REPEAT_ VARCHAR(255),TRANSITIONNAME_ VARCHAR(255),EXCEPTION_ VARCHAR(4000),ISSUSPENDED_ BOOLEAN,ACTION_ BIGINT,TOKEN_ BIGINT,PROCESSINSTANCE_ BIGINT,TASKINSTANCE_ BIGINT,GRAPHELEMENTTYPE_ VARCHAR(255),GRAPHELEMENT_ BIGINT,CONSTRAINT FK_TIMER_PRINST FOREIGN KEY(PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_),CONSTRAINT FK_TIMER_ACTION FOREIGN KEY(ACTION_) REFERENCES JBPM_ACTION(ID_),CONSTRAINT FK_TIMER_TSKINST FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_))
CREATE MEMORY TABLE JBPM_TOKEN(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VERSION_ INTEGER NOT NULL,NAME_ VARCHAR(255),START_ TIMESTAMP,END_ TIMESTAMP,NODEENTER_ TIMESTAMP,NEXTLOGINDEX_ INTEGER,ISABLETOREACTIVATEPARENT_ BOOLEAN,ISTERMINATIONIMPLICIT_ BOOLEAN,ISSUSPENDED_ BOOLEAN,NODE_ BIGINT,PROCESSINSTANCE_ BIGINT,PARENT_ BIGINT,SUBPROCESSINSTANCE_ BIGINT,CONSTRAINT FK_TOKEN_PARENT FOREIGN KEY(PARENT_) REFERENCES JBPM_TOKEN(ID_),CONSTRAINT FK_TOKEN_NODE FOREIGN KEY(NODE_) REFERENCES JBPM_NODE(ID_),CONSTRAINT FK_TOKEN_PROCINST FOREIGN KEY(PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_),CONSTRAINT FK_TOKEN_SUBPI FOREIGN KEY(SUBPROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_))
CREATE MEMORY TABLE JBPM_TOKENVARIABLEMAP(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,TOKEN_ BIGINT,CONTEXTINSTANCE_ BIGINT,CONSTRAINT FK_TKVARMAP_CTXT FOREIGN KEY(CONTEXTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE(ID_),CONSTRAINT FK_TKVARMAP_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_))
CREATE MEMORY TABLE JBPM_TRANSITION(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME_ VARCHAR(255),PROCESSDEFINITION_ BIGINT,FROM_ BIGINT,TO_ BIGINT,FROMINDEX_ INTEGER,CONSTRAINT FK_TRANSITION_TO FOREIGN KEY(TO_) REFERENCES JBPM_NODE(ID_),CONSTRAINT FK_TRANS_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_),CONSTRAINT FK_TRANSITION_FROM FOREIGN KEY(FROM_) REFERENCES JBPM_NODE(ID_))
CREATE MEMORY TABLE JBPM_VARIABLEACCESS(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,VARIABLENAME_ VARCHAR(255),ACCESS_ VARCHAR(255),MAPPEDNAME_ VARCHAR(255),PROCESSSTATE_ BIGINT,TASKCONTROLLER_ BIGINT,INDEX_ INTEGER,SCRIPT_ BIGINT,CONSTRAINT FK_VARACC_TSKCTRL FOREIGN KEY(TASKCONTROLLER_) REFERENCES JBPM_TASKCONTROLLER(ID_),CONSTRAINT FK_VARACC_SCRIPT FOREIGN KEY(SCRIPT_) REFERENCES JBPM_ACTION(ID_),CONSTRAINT FK_VARACC_PROCST FOREIGN KEY(PROCESSSTATE_) REFERENCES JBPM_NODE(ID_))
CREATE MEMORY TABLE JBPM_VARIABLEINSTANCE(ID_ BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CLASS_ CHAR(1) NOT NULL,NAME_ VARCHAR(255),CONVERTER_ CHAR(1),TOKEN_ BIGINT,TOKENVARIABLEMAP_ BIGINT,PROCESSINSTANCE_ BIGINT,BYTEARRAYVALUE_ BIGINT,DATEVALUE_ TIMESTAMP,DOUBLEVALUE_ DOUBLE,LONGIDCLASS_ VARCHAR(255),LONGVALUE_ BIGINT,STRINGIDCLASS_ VARCHAR(255),STRINGVALUE_ VARCHAR(255),TASKINSTANCE_ BIGINT,CONSTRAINT FK_VARINST_TK FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_),CONSTRAINT FK_VARINST_TKVARMP FOREIGN KEY(TOKENVARIABLEMAP_) REFERENCES JBPM_TOKENVARIABLEMAP(ID_),CONSTRAINT FK_VARINST_PRCINST FOREIGN KEY(PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_),CONSTRAINT FK_VAR_TSKINST FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_),CONSTRAINT FK_BYTEINST_ARRAY FOREIGN KEY(BYTEARRAYVALUE_) REFERENCES JBPM_BYTEARRAY(ID_))
ALTER TABLE SBI_CHECKS ADD CONSTRAINT FK_SBI_CHECKS_1 FOREIGN KEY(VALUE_TYPE_ID) REFERENCES SBI_DOMAINS(VALUE_ID)
ALTER TABLE SBI_FUNC_ROLE ADD CONSTRAINT FK_SBI_FUNC_ROLE_3 FOREIGN KEY(FUNCT_ID) REFERENCES SBI_FUNCTIONS(FUNCT_ID)
ALTER TABLE SBI_OBJ_FUNC ADD CONSTRAINT FK_SBI_OBJ_FUNC_2 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_2 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID)
ALTER TABLE SBI_OBJ_STATE ADD CONSTRAINT FK_SBI_OBJ_STATE_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID)
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_EVENT FOREIGN KEY(EVENT_) REFERENCES JBPM_EVENT(ID_)
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_EXPTHDL FOREIGN KEY(EXCEPTIONHANDLER_) REFERENCES JBPM_EXCEPTIONHANDLER(ID_)
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_ACTNDEL FOREIGN KEY(ACTIONDELEGATION_) REFERENCES JBPM_DELEGATION(ID_)
ALTER TABLE JBPM_BYTEARRAY ADD CONSTRAINT FK_BYTEARR_FILDEF FOREIGN KEY(FILEDEFINITION_) REFERENCES JBPM_MODULEDEFINITION(ID_)
ALTER TABLE JBPM_COMMENT ADD CONSTRAINT FK_COMMENT_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_COMMENT ADD CONSTRAINT FK_COMMENT_TSK FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_)
ALTER TABLE JBPM_DECISIONCONDITIONS ADD CONSTRAINT FK_DECCOND_DEC FOREIGN KEY(DECISION_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_DELEGATION ADD CONSTRAINT FK_DELEGATION_PRCD FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_NODE FOREIGN KEY(NODE_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_TRANS FOREIGN KEY(TRANSITION_) REFERENCES JBPM_TRANSITION(ID_)
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_TASK FOREIGN KEY(TASK_) REFERENCES JBPM_TASK(ID_)
ALTER TABLE JBPM_ID_MEMBERSHIP ADD CONSTRAINT FK_ID_MEMSHIP_USR FOREIGN KEY(USER_) REFERENCES JBPM_ID_USER(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_SOURCENODE FOREIGN KEY(SOURCENODE_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_CHILDTOKEN FOREIGN KEY(CHILD_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_DESTNODE FOREIGN KEY(DESTINATIONNODE_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TASKINST FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_SWIMINST FOREIGN KEY(SWIMLANEINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_NODE FOREIGN KEY(NODE_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_VARINST FOREIGN KEY(VARIABLEINSTANCE_) REFERENCES JBPM_VARIABLEINSTANCE(ID_)
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TRANSITION FOREIGN KEY(TRANSITION_) REFERENCES JBPM_TRANSITION(ID_)
ALTER TABLE JBPM_MESSAGE ADD CONSTRAINT FK_MSG_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_MESSAGE ADD CONSTRAINT FK_CMD_NODE FOREIGN KEY(NODE_) REFERENCES JBPM_NODE(ID_)
ALTER TABLE JBPM_MESSAGE ADD CONSTRAINT FK_CMD_TASKINST FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_)
ALTER TABLE JBPM_MODULEDEFINITION ADD CONSTRAINT FK_TSKDEF_START FOREIGN KEY(STARTTASK_) REFERENCES JBPM_TASK(ID_)
ALTER TABLE JBPM_MODULEDEFINITION ADD CONSTRAINT FK_MODDEF_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_MODULEINSTANCE ADD CONSTRAINT FK_MODINST_PRCINST FOREIGN KEY(PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE(ID_)
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_PROCST_SBPRCDEF FOREIGN KEY(SUBPROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_NODE_PROCDEF FOREIGN KEY(PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION(ID_)
ALTER TABLE JBPM_POOLEDACTOR ADD CONSTRAINT FK_POOLEDACTOR_SLI FOREIGN KEY(SWIMLANEINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE(ID_)
ALTER TABLE JBPM_PROCESSINSTANCE ADD CONSTRAINT FK_PROCIN_ROOTTKN FOREIGN KEY(ROOTTOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_PROCESSINSTANCE ADD CONSTRAINT FK_PROCIN_SPROCTKN FOREIGN KEY(SUPERPROCESSTOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TSK_TSKCTRL FOREIGN KEY(TASKCONTROLLER_) REFERENCES JBPM_TASKCONTROLLER(ID_)
ALTER TABLE JBPM_TASKACTORPOOL ADD CONSTRAINT FK_TASKACTPL_TSKI FOREIGN KEY(TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE(ID_)
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TASKINST_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE JBPM_TIMER ADD CONSTRAINT FK_TIMER_TOKEN FOREIGN KEY(TOKEN_) REFERENCES JBPM_TOKEN(ID_)
ALTER TABLE SBI_CHECKS ALTER COLUMN CHECK_ID RESTART WITH 137
ALTER TABLE SBI_DOMAINS ALTER COLUMN VALUE_ID RESTART WITH 113
ALTER TABLE SBI_ENGINES ALTER COLUMN ENGINE_ID RESTART WITH 122
ALTER TABLE SBI_EXT_ROLES ALTER COLUMN EXT_ROLE_ID RESTART WITH 176
ALTER TABLE SBI_FUNCTIONS ALTER COLUMN FUNCT_ID RESTART WITH 154
ALTER TABLE SBI_LOV ALTER COLUMN LOV_ID RESTART WITH 230
ALTER TABLE SBI_OBJ_PAR ALTER COLUMN OBJ_PAR_ID RESTART WITH 330
ALTER TABLE SBI_OBJECTS ALTER COLUMN BIOBJ_ID RESTART WITH 250
ALTER TABLE SBI_PARAMETERS ALTER COLUMN PAR_ID RESTART WITH 213
ALTER TABLE SBI_PARUSE ALTER COLUMN USE_ID RESTART WITH 221
ALTER TABLE SBI_EVENTS ALTER COLUMN ID RESTART WITH 405
ALTER TABLE SBI_EVENTS_LOG ALTER COLUMN ID RESTART WITH 100
ALTER TABLE SBI_AUDIT ALTER COLUMN ID RESTART WITH 0
ALTER TABLE JBPM_ACTION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_BYTEARRAY ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_COMMENT ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_DELEGATION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_EVENT ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_EXCEPTIONHANDLER ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_ID_GROUP ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_ID_MEMBERSHIP ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_ID_USER ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_LOG ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_MESSAGE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_MODULEDEFINITION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_MODULEINSTANCE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_NODE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_POOLEDACTOR ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_PROCESSDEFINITION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_PROCESSINSTANCE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_RUNTIMEACTION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_SWIMLANE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_SWIMLANEINSTANCE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TASK ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TASKCONTROLLER ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TASKINSTANCE ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TIMER ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TOKEN ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TOKENVARIABLEMAP ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_TRANSITION ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_VARIABLEACCESS ALTER COLUMN ID_ RESTART WITH 1
ALTER TABLE JBPM_VARIABLEINSTANCE ALTER COLUMN ID_ RESTART WITH 1
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 60
SET SCHEMA PUBLIC
INSERT INTO SBI_CHECKS VALUES(130,'Control if parameter is an Internet Address','CK-FIX-01','INTERNET ADDRESS',64,NULL,NULL,'Internet Address')
INSERT INTO SBI_CHECKS VALUES(131,'Control if  a parameter is Numeric','CK-FIX-02','NUMERIC',65,NULL,NULL,'Numeric')
INSERT INTO SBI_CHECKS VALUES(132,'Control if  a parameter is Alfanumeric','CK-FIX-03','ALFANUMERIC',66,NULL,NULL,'Alfanumeric')
INSERT INTO SBI_CHECKS VALUES(133,'Control if a parameter is a letter string','CK-FIX-04','LETTERSTRING',67,NULL,NULL,'Letter String')
INSERT INTO SBI_CHECKS VALUES(134,'Control if the parameter is present','CK-FIX-05','MANDATORY',68,NULL,NULL,'Mandatory')
INSERT INTO SBI_CHECKS VALUES(135,'Control if parameter is a Fiscal Code','CK-FIX-06','FISCALCODE',69,NULL,NULL,'Fiscal Code')
INSERT INTO SBI_CHECKS VALUES(136,'Control if parameter is a E-Mail','CK-FIX-07','EMAIL',70,NULL,NULL,'E-Mail')
INSERT INTO SBI_DOMAINS VALUES(36,'QUERY','Query statement','INPUT_TYPE','Input mode and values','Query statement to load list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(37,'JAVA_CLASS','Java class','INPUT_TYPE','Input mode and values','Java class to load list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(38,'SCRIPT','Script to load values','INPUT_TYPE','Input mode and values','Script to load values')
INSERT INTO SBI_DOMAINS VALUES(39,'FIX_LOV','Fixed list of values','INPUT_TYPE','Input mode and values','Predefined and hard coded list of values to choose in')
INSERT INTO SBI_DOMAINS VALUES(40,'REPORT','Report','BIOBJ_TYPE','BI Object types','Basic business intelligence objects type')
INSERT INTO SBI_DOMAINS VALUES(41,'OLAP','On-line analytical processing','BIOBJ_TYPE','BI Object types','Dimensional analysis of significant facts')
INSERT INTO SBI_DOMAINS VALUES(42,'DATA_MINING','Data mining model','BIOBJ_TYPE','BI Object types','Model to find out hidden information in data')
INSERT INTO SBI_DOMAINS VALUES(43,'DASH','Dashboard','BIOBJ_TYPE','BI Object types','Dashboard to monitor perfomance indicators')
INSERT INTO SBI_DOMAINS VALUES(44,'BOOL','Boolean','VALUE_TYPE','Input value types to check','Boolean input value type')
INSERT INTO SBI_DOMAINS VALUES(45,'SINGLE','Single value','VALUE_TYPE','Input value types to check','Only single value allowed')
INSERT INTO SBI_DOMAINS VALUES(46,'MULTI','Multivalue','VALUE_TYPE','Input value types to check','Many values are allowed')
INSERT INTO SBI_DOMAINS VALUES(47,'DATE','Date','PAR_TYPE','Parameter type','Parameter expects date values')
INSERT INTO SBI_DOMAINS VALUES(48,'NUM','Number','PAR_TYPE','Parameter type','Parameter expects numerical values')
INSERT INTO SBI_DOMAINS VALUES(49,'STRING','String','PAR_TYPE','Parameter type','Parameter expects textual values')
INSERT INTO SBI_DOMAINS VALUES(50,'FUNCT','Functional role','ROLE_TYPE','User role type','Functional role for end users')
INSERT INTO SBI_DOMAINS VALUES(51,'ADMIN','Administrative role','ROLE_TYPE','User role type','Administrative role for developer users')
INSERT INTO SBI_DOMAINS VALUES(52,'SUSP','Suspended','STATE','Object state','Document temporanlly not in use')
INSERT INTO SBI_DOMAINS VALUES(53,'PORTAL','External portal roles','ROLE_TYPE','User role type','Predefined roles in BI portal')
INSERT INTO SBI_DOMAINS VALUES(54,'LOW_FUNCT','Low level functionality','FUNCT_TYPE','Functionality','BI Functionality joined to categories tree')
INSERT INTO SBI_DOMAINS VALUES(55,'DEV','Development','STATE','Object state','Document in development phase')
INSERT INTO SBI_DOMAINS VALUES(56,'TEST','Test','STATE','Object state','Document in testing phase')
INSERT INTO SBI_DOMAINS VALUES(57,'REL','Released','STATE','Object state','Document released for end users use')
INSERT INTO SBI_DOMAINS VALUES(58,'DATE','Date','CHECK','Check','Date')
INSERT INTO SBI_DOMAINS VALUES(59,'REGEXP','Regexp','CHECK','Check','Regular Expression ')
INSERT INTO SBI_DOMAINS VALUES(60,'MAXLENGTH','Max Length','CHECK','Check','Max Length')
INSERT INTO SBI_DOMAINS VALUES(61,'RANGE','Range','CHECK','Check','Range')
INSERT INTO SBI_DOMAINS VALUES(62,'DECIMALS','Decimal','CHECK','Check','Decimal')
INSERT INTO SBI_DOMAINS VALUES(63,'MINLENGTH','Min Length','CHECK','Check','Min Length')
INSERT INTO SBI_DOMAINS VALUES(64,'INTERNET ADDRESS','Internet Address','PRED_CHECK','Pred Check','Internet Address')
INSERT INTO SBI_DOMAINS VALUES(65,'NUMERIC','Numeric','PRED_CHECK','Pred Check','Numeric')
INSERT INTO SBI_DOMAINS VALUES(66,'ALFANUMERIC','Alfanumeric','PRED_CHECK','Pred Check','Alfanumeric')
INSERT INTO SBI_DOMAINS VALUES(67,'LETTERSTRING','Letter String','PRED_CHECK','Pred Check','Letter')
INSERT INTO SBI_DOMAINS VALUES(68,'MANDATORY','Mandatory','PRED_CHECK','Check','Mandatory')
INSERT INTO SBI_DOMAINS VALUES(69,'FISCALCODE','Fiscal Code','PRED_CHECK','Pred Check','Fiscal Code')
INSERT INTO SBI_DOMAINS VALUES(70,'EMAIL','E-Mail','PRED_CHECK','Pred Check','E-Mail')
INSERT INTO SBI_DOMAINS VALUES(103,'DATAMART','Datamart Model','BIOBJ_TYPE','BI Object types','Basic business intelligence objects type')
INSERT INTO SBI_DOMAINS VALUES(104,'EXT','External Engine','ENGINE_TYPE','Engine types','Business intelligence external engine of SpagoBI platform')
INSERT INTO SBI_DOMAINS VALUES(105,'INT','Internal Engine','ENGINE_TYPE','Engine types','Business intelligence internal engine of SpagoBI platform')
INSERT INTO SBI_DOMAINS VALUES(106,'MAP','Map','BIOBJ_TYPE','BI Object types','Map')
INSERT INTO SBI_DOMAINS VALUES(107,'BOOKLET','Booklet','BIOBJ_TYPE','BI Object types','Booklet')
INSERT INTO SBI_DOMAINS VALUES(108,'LIST','List values selection','SELECTION_TYPE','Selection modality of parameter values','Single-value selection from a list')
INSERT INTO SBI_DOMAINS VALUES(109,'CHECK_LIST','CheckList values selection','SELECTION_TYPE','Selection modality of parameter values','Multi-value selection from a checklist')
INSERT INTO SBI_DOMAINS VALUES(110,'COMBOBOX','ComboBox values selection','SELECTION_TYPE','Selection modality of parameter values','Single value selection from a combobox')
INSERT INTO SBI_DOMAINS VALUES(111,'OFFICE_DOC','Office document','BIOBJ_TYPE','BI Object types','Office document')
INSERT INTO SBI_DOMAINS VALUES(112,'ETL','ETL process','BIOBJ_TYPE','BI Object types','ETL process')
INSERT INTO SBI_ENGINES VALUES(115,0,'Booklet Internal Engine','Booklet Internal Engine','','','','','','BookletInternalEng',105,'it.eng.spagobi.booklets.engines.SpagoBIBookletInternalEngine',107)
INSERT INTO SBI_ENGINES VALUES(116,0,'Office Document Internal Engine','Office Document Internal Engine','','','','','','OfficeDocumentInternalEng',105,'it.eng.spagobi.engines.officeDocuments.SpagoBIOfficeDocumentInternalEngine',111)
INSERT INTO SBI_ENGINES VALUES(117,0,'Dashboard Composition Internal Engine','Dashboard Composition Internal Engine','','','','','','DashboardCompIE',105,'it.eng.spagobi.engines.dashboardscomposition.SpagoBIDashboardsCompositionInternalEngine',43)
INSERT INTO SBI_ENGINES VALUES(118,0,'Report Jasper External Engine','Report Jasper External Engine','http://localhost:8080/SpagoBIJasperReportEngine/JasperReportServlet','','','','it.eng.spagobi.drivers.jasperreport.JasperReportDriver','REP-JASP-EXT',104,'',40)
INSERT INTO SBI_ENGINES VALUES(119,0,'OLAP Jpivot-Mondrian External Engine','OLAP Jpivot-Mondrian External Engine','http://localhost:8080/SpagoBIJPivotEngine/JPivotServlet','','','','it.eng.spagobi.drivers.jpivot.JPivotDriver','OLAP-JP-MONDRIAN-EXT',104,'',41)
INSERT INTO SBI_ENGINES VALUES(120,0,'Qbe External Engine','Qbe External Engine','http://localhost:8080/SpagoBIQbeEngine/servlet/AdapterHTTP?ACTION_NAME=SPAGO_BI_START_ACTION&NEW_SESSION=TRUE','','','','it.eng.spagobi.drivers.qbe.QbeDriver','QBE-EXT',104,'',103)
INSERT INTO SBI_ENGINES VALUES(121,0,'Dashboard Internal Engine','Dashboard Internal Engine','','','','','','DASH-INT',105,'it.eng.spagobi.engines.dashboard.SpagoBIDashboardInternalEngine',43)
INSERT INTO SBI_EXT_ROLES VALUES(155,'/admin','the /admin group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(156,'/community','the /community group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(157,'/community/direction','the /community/direction group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(158,'/community/editors','the /community/editors group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(159,'/community/hr','the /community/hr group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(160,'/guest','the /guest group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(161,'/portal','the /portal group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(162,'/portal/admin','the /portal/admin group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(163,'/portal/share','the /portal/share group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(164,'/portal/site','the /portal/site group',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(165,'/spagobi','spagobi',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(166,'/spagobi/admin','',NULL,'PORTAL',53)
INSERT INTO SBI_EXT_ROLES VALUES(167,'/user','the /user group',NULL,'PORTAL',53)
INSERT INTO SBI_FUNC_ROLE VALUES(166,151,'DEV',55)
INSERT INTO SBI_FUNC_ROLE VALUES(166,151,'TEST',56)
INSERT INTO SBI_FUNC_ROLE VALUES(166,151,'REL',57)
INSERT INTO SBI_FUNC_ROLE VALUES(166,152,'DEV',55)
INSERT INTO SBI_FUNC_ROLE VALUES(166,152,'TEST',56)
INSERT INTO SBI_FUNC_ROLE VALUES(166,152,'REL',57)
INSERT INTO SBI_FUNC_ROLE VALUES(166,153,'DEV',55)
INSERT INTO SBI_FUNC_ROLE VALUES(166,153,'TEST',56)
INSERT INTO SBI_FUNC_ROLE VALUES(166,153,'REL',57)
INSERT INTO SBI_FUNCTIONS VALUES(150,'LOW_FUNCT',NULL,'Functionalities','Functionalities','/Functionalities','Functionalities',1,54)
INSERT INTO SBI_FUNCTIONS VALUES(151,'LOW_FUNCT',150,'Administration Documents','','/Functionalities/ADMIN','ADMIN',5,54)
INSERT INTO SBI_FUNCTIONS VALUES(152,'LOW_FUNCT',151,'Auditing','','/Functionalities/ADMIN/ADMIN_AUDIT','ADMIN_AUDIT',1,54)
INSERT INTO SBI_FUNCTIONS VALUES(153,'LOW_FUNCT',151,'Monitoring','','/Functionalities/ADMIN/ADMIN_MONITOR','ADMIN_MONITOR',2,54)
INSERT INTO SBI_LOV VALUES(100,'Current month of the year format mm','CURRENT_MONTH_YEAR','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000areturnValue(monthStr);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current month of the year')
INSERT INTO SBI_LOV VALUES(101,'Current year format yyyy','CURRENT_YEAR','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString yearStr = year.toString();\u000d\u000areturnValue(yearStr);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current year')
INSERT INTO SBI_LOV VALUES(102,'Current month format mm/yyyy','CURRENT_MONTH','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current month')
INSERT INTO SBI_LOV VALUES(103,'Current date format dd/mm/yyyy','CURRENT_DATE','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>Date now = new Date();\u000d\u000aint day = now.getDate();\u000d\u000aString dayStr = day.toString();\u000d\u000aif (day < 10) dayStr = ''0'' + dayStr;\u000d\u000aint month = now.getMonth() + 1;\u000d\u000aString monthStr = month.toString();\u000d\u000aif (month < 10) monthStr = ''0'' + monthStr;\u000d\u000aint year = now.getYear() + 1900;\u000d\u000aString toReturn = dayStr + ''/'' + monthStr + ''/'' + year.toString();\u000d\u000areturnValue(toReturn);</SCRIPT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Current date')
INSERT INTO SBI_LOV VALUES(214,'List of all the available output types','OUTPUT_TYPE','FIX_LOV',NULL,'<FIXLISTLOV><ROWS><ROW VALUE="HTML" DESCRIPTION="HTML"/><ROW VALUE="PDF" DESCRIPTION="PDF"/><ROW VALUE="XLS" DESCRIPTION="XLS"/><ROW VALUE="CSV" DESCRIPTION="CSV"/><ROW VALUE="TXT" DESCRIPTION="TXT"/><ROW VALUE="XML" DESCRIPTION="XML"/><ROW VALUE="JPG" DESCRIPTION="JPG"/></ROWS><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>DESCRIPTION</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE,DESCRIPTION</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></FIXLISTLOV>',39,NULL,'Output Type')
INSERT INTO SBI_LOV VALUES(215,'Connection to SpagoBI metadata','CONNECTION_SPAGOBI','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>returnValue(''spagobi'')</SCRIPT><VALUE-COLUMN>value</VALUE-COLUMN><DESCRIPTION-COLUMN>value</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>value</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Connection to SpagoBI metadata')
INSERT INTO SBI_LOV VALUES(216,'Output Type PDF','OUTPUT_PDF','FIX_LOV',NULL,'<FIXLISTLOV><ROWS><ROW VALUE="PDF" DESCRIPTION="PDF"/></ROWS><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>DESCRIPTION</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>DESCRIPTION</VISIBLE-COLUMNS><INVISIBLE-COLUMNS>VALUE</INVISIBLE-COLUMNS></FIXLISTLOV>',39,NULL,'Output Type PDF')
INSERT INTO SBI_LOV VALUES(217,'SpagoBI checks list','SBI_CHECK_LIST','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select check_id as ID, name, label, descr as description, value_type_cd as type,         (select count(distinct sbi_paruse.par_id) \u000a         FROM sbi_paruse, sbi_paruse_ck \u000a         WHERE sbi_paruse_ck.check_id = sbi_checks.check_id and\u000a         sbi_paruse.use_id = sbi_paruse_ck.use_id) AS parameters from sbi_checks order by name</STMT><VALUE-COLUMN>ID</VALUE-COLUMN><DESCRIPTION-COLUMN>NAME</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>NAME,LABEL,DESCRIPTION,TYPE,PARAMETERS</VISIBLE-COLUMNS><INVISIBLE-COLUMNS>ID</INVISIBLE-COLUMNS></QUERY>',36,NULL,'SpagoBI checks list')
INSERT INTO SBI_LOV VALUES(218,'Dashboard BIRT','SBI_DASH_BIRT','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''REP-BIRT-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard BIRT')
INSERT INTO SBI_LOV VALUES(219,'Dashboard SpagoBI-Dashboard','SBI_DASH_DASHBOARD','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''DASH-INT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard SpagoBI-Dashboard')
INSERT INTO SBI_LOV VALUES(220,'Dashboard Geo','SBI_DASH_GEO','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''GEO-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard Geo')
INSERT INTO SBI_LOV VALUES(221,'Dashboard JASPER','SBI_DASH_JASPER','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''REP-JASP-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard JASPER')
INSERT INTO SBI_LOV VALUES(222,'Dashboard MONDRIAN','SBI_DASH_MONDRIAN','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''OLAP-JP-MONDRIAN-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard MONDRIAN')
INSERT INTO SBI_LOV VALUES(223,'Dashboard QbE','SBI_DASH_QBE','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''QBE-ENG-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard QbE')
INSERT INTO SBI_LOV VALUES(224,'Dashboard WEKA','SBI_DASH_WEKA','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines\u000awhere sbi_engines.label = ''DATAM-WEKA-EXT''\u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard WEKA')
INSERT INTO SBI_LOV VALUES(225,'SpagoBI documents list','SBI_DOC_LIST','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select biobj_id as ID, name, label, descr as Description, biobj_type_cd as Type, (select count(*) FROM sbi_parameters p,sbi_obj_par o WHERE p.par_id = o.par_id AND o.biobj_id=sbi_objects.biobj_id) AS Parameters from sbi_objects order by name</STMT><VALUE-COLUMN>ID</VALUE-COLUMN><DESCRIPTION-COLUMN>NAME</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>NAME,LABEL,DESCRIPTION,TYPE,PARAMETERS</VISIBLE-COLUMNS><INVISIBLE-COLUMNS>ID</INVISIBLE-COLUMNS></QUERY>',36,NULL,'SpagoBI documents list')
INSERT INTO SBI_LOV VALUES(226,'Engines monitoring dashboard','SBI_ENGINE_DASHBOARD','SCRIPT',NULL,'<SCRIPTLOV><SCRIPT>StringBuffer buf = new StringBuffer();\u000aRandom rand = new Random();\u000abuf.append(''<rows>'');\u000a\u000abuf.append(''<row Product_line=\''Red Wing\''  Score=\'' '');\u000afloat perm1 = 220 + ((rand.nextFloat() * 100) % 30);\u000abuf.append(perm1);\u000abuf.append(''\'' />'');\u000a\u000abuf.append(''<row Product_line=\''Fort West\''  Score=\'' '');\u000afloat perm2 = 280 + ((rand.nextFloat() * 100) % 20);\u000abuf.append(perm2);\u000abuf.append(''\'' />'');\u000a\u000abuf.append(''<row Product_line=\''Fast\''  Score=\'' '');\u000afloat perm3 = 210 + ((rand.nextFloat() * 100) % 30);\u000abuf.append(perm3);\u000abuf.append(''\'' />'');\u000a\u000abuf.append(''<row Product_line=\''Landslide\''  Score=\'' '');\u000afloat perm4 = 140 + ((rand.nextFloat() * 10) % 10);\u000abuf.append(perm4);\u000abuf.append(''\'' />'');\u000a\u000abuf.append(''<row Product_line=\''Horatio\''  Score=\'' '');\u000afloat perm5 = 190 + ((rand.nextFloat() * 100) % 40);\u000abuf.append(perm5);\u000abuf.append(''\'' />'');\u000a\u000abuf.append(''</rows>'')\u000areturn buf;</SCRIPT><VALUE-COLUMN>Product_line</VALUE-COLUMN><DESCRIPTION-COLUMN>Product_line</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>Product_line,Score</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></SCRIPTLOV>',38,NULL,'Engines monitoring dashboard')
INSERT INTO SBI_LOV VALUES(227,'SpagoBI LOV list','SBI_LOV_LIST','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select lov_id as ID, name, label, descr as description, input_type_cd as type, (select count(distinct sbi_paruse.par_id) \u000a         FROM sbi_paruse\u000a         WHERE sbi_paruse.lov_id = sbi_lov.lov_id) AS parameters from sbi_lov order by name</STMT><VALUE-COLUMN>ID</VALUE-COLUMN><DESCRIPTION-COLUMN>NAME</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>NAME,LABEL,DESCRIPTION,TYPE,PARAMETERS</VISIBLE-COLUMNS><INVISIBLE-COLUMNS>ID</INVISIBLE-COLUMNS></QUERY>',36,NULL,'SpagoBI LOV list')
INSERT INTO SBI_LOV VALUES(228,'SpagoBI parameters list','SBI_PAR_LIST','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select par_id as ID, name, label, descr as description, par_type_cd as type, (select count(*) from sbi_objects o,sbi_obj_par o_par where o.biobj_id=o_par.biobj_id and o_par.par_id=sbi_parameters.par_id) as documents from sbi_parameters order by name</STMT><VALUE-COLUMN>ID</VALUE-COLUMN><DESCRIPTION-COLUMN>NAME</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>NAME,LABEL,DESCRIPTION,TYPE,DOCUMENTS</VISIBLE-COLUMNS><INVISIBLE-COLUMNS>ID</INVISIBLE-COLUMNS></QUERY>',36,NULL,'SpagoBI parameters list')
INSERT INTO SBI_LOV VALUES(229,'Dashboard Dossier','SBI_DASH_DOSSIER','QUERY',NULL,'<QUERY><CONNECTION>spagobi</CONNECTION><STMT>select avg(execution_time) as value from sbi_audit, sbi_engines where sbi_engines.label = ''BOOK-INT'' \u000aand sbi_audit.doc_label NOT LIKE ''SBI_%''\u000aand sbi_engines.engine_id = sbi_audit.engine_id</STMT><VALUE-COLUMN>VALUE</VALUE-COLUMN><DESCRIPTION-COLUMN>VALUE</DESCRIPTION-COLUMN><VISIBLE-COLUMNS>VALUE</VISIBLE-COLUMNS><INVISIBLE-COLUMNS></INVISIBLE-COLUMNS></QUERY>',36,NULL,'Dashboard Dossier')
INSERT INTO SBI_OBJ_FUNC VALUES(226,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(227,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(228,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(229,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(230,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(231,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(232,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(233,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(234,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(235,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(236,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(237,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(238,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(239,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(240,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(241,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(242,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(243,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(244,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(245,152,0)
INSERT INTO SBI_OBJ_FUNC VALUES(246,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(247,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(248,153,0)
INSERT INTO SBI_OBJ_FUNC VALUES(249,153,0)
INSERT INTO SBI_OBJ_PAR VALUES(209,236,'Check',0,0,0,0,1,'check_id',312,1)
INSERT INTO SBI_OBJ_PAR VALUES(206,236,'Output Format',0,0,0,0,1,'param_output_format',313,2)
INSERT INTO SBI_OBJ_PAR VALUES(211,236,'Connection',0,0,0,0,1,'connectionName',314,3)
INSERT INTO SBI_OBJ_PAR VALUES(210,238,'Document',0,0,0,0,1,'obj_id',315,1)
INSERT INTO SBI_OBJ_PAR VALUES(206,238,'Output Format',0,0,0,0,1,'param_output_format',316,2)
INSERT INTO SBI_OBJ_PAR VALUES(211,238,'Connection',0,0,0,0,1,'connectionName',317,3)
INSERT INTO SBI_OBJ_PAR VALUES(208,240,'LOV',0,0,0,0,1,'lov_id',318,1)
INSERT INTO SBI_OBJ_PAR VALUES(206,240,'Output Format',0,0,0,0,1,'param_output_format',319,2)
INSERT INTO SBI_OBJ_PAR VALUES(211,240,'Connection',0,0,0,0,1,'connectionName',320,3)
INSERT INTO SBI_OBJ_PAR VALUES(207,245,'Parameter',0,0,0,0,1,'Parameter',321,1)
INSERT INTO SBI_OBJ_PAR VALUES(206,245,'Output Format',0,0,0,0,1,'param_output_format',322,2)
INSERT INTO SBI_OBJ_PAR VALUES(211,245,'Connection',0,0,0,0,1,'connectionName',323,3)
INSERT INTO SBI_OBJ_PAR VALUES(211,246,'Connection',0,0,0,0,1,'connectionName',324,1)
INSERT INTO SBI_OBJ_PAR VALUES(205,248,'Top',0,0,0,0,1,'ParTop',325,1)
INSERT INTO SBI_OBJ_PAR VALUES(211,248,'Connection',0,0,0,0,1,'connectionName',326,2)
INSERT INTO SBI_OBJ_PAR VALUES(212,248,'Output Format',0,0,0,0,1,'param_output_format',327,3)
INSERT INTO SBI_OBJ_PAR VALUES(211,249,'Connection',0,0,0,0,1,'connectionName',328,1)
INSERT INTO SBI_OBJ_PAR VALUES(212,249,'Output Format',0,0,0,0,1,'param_output_format',329,2)
INSERT INTO SBI_OBJECTS VALUES(226,121,'','SBI_DASH_BIRT',0,'/BIObjects/bb3bc7b8-3164-11dc-8802-154c75dff3df','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Birt efficiency',1,'bb3bc7b8-3164-11dc-8802-154c75dff3df')
INSERT INTO SBI_OBJECTS VALUES(227,121,'','SBI_DASH_DASHBOARD',0,'/BIObjects/40d3a06f-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Dashboard efficiency',0,'40d3a06f-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(228,121,'','SBI_DASH_DOSSIER',0,'/BIObjects/59a255b0-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Dossier efficiency',0,'59a255b0-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(229,121,'','SBI_ENGINE_DASHBOARD',0,'/BIObjects/79ab79e1-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Engines monitoring dashboard',0,'79ab79e1-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(230,121,'','SBI_DASH_GEO',0,'/BIObjects/8f270c82-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Geo efficiency',0,'8f270c82-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(231,121,'','SBI_DASH_MONDRIAN',0,'/BIObjects/a9e4e793-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'JPivot-Mondrian efficiency',0,'a9e4e793-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(232,121,'','SBI_DASH_JASPER',0,'/BIObjects/bf3599a4-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Jasper efficiency',0,'bf3599a4-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(233,121,'','SBI_DASH_QBE',0,'/BIObjects/dae7e6d5-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'QbE efficiency',0,'dae7e6d5-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(234,121,'','SBI_DASH_WEKA',0,'/BIObjects/f45e9be6-3183-11dc-b177-c77073ec0d3e','',57,'REL','DASH',43,NULL,NULL,NULL,NULL,NULL,'Weka efficiency',0,'f45e9be6-3183-11dc-b177-c77073ec0d3e')
INSERT INTO SBI_OBJECTS VALUES(235,118,'','SBI_CHECKFORM_SUBPAR',0,'/BIObjects/ef3d6c91-318a-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Check form - parameters detail',0,'ef3d6c91-318a-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(236,118,'','SBI_CHECKFORM',0,'/BIObjects/08017372-318b-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Check form',1,'08017372-318b-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(237,118,'','SBI_DOCFORM_SUBPAR',0,'/BIObjects/cab13bd3-318b-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Document form - parameters detail',0,'cab13bd3-318b-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(238,118,'','SBI_DOCUMENTFORM',0,'/BIObjects/e6bd8fe4-318b-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Document form',1,'e6bd8fe4-318b-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(239,118,'','SBI_LOVFORM_SUBPAR',0,'/BIObjects/42d4b245-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'LOV form - parameters detail',0,'42d4b245-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(240,118,'','SBI_LOVFORM',0,'/BIObjects/60825a46-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'LOV form',1,'60825a46-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(241,118,'','SBI_PARFORM_SUBCHE',0,'/BIObjects/a7b3c167-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Parameter form - checks details',0,'a7b3c167-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(242,118,'','SBI_PARFORM_SUBDOC',0,'/BIObjects/becd73a8-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Parameter form - documents details',0,'becd73a8-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(243,118,'','SBI_PARFORM_SUBLOV',0,'/BIObjects/d60423c9-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Parameter form - lov details',0,'d60423c9-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(244,118,'','SBI_PARFORM_SUBROL',0,'/BIObjects/e89f04aa-318c-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Parameter form - roles details',0,'e89f04aa-318c-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(245,118,'','SBI_PARAMETERFORM',0,'/BIObjects/10cf8fdb-318d-11dc-b105-91cda57297a3','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Parameter form',1,'10cf8fdb-318d-11dc-b105-91cda57297a3')
INSERT INTO SBI_OBJECTS VALUES(246,119,'','SBI_OLAP_MONITOR',0,'/BIObjects/5c71444e-3194-11dc-9c9d-e5b6cf2e34f6','',57,'REL','OLAP',41,NULL,NULL,NULL,NULL,NULL,'Olap for SpagoBI  monitoring ',1,'5c71444e-3194-11dc-9c9d-e5b6cf2e34f6')
INSERT INTO SBI_OBJECTS VALUES(247,120,'','SBI_QBE_MONITOR',0,'/BIObjects/8a8f56f7-3195-11dc-899d-a7f4cc4442a3','',57,'REL','DATAMART',103,NULL,NULL,NULL,NULL,NULL,'QBE for monitoring SpagoBI',1,'8a8f56f7-3195-11dc-899d-a7f4cc4442a3')
INSERT INTO SBI_OBJECTS VALUES(248,118,'','SBI_DOC_USER',0,'/BIObjects/a0035312-3196-11dc-a19e-d393b84f04a1','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Requests by usergroups',1,'a0035312-3196-11dc-a19e-d393b84f04a1')
INSERT INTO SBI_OBJECTS VALUES(249,118,'','SBI_DOC_MOD',0,'/BIObjects/4946edb3-3197-11dc-a19e-d393b84f04a1','',57,'REL','REPORT',40,NULL,NULL,NULL,NULL,NULL,'Documents by execution modality',1,'4946edb3-3197-11dc-a19e-d393b84f04a1')
INSERT INTO SBI_PARAMETERS VALUES(205,1,'Top n values',0,'TOP_N','STRING','',49,'Top n values')
INSERT INTO SBI_PARAMETERS VALUES(206,1,'List of all the available output types',0,'OUTPUT_TYPE','STRING','',49,'Output Type')
INSERT INTO SBI_PARAMETERS VALUES(207,1,'List of all the existing SpagoBI parameters',0,'SBI_PARAM_LIST','STRING','',49,'Parameters List')
INSERT INTO SBI_PARAMETERS VALUES(208,1,'List of all the existing SpagoBI LOV',0,'SBI_LOV_LIST','STRING','',49,'LOV List')
INSERT INTO SBI_PARAMETERS VALUES(209,1,'List of all the existing SpagoBI checks',0,'SBI_CHECK_LIST','STRING','',49,'Check List')
INSERT INTO SBI_PARAMETERS VALUES(210,1,'List of all the existing SpagoBI documents',0,'SBI_DOC_LIST','STRING','',49,'Documents List')
INSERT INTO SBI_PARAMETERS VALUES(211,1,'',0,'CONNECTION_SPAGOBI','STRING','',49,'Connection to SpagoBI metadata')
INSERT INTO SBI_PARAMETERS VALUES(212,1,'Output Type PDF',0,'OUTPUT_PDF','STRING','',49,'Output Type PDF')
INSERT INTO SBI_PARUSE VALUES(213,NULL,'USE_MANUAL_INPUT','',205,'Manual input',1,NULL,0)
INSERT INTO SBI_PARUSE VALUES(214,214,'USE_ALL','',206,'Complete output types list',0,'COMBOBOX',0)
INSERT INTO SBI_PARUSE VALUES(215,228,'USE_ALL','Complete parameters list',207,'Complete parameters list',0,'LIST',0)
INSERT INTO SBI_PARUSE VALUES(216,227,'USE_ALL','Complete LOV list',208,'Complete LOV list',0,'LIST',0)
INSERT INTO SBI_PARUSE VALUES(217,217,'USE_ALL','Complete check list',209,'Complete check list',0,'LIST',0)
INSERT INTO SBI_PARUSE VALUES(218,225,'USE_ALL','Complete document list',210,'Complete document list',0,'LIST',0)
INSERT INTO SBI_PARUSE VALUES(219,215,'USE_ALL','',211,'USE_ALL',0,'LIST',0)
INSERT INTO SBI_PARUSE VALUES(220,216,'USE_ALL','',212,'USE_ALL',0,'LIST',0)
INSERT INTO SBI_PARUSE_CK VALUES(134,213,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,214,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,215,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,216,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,217,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,218,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,219,NULL)
INSERT INTO SBI_PARUSE_CK VALUES(134,220,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,213,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,214,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,215,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,216,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,217,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,218,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,219,NULL,NULL)
INSERT INTO SBI_PARUSE_DET VALUES(166,NULL,220,NULL,NULL)
INSERT INTO SBI_SUBREPORTS VALUES(236,235)
INSERT INTO SBI_SUBREPORTS VALUES(238,237)
INSERT INTO SBI_SUBREPORTS VALUES(240,239)
INSERT INTO SBI_SUBREPORTS VALUES(245,241)
INSERT INTO SBI_SUBREPORTS VALUES(245,242)
INSERT INTO SBI_SUBREPORTS VALUES(245,243)
INSERT INTO SBI_SUBREPORTS VALUES(245,244)
INSERT INTO QRTZ_LOCKS VALUES('CALENDAR_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('JOB_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('MISFIRE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('STATE_ACCESS')
INSERT INTO QRTZ_LOCKS VALUES('TRIGGER_ACCESS')
