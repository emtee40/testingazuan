CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE SBI_CHECKS(CHECK_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,VALUE_TYPE_CD VARCHAR,VALUE_TYPE_ID INTEGER,VALUE_1 VARCHAR,VALUE_2 VARCHAR,NAME VARCHAR)
CREATE MEMORY TABLE SBI_DOMAINS(VALUE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,VALUE_CD VARCHAR,VALUE_NM VARCHAR,DOMAIN_CD VARCHAR,DOMAIN_NM VARCHAR,VALUE_DS VARCHAR)
CREATE MEMORY TABLE SBI_ENGINES(ENGINE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENCRYPT SMALLINT,NAME VARCHAR,DESCR VARCHAR,MAIN_URL VARCHAR,SECN_URL VARCHAR,OBJ_UPL_DIR VARCHAR,OBJ_USE_DIR VARCHAR,DRIVER_NM VARCHAR,LABEL VARCHAR,ENGINE_TYPE INTEGER,CLASS_NM VARCHAR,BIOBJ_TYPE INTEGER)
CREATE MEMORY TABLE SBI_EXT_ROLES(EXT_ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,NAME VARCHAR,DESCR VARCHAR,CODE VARCHAR,ROLE_TYPE_CD VARCHAR,ROLE_TYPE_ID INTEGER)
CREATE MEMORY TABLE SBI_FUNC_ROLE(ROLE_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,STATE_CD VARCHAR,STATE_ID INTEGER NOT NULL)
CREATE MEMORY TABLE SBI_FUNCTIONS(FUNCT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCT_TYPE_CD VARCHAR,PARENT_FUNCT_ID INTEGER,NAME VARCHAR,DESCR VARCHAR,PATH VARCHAR,CODE VARCHAR,FUNCT_TYPE_ID INTEGER)
CREATE MEMORY TABLE SBI_LOV(LOV_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,DESCR VARCHAR,LABEL VARCHAR,INPUT_TYPE_CD VARCHAR,DEFAULT_VAL VARCHAR,LOV_PROVIDER VARCHAR,INPUT_TYPE_ID INTEGER,PROFILE_ATTR VARCHAR,NAME VARCHAR)
CREATE MEMORY TABLE SBI_OBJ_FUNC(BIOBJ_ID INTEGER NOT NULL,FUNCT_ID INTEGER NOT NULL,PROG INTEGER)
CREATE MEMORY TABLE SBI_OBJ_PAR(PAR_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL,LABEL VARCHAR,REQ_FL SMALLINT,MOD_FL SMALLINT,VIEW_FL SMALLINT,MULT_FL SMALLINT,PROG INTEGER NOT NULL,PARURL_NM VARCHAR,OBJ_PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,PRIORITY INTEGER)
CREATE MEMORY TABLE SBI_OBJ_STATE(BIOBJ_ID INTEGER NOT NULL,STATE_ID INTEGER NOT NULL,END_DT DATE,START_DT DATE NOT NULL,NOTE VARCHAR)
CREATE MEMORY TABLE SBI_OBJECTS(BIOBJ_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,ENGINE_ID INTEGER,DESCR VARCHAR,LABEL VARCHAR,ENCRYPT SMALLINT,PATH VARCHAR,REL_NAME VARCHAR,STATE_ID INTEGER,STATE_CD VARCHAR,BIOBJ_TYPE_CD VARCHAR,BIOBJ_TYPE_ID INTEGER,SCHED_FL SMALLINT,EXEC_MODE_ID INTEGER,STATE_CONS_ID INTEGER,EXEC_MODE_CD VARCHAR,STATE_CONS_CD VARCHAR,NAME VARCHAR,VISIBLE SMALLINT,UUID VARCHAR)
CREATE MEMORY TABLE SBI_PARAMETERS(PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,FUNCTIONAL_FLAG SMALLINT DEFAULT 1 NOT NULL,DESCR VARCHAR,LENGTH SMALLINT,LABEL VARCHAR,PAR_TYPE_CD VARCHAR,MASK VARCHAR,PAR_TYPE_ID INTEGER,NAME VARCHAR)
CREATE MEMORY TABLE SBI_PARUSE(USE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,LOV_ID INTEGER,LABEL VARCHAR,DESCR VARCHAR,PAR_ID INTEGER,NAME VARCHAR,MAN_IN INTEGER,SELECTION_TYPE VARCHAR DEFAULT 'LIST' NOT NULL,MULTIVALUE_FLAG SMALLINT DEFAULT 0 NOT NULL)
CREATE MEMORY TABLE SBI_PARUSE_CK(CHECK_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,PROG INTEGER)
CREATE MEMORY TABLE SBI_PARUSE_DET(EXT_ROLE_ID INTEGER NOT NULL,PROG INTEGER,USE_ID INTEGER NOT NULL,HIDDEN_FL SMALLINT,DEFAULT_VAL VARCHAR)
CREATE MEMORY TABLE SBI_SUBREPORTS(MASTER_RPT_ID INTEGER NOT NULL,SUB_RPT_ID INTEGER NOT NULL)
CREATE MEMORY TABLE SBI_OBJ_PARUSE(OBJ_PAR_ID INTEGER NOT NULL,USE_ID INTEGER NOT NULL,OBJ_PAR_FATHER_ID INTEGER NOT NULL,FILTER_COLUMN VARCHAR NOT NULL,FILTER_OPERATION VARCHAR NOT NULL)
CREATE MEMORY TABLE SBI_EVENTS(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL)
CREATE MEMORY TABLE SBI_EVENTS_LOG(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL,USER_EVENT VARCHAR NOT NULL,EVENT_DATE TIMESTAMP DEFAULT NOW NOT NULL,DESCR VARCHAR NOT NULL,PARAMS VARCHAR NOT NULL,HANDLER VARCHAR DEFAULT 'it.eng.spagobi.events.handlers.DefaultEventPresentationHandler' NOT NULL)
CREATE MEMORY TABLE SBI_EVENTS_ROLES(EVENT_ID INTEGER NOT NULL, ROLE_ID INTEGER NOT NULL)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 60
SET SCHEMA PUBLIC
