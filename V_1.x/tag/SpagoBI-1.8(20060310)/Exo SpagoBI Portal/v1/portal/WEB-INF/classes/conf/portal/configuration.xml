<?xml version="1.0" encoding="ISO-8859-1"?>

<configuration>
  <service-configuration 
    key="org.exoplatform.services.organization.OrganizationService"
    type="org.exoplatform.services.organization.hibernate.OrganizationServiceImpl"/>

  <service-configuration type="org.exoplatform.services.organization.hibernate.HibernateOrganizationImporterExporter"/>
  <service-configuration type="org.exoplatform.services.organization.hibernate.OrganizationServiceListenerImpl">
    <object-param>
      <name>organization.configuration</name>
      <type>org.exoplatform.services.organization.hibernate.OrganizationConfig</type>
      <description>Configure default role , group, membership , user when platform start</description>

      <!-- The create the following membership type when the platform startup --> 
      <!-- The member membership is mandatory -->       
      <property name="membershipType[0]" value="#new OrganizationConfig$MembershipType" />
      <property name="membershipType[0].type" value="member" />
      <property name="membershipType[0].description" value="This membership is used to tell if an user is in a group or not" />

      <!-- The create the following group when the platform startup --> 
      <property name="group[0]" value="#new OrganizationConfig$Group" />
      <property name="group[0].name" value="portal" />
      <property name="group[0].parentId" value="" />
      <property name="group[0].type" value="hierachy" />
      <property name="group[0].description" value="The portal group" />

      <property name="group[1]" value="#new OrganizationConfig$Group" />
      <property name="group[1].name" value="site" />
      <property name="group[1].parentId" value="/portal" />
      <property name="group[1].type" value="hierachy" />
      <property name="group[1].description" value="The portal site group" />

      <property name="group[2]" value="#new OrganizationConfig$Group" />
      <property name="group[2].name" value="admin" />
      <property name="group[2].parentId" value="/portal" />
      <property name="group[2].type" value="hierachy" />
      <property name="group[2].description" value="The portal admin group" />

      <property name="group[3]" value="#new OrganizationConfig$Group" />
      <property name="group[3].name" value="share" />
      <property name="group[3].parentId" value="/portal" />
      <property name="group[3].type" value="hierachy" />
      <property name="group[3].description" value="The portal share group" />

      <property name="group[4]" value="#new OrganizationConfig$Group" />
      <property name="group[4].name" value="admin" />
      <property name="group[4].parentId" value="" />
      <property name="group[4].type" value="hierachy" />
      <property name="group[4].description" value="The admin group" />
      
      <property name="group[5]" value="#new OrganizationConfig$Group" />
      <property name="group[5].name" value="user" />
      <property name="group[5].parentId" value="" />
      <property name="group[5].type" value="hierachy" />
      <property name="group[5].description" value="The user group" />      
      
      <property name="group[6]" value="#new OrganizationConfig$Group" />
      <property name="group[6].name" value="guest" />
      <property name="group[6].parentId" value="" />
      <property name="group[6].type" value="hierachy" />
      <property name="group[6].description" value="The guest group" />     

      <property name="group[7]" value="#new OrganizationConfig$Group" />
      <property name="group[7].name" value="spagobi" />
      <property name="group[7].parentId" value="" />
      <property name="group[7].type" value="hierachy" />
      <property name="group[7].description" value="The spagobi developers group" /> 	       

      <property name="group[8]" value="#new OrganizationConfig$Group" />
      <property name="group[8].name" value="admin" />
      <property name="group[8].parentId" value="/spagobi" />
      <property name="group[8].type" value="hierachy" />
      <property name="group[8].description" value="The spagobi testers group" />

      <property name="group[9]" value="#new OrganizationConfig$Group" />
      <property name="group[9].name" value="dev" />
      <property name="group[9].parentId" value="/spagobi" />
      <property name="group[9].type" value="hierachy" />
      <property name="group[9].description" value="The spagobi testers group" />

      <property name="group[10]" value="#new OrganizationConfig$Group" />
      <property name="group[10].name" value="test" />
      <property name="group[10].parentId" value="/spagobi" />
      <property name="group[10].type" value="hierachy" />
      <property name="group[10].description" value="The spagobi testers group" />

      <property name="group[11]" value="#new OrganizationConfig$Group" />
      <property name="group[11].name" value="user" />
      <property name="group[11].parentId" value="/spagobi" />
      <property name="group[11].type" value="hierachy" />
      <property name="group[11].description" value="The spagobi users group" />

      <!-- The create the following users when the platform startup --> 
      <property name="user[0]" value="#new OrganizationConfig$User" />
      <property name="user[0].userName" value="admin" />
      <property name="user[0].password" value="eng05830" />
      <property name="user[0].firstName" value="admin" />
      <property name="user[0].lastName" value="admin" />
      <property name="user[0].email" value="admin@localhost" />
      <property name="user[0].groups[0]" value="/admin" />
      <property name="user[0].groups[1]" value="/user" />
      <property name="user[0].groups[2]" value="/portal/admin" />

      <property name="user[1]" value="#new OrganizationConfig$User" />
      <property name="user[1].userName" value="exo" />
      <property name="user[1].password" value="eng05830" />
      <property name="user[1].firstName" value="exo" />
      <property name="user[1].lastName" value="exo" />
      <property name="user[1].email" value="exo@localhost" />
      <property name="user[1].groups[0]" value="/user" />
      <property name="user[1].groups[1]" value="/portal/site" />

      <property name="user[2]" value="#new OrganizationConfig$User" />
      <property name="user[2].userName" value="portal" />
      <property name="user[2].password" value="exo" />
      <property name="user[2].firstName" value="portal" />
      <property name="user[2].lastName" value="portal" />
      <property name="user[2].email" value="portal@localhost" />
      <property name="user[2].groups[0]" value="/user" />
      <property name="user[2].groups[1]" value="/portal/admin" />

      <property name="user[3]" value="#new OrganizationConfig$User" />
      <property name="user[3].userName" value="demo" />
      <property name="user[3].password" value="exo" />
      <property name="user[3].firstName" value="Demo" />
      <property name="user[3].lastName" value="eXo Platform" />
      <property name="user[3].email" value="demo@localhost" />
      <property name="user[3].groups[0]" value="/user" />
      <property name="user[3].groups[1]" value="/portal/share" />

      <property name="user[4]" value="#new OrganizationConfig$User" />
      <property name="user[4].userName" value="biadmin" />
      <property name="user[4].password" value="biadmin" />
      <property name="user[4].firstName" value="spagobi admin" />
      <property name="user[4].lastName" value="spagobi admin" />
      <property name="user[4].email" value="admin@spagobi.it" />
      <property name="user[4].groups[0]" value="/user" />
      <property name="user[4].groups[1]" value="/portal/share" />
      <property name="user[4].groups[2]" value="/spagobi/admin" />

      <property name="user[5]" value="#new OrganizationConfig$User" />
      <property name="user[5].userName" value="bidev" />
      <property name="user[5].password" value="bidev" />
      <property name="user[5].firstName" value="spagobi dev" />
      <property name="user[5].lastName" value="spagobi dev" />
      <property name="user[5].email" value="dev@spagobi.it" />
      <property name="user[5].groups[0]" value="/user" />
      <property name="user[5].groups[1]" value="/portal/share" />
      <property name="user[5].groups[2]" value="/spagobi/dev" />
   
      <property name="user[6]" value="#new OrganizationConfig$User" />
      <property name="user[6].userName" value="bitest" />
      <property name="user[6].password" value="bitest" />
      <property name="user[6].firstName" value="spagobi test" />
      <property name="user[6].lastName" value="spagobi test" />
      <property name="user[6].email" value="test@spagobi.it" />
      <property name="user[6].groups[0]" value="/user" />
      <property name="user[6].groups[1]" value="/portal/share" />
      <property name="user[6].groups[2]" value="/spagobi/test" /> 

      <property name="user[7]" value="#new OrganizationConfig$User" />
      <property name="user[7].userName" value="biuser" />
      <property name="user[7].password" value="biuser" />
      <property name="user[7].firstName" value="spagobi user" />
      <property name="user[7].lastName" value="spagobi user" />
      <property name="user[7].email" value="user@spagobi.it" />
      <property name="user[7].groups[0]" value="/user" />
      <property name="user[7].groups[1]" value="/portal/share" />
      <property name="user[7].groups[2]" value="/spagobi/user" /> 


      
    </object-param>
  </service-configuration>
  
  <service-configuration type="org.exoplatform.services.organization.hibernate.UserQueryHandler"/>
  <service-configuration type="org.exoplatform.services.organization.hibernate.UserProfileQueryHandler"/>
  <service-configuration type="org.exoplatform.services.organization.hibernate.GroupQueryHandler"/>
  <service-configuration type="org.exoplatform.services.organization.hibernate.MembershipQueryHandler"/>
  <service-configuration type="org.exoplatform.services.organization.hibernate.MembershipTypeQueryHandler"/>

  <!--
    This listener will assign some defautl role and memberships to a user when he resisters
  -->
  <service-configuration type="org.exoplatform.services.organization.hibernate.NewUserEventListener">
    <object-param>
      <name>new.user.configuration</name>
      <type>org.exoplatform.services.organization.hibernate.NewUserConfig</type>
      <description>Configure role , group for the new user</description>
      <!-- new user should join the following group --> 
      <property name="group[0]" value="#new NewUserConfig$JoinGroup" />
      <property name="group[0].groupId" value="/user" />
      <property name="group[0].membership" value="member" />

      <property name="group[1]" value="#new NewUserConfig$JoinGroup" />
      <property name="group[1].groupId" value="/portal/share" />
      <property name="group[1].membership" value="member" />
      <!--
      <property name="group[0].validateGroupId" value="false" />
      <property name="group[0].validateMembership" value="false" />
      -->
      <!-- Do not apply the above rules for the following users --> 
      <property name="ignoredUser[0]" value="admin" />

      <property name="ignoredUser[1]" value="exo" />
      <property name="ignoredUser[2]" value="portal" />
      <property name="ignoredUser[3]" value="demo" />
      <property name="ignoredUser[4]" value="biadmin" />  
      <property name="ignoredUser[5]" value="bidev" />
      <property name="ignoredUser[6]" value="bitest" />    
      <property name="ignoredUser[7]" value="biuser" />     
    </object-param>
  </service-configuration>



  <service-configuration type="org.exoplatform.services.portal.impl.PortalUserEventListenerImpl">
    <object-param>
      <name>new.portal.configuration</name>
      <type>org.exoplatform.services.portal.impl.NewPortalConfig</type>
      <description>configuration for the new portal</description>
      <!-- The following users have the predefined portal configuration -->
      <property name="predefinedUser[0]" value="admin" />
      <property name="predefinedUser[1]" value="exo" />
      <property name="predefinedUser[2]" value="portal" />
      <property name="predefinedUser[3]" value="demo" />
      <property name="predefinedUser[4]" value="biadmin" />
      <property name="predefinedUser[5]" value="bidev" /> 
      <property name="predefinedUser[6]" value="bitest" /> 
      <property name="predefinedUser[7]" value="biuser" />
      
      <!--
      <property name="predefinedUser[3]" value="exotest" />
        
      -->

      <!-- The default template configuration for the other user -->
      <property name="templateUser" value="template" />
      <!-- The location of the the configuration files -->
      <property name="templateLocation" value="war:/conf/users" />
    </object-param>
  </service-configuration>


    <service-configuration type="org.exoplatform.services.cms.impl.NewUserListener">
    <object-param>
      <name>new.user.configuration</name>
      <type>org.exoplatform.services.cms.impl.NewUserConfig</type>
      <description>configuration for the localtion of content files to inject in jcr</description>

      <!-- The location of the the configuration files -->
      <property name="contentLocation" value="war:/conf/content" />

      <!-- JCR Workspace used -->
      <property name="workspace" value="ws" />      

      <!-- JCR root path -->
      <property name="jcrPath" value="/cms/home" />            

      <!-- Create user home dir for new user -->
      <!--property name="createHome" value="false" /-->    
      
      <!-- Template user name -->
      <property name="template" value="template" />                 

      <!-- Template content for basic new users -->      
      <property name="users[0]" value="#new NewUserConfig$User" />
      <property name="users[0].userName" value="template" />    

      <!-- Default users -->      
      <property name="users[1]" value="#new NewUserConfig$User" />
      <property name="users[1].userName" value="admin" />

      <property name="users[2]" value="#new NewUserConfig$User" />
      <property name="users[2].userName" value="portal" />
      <property name="users[2].referencedFiles[0]" value="/products/product" />               
            
      <property name="users[3]" value="#new NewUserConfig$User" />
      <property name="users[3].userName" value="exo" />     
      
      <property name="users[4]" value="#new NewUserConfig$User" />
      <property name="users[4].userName" value="bidev" />     

      <property name="users[5]" value="#new NewUserConfig$User" />
      <property name="users[5].userName" value="bitest" />    

      <property name="users[6]" value="#new NewUserConfig$User" />
      <property name="users[6].userName" value="biuser" />
           
      <property name="users[7]" value="#new NewUserConfig$User" />
      <property name="users[7].userName" value="biadmin" />     

      <property name="users[8]" value="#new NewUserConfig$User" />
      <property name="users[8].userName" value="demo" />    
      <property name="users[8].referencedFiles[0]" value="/home-intro" />  
      <property name="users[8].referencedFiles[1]" value="/community/charter" />           
               
    </object-param>
  </service-configuration>

</configuration>
