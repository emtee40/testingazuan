#if ($jpaTable.package != "")
package ${jpaTable.package};
#end

import java.io.Serializable;
import javax.persistence.*;
${jpaTable.importStatements}

/**
 * The persistent class for the ${physicalTable.name} database table.
 * 
 */
@Entity
#if( !${table.defaultname} )
@Table(name="${physicalTable.name}")
#end
public class ${jpaTable.className} {
	private static final long serialVersionUID = 1L;
	
#####
##### fields
#####

#if ($jpaTable.hasCompositeKey)
	
	#if ($jpaTable.access == "field")
	@EmbeddedId
	#end
	
	private ${jpaTable.compositeKeyClassName} ${jpaTable.compositeKeyPropertyName};
#end

#foreach ($jpaColumn in $jpaTable.getSimpleColumns(true, true, false))
	${jpaColumn.fieldScope} ${jpaColumn.simplePropertyType} ${jpaColumn.propertyName};
#end

#foreach ($jpaRelationship in $jpaTable.relationships)
#####
##### field annotations
#####
#if ($jpaTable.access == "field")
	//${jpaRelationship.description}
#if ($jpaRelationship.cardinality == "many-to-one")
manyToOne.vm
#elseif ($jpaRelationship.cardinality == "many-to-many")
manyToMany.vm
#elseif ($jpaRelationship.cardinality == "one-to-many")
#parse("oneToMany.vm")
#elseif ($jpaRelationship.cardinality == "one-to-one")
oneToOne.vm
#end

#end
#end