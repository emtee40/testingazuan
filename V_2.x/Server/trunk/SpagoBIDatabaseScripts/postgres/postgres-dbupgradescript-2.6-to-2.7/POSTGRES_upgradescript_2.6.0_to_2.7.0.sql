--Chiara 28/08/2010
CREATE SEQUENCE SBI_KPI_DOCUMENTS_SEQ INCREMENT 1 START  1 ;

Create table SBI_KPI_DOCUMENTS (
	ID_KPI_DOC INTEGER  DEFAULT nextval('SBI_KPI_DOCUMENTS_SEQ') NOT NULL,
	BIOBJ_ID INTEGER NOT NULL,
	KPI_ID INTEGER NOT NULL,
 Primary Key (ID_KPI_DOC)
)

Alter table SBI_KPI_DOCUMENTS add Foreign Key (BIOBJ_ID) references SBI_OBJECTS (BIOBJ_ID) ;
Alter table SBI_KPI_DOCUMENTS add Foreign Key (KPI_ID) references SBI_KPI (KPI_ID);

INSERT INTO SBI_KPI_DOCUMENTS(KPI_ID,BIOBJ_ID)
SELECT k.KPI_ID, o.BIOBJ_ID
FROM SBI_KPI k,SBI_OBJECTS o
WHERE
k.DOCUMENT_LABEL = o.LABEL
and k.DOCUMENT_LABEL IS NOT NULL;

ALTER TABLE SBI_KPI DROP COLUMN document_label;

--Antonella 08/09/2010: generic user data properties management
CREATE SEQUENCE SBI_UDP_SEQ INCREMENT 1 START  1 ;
CREATE TABLE SBI_UDP (
	UDP_ID	        INTEGER DEFAULT nextval('SBI_UDP_SEQ') NOT NULL,
	TYPE_ID			INTEGER NOT NULL,
	FAMILY_ID		INTEGER NOT NULL,
	LABEL           VARCHAR(20) NOT NULL,
	NAME            VARCHAR(40) NOT NULL,
	DESCRIPTION     VARCHAR(1000) NULL,
	IS_MULTIVALUE   BOOLEAN DEFAULT FALSE,    
 PRIMARY KEY (UDP_ID));
 
CREATE UNIQUE INDEX XAK1SBI_UDP ON SBI_UDP(LABEL);
CREATE INDEX XIF3_SBI_SBI_UDP ON SBI_UDP(TYPE_ID);
CREATE INDEX XIF2SBI_SBI_UDP ON SBI_UDP(FAMILY_ID);

ALTER TABLE SBI_UDP ADD FOREIGN KEY ( TYPE_ID ) REFERENCES SBI_DOMAINS ( VALUE_ID );
ALTER TABLE SBI_UDP ADD FOREIGN KEY ( FAMILY_ID ) REFERENCES SBI_DOMAINS ( VALUE_ID ) ;

CREATE SEQUENCE SBI_UDP_VALUE_SEQ INCREMENT 1 START  1 ;
CREATE TABLE SBI_UDP_VALUE (
	UDP_VALUE_ID       INTEGER DEFAULT nextval('SBI_UDP_SEQ') NOT NULL,
	UDP_ID			   INTEGER NOT NULL,
	VALUE              VARCHAR(1000) NOT NULL,
	PROG               INTEGER NULL,
	LABEL              VARCHAR(20) NOT NULL,
	NAME               VARCHAR(40) NULL,
	FAMILY			   VARCHAR(40) NULL,
    BEGIN_TS           TIMESTAMP NOT NULL,
    END_TS             TIMESTAMP NULL,
    REFERENCE_ID	   INTEGER NULL,	
 PRIMARY KEY (UDP_VALUE_ID));
 
CREATE INDEX XIF2SBI_SBI_UDP_VALUE ON SBI_UDP_VALUE(UDP_ID);

ALTER TABLE SBI_UDP_VALUE ADD FOREIGN KEY ( UDP_ID ) REFERENCES SBI_UDP ( UDP_ID );

--adds new funcionality for udp management
INSERT INTO SBI_USER_FUNC (NAME, DESCRIPTION) VALUES ('UserDefinedPropertyManagement', 'UserDefinedPropertyManagement');
INSERT INTO  SBI_ROLE_TYPE_USER_FUNC values((SELECT VALUE_ID FROM SBI_DOMAINS WHERE DOMAIN_CD = 'ROLE_TYPE' AND VALUE_CD = 'ADMIN'), (SELECT USER_FUNCT_ID FROM SBI_USER_FUNC WHERE NAME='UserDefinedPropertyManagement'));
COMMIT;
--KPI RELATIONS
CREATE SEQUENCE SBI_KPI_REL_SEQ INCREMENT 1 START  1 ;
CREATE TABLE SBI_KPI_REL (
  KPI_REL_ID INTEGER DEFAULT nextval('SBI_KPI_REL_SEQ') NOT NULL,
  KPI_FATHER_ID INTEGER  NOT NULL,
  KPI_CHILD_ID INTEGER  NOT NULL,
  PARAMETER VARCHAR(100) NULL,
  PRIMARY KEY (KPI_REL_ID)
);

ALTER TABLE SBI_KPI_REL ADD FOREIGN KEY ( KPI_FATHER_ID ) REFERENCES SBI_KPI ( KPI_ID );
ALTER TABLE SBI_KPI_REL ADD FOREIGN KEY ( KPI_CHILD_ID ) REFERENCES SBI_KPI ( KPI_ID );

 