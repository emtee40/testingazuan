--Chiara 28/08/2010
CREATE SEQUENCE SBI_KPI_DOCUMENTS_SEQ;\p\g
Create table SBI_KPI_DOCUMENTS (
	ID_KPI_DOC INTEGER  NOT NULL with default next value for SBI_KPI_DOCUMENTS_SEQ,
	BIOBJ_ID INTEGER NOT NULL,
	KPI_ID INTEGER NOT NULL,
 Primary Key (ID_KPI_DOC)
);\p\g

alter table SBI_KPI_DOCUMENTS ADD CONSTRAINT FK_SBI_KPI_DOC_1 foreign key (BIOBJ_ID) references SBI_OBJECTS (BIOBJ_ID) ;\p\g
alter table SBI_KPI_DOCUMENTS ADD CONSTRAINT FK_SBI_KPI_DOC_2 foreign key (KPI_ID) references SBI_KPI (KPI_ID);\p\g

INSERT INTO SBI_KPI_DOCUMENTS(KPI_ID,BIOBJ_ID)
SELECT k.KPI_ID, o.BIOBJ_ID
FROM SBI_KPI k,SBI_OBJECTS o
WHERE
k.DOCUMENT_LABEL = o.LABEL
and k.DOCUMENT_LABEL IS NOT NULL;

ALTER TABLE SBI_KPI DROP COLUMN document_label;

--Antonella 08/09/2010: generic user data properties management
CREATE SEQUENCE SBI_UDP_SEQ;\p\g
CREATE TABLE SBI_UDP (
	UDP_ID	        INTEGER NOT NULL with default next value for SBI_UDP_SEQ,
	TYPE_ID			INTEGER NOT NULL,
	FAMILY_ID		INTEGER NOT NULL,
	LABEL           VARCHAR(20) NOT NULL,
	NAME            VARCHAR(40) NOT NULL,
	DESCRIPTION     VARCHAR(1000) NULL,
	IS_MULTIVALUE   Smallint DEFAULT 0,    
 PRIMARY KEY (UDP_ID));\p\g
 
CREATE UNIQUE INDEX XAK1SBI_UDP ON SBI_UDP(LABEL ASC);\p\g
CREATE INDEX XIF3_SBI_SBI_UDP ON SBI_UDP(TYPE_ID ASC);\p\g
CREATE INDEX XIF2SBI_SBI_UDP ON SBI_UDP(FAMILY_ID ASC);\p\g
 
ALTER TABLE SBI_UDP ADD CONSTRAINT FK_SBI_SBI_UDP_1 FOREIGN KEY ( TYPE_ID ) REFERENCES SBI_DOMAINS ( VALUE_ID );\p\g
ALTER TABLE SBI_UDP ADD CONSTRAINT FK_SBI_SBI_UDP_2 FOREIGN KEY ( FAMILY_ID ) REFERENCES SBI_DOMAINS ( VALUE_ID );\p\g

CREATE SEQUENCE SBI_UDP_VALUE_SEQ;\p\g
CREATE TABLE SBI_UDP_VALUE (
	UDP_VALUE_ID       INTEGER NOT NULL with default next value for SBI_UDP_VALUE_SEQ,
	UDP_ID			   INTEGER NOT NULL,
	VALUE              VARCHAR(1000) NOT NULL,
	PROG               INTEGER NULL,
	LABEL              VARCHAR(20) NOT NULL,
	NAME               VARCHAR(40) NULL,
	FAMILY			   VARCHAR(40) NULL,
    BEGIN_TS           TIMESTAMP NOT NULL,
    END_TS             TIMESTAMP NULL,
    REFERENCE_ID	   INTEGER NULL,	
 PRIMARY KEY (UDP_VALUE_ID));\p\g
 
CREATE UNIQUE INDEX XAK1SBI_UDP_VALUE ON SBI_UDP_VALUE(LABEL ASC);\p\g
CREATE INDEX XIF2SBI_SBI_UDP_VALUE ON SBI_UDP_VALUE(UDP_ID ASC);\p\g

ALTER TABLE SBI_UDP_VALUE ADD CONSTRAINT FK_SBI_UDP_VALUE_2 FOREIGN KEY ( UDP_ID ) REFERENCES SBI_UDP ( UDP_ID );\p\g

--adds new funcionality for udp management
INSERT INTO SBI_USER_FUNC (NAME, DESCRIPTION) VALUES ('UserDefinedPropertyManagement', 'UserDefinedPropertyManagement');\p\g
INSERT INTO SBI_ROLE_TYPE_USER_FUNC (ROLE_TYPE_ID, USER_FUNCT_ID)
 SELECT a.VALUE_ID  , b.USER_FUNCT_ID FROM
 (
  SELECT VALUE_ID FROM SBI_DOMAINS WHERE DOMAIN_CD = 'ROLE_TYPE' AND VALUE_CD = 'ADMIN' 
 ) a( VALUE_ID ) ,
 (
  SELECT USER_FUNCT_ID FROM SBI_USER_FUNC WHERE NAME='UserDefinedPropertyManagement'
 ) b(USER_FUNCT_ID );\p\g
COMMIT;\p\g