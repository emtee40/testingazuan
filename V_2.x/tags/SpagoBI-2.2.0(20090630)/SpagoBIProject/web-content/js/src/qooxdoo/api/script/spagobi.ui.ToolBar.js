{type:"class",attributes:{"name":"ToolBar","hasWarning":"true","packageName":"spagobi.ui","superClass":"qx.ui.toolbar.ToolBar","fullName":"spagobi.ui.ToolBar","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Class to create the main toolbar on top of the page</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.toolbar.ToolBar","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"config"},children:[{type:"desc",attributes:{"text":"<p>- Array of objects each having \n a set of properties like command, label, handler etc. as described above.</p>"}}]}]},{type:"desc",attributes:{"text":"<p>Constructor to create the top toolbar with buttons on it.</p>\n\n<p>It accepts an array of objects each of which corresponds to a button on \n the toolbar and calls the addButton() function.</p>\n\n<p>See the addButton() function below for more details.</p>\n\n<p>It also cretes the buttons on its right side for choosing \n a different language or the Help button.</p>\n\n<code>\n var toolbarView = new spagobi.ui.ToolBar([\n      		{\n		  		command: 'Control+Q',\n		  		handler: function() {...},\n		  		context: this,\n		  		\"label\": 'Resources',\n		  		icon: 'icon/16/actions/myPic1.png',\n		  		tooltip: 'button1 to press'\n	  		}, {\n		  		command: 'Control+W',\n		  		handler: function() {....},\n		  		context: this,\n		  		\"label\": 'Catalogues',\n		  		icon: 'icon/16/actions/myPic2.png',\n		  		tooltip: 'button2 to press'\n	  		}\n </code>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"name":"addButton"},children:[{type:"params",children:[{type:"param",attributes:{"name":"btnConfig"},children:[{type:"desc",attributes:{"text":"<p>An object having the above properties.</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"qx.core.Object"}}]}]}]},{type:"desc",attributes:{"text":"<p>Function to add a button on the top tool bar.</p>\n\n<p>It is called by the spagobi.ui.ToolBar object&#8217;s constructor\n for each object passed in it.</p>\n\n<p>It Creates a button, sets its label, icon and tooltip and\n associates the command to it.</p>\n\n<p><strong>btnConfig Options</strong>:</p>\n\n<p><strong>command</strong>: String</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Keyboard shortcut for the button,</p>\n\n<p><strong>handler</strong>: Function()</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Function to be executed when\n 									button is pressed,</p>\n\n<p><strong>context</strong>: Object</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Object within whose context the handler \n 									function can be executed,</p>\n\n<p><strong>label</strong> : String</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;	Label of the command</p>\n\n<p><strong>icon</strong> : String</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Path of the icon to be displayed</p>\n\n<p><strong>tooltip</strong>: String</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp; Tooltip of the button</p>\n\n<code>\n toolbarObject.addButton({\n						  		command: 'Control+Q',\n						  		handler: function() {...},\n						  		context: this,\n						  		\"label\": 'Resources',\n						  		icon: 'icon/16/actions/myPic1.png',\n						  		tooltip: 'button1 to press'\n	  						});\n </code>"}}]},{type:"method",attributes:{"hasError":"true","name":"showAbout"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"desc",attributes:{"text":"<p>Shows a popup box</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"11","line":"161"}}]}]}]}]}