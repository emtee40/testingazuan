ALTER TABLE sbi_objects ADD COLUMN visible SMALLINT ;
UPDATE sbi_objects SET visible=1;
CREATE TABLE SBI_SUBREPORTS (
  MASTER_RPT_ID INTEGER NOT NULL ,
  SUB_RPT_ID INTEGER NOT NULL,
  PRIMARY KEY (MASTER_RPT_ID, SUB_RPT_ID)
);
ALTER TABLE SBI_OBJ_PAR RENAME TO SBI_OBJ_PAR_2;
ALTER TABLE SBI_OBJ_PAR_2 DROP CONSTRAINT XPKSBI_OBJ_PAR;
CREATE MEMORY TABLE SBI_OBJ_PAR(OBJ_PAR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,PAR_ID INTEGER NOT NULL,BIOBJ_ID INTEGER NOT NULL,LABEL VARCHAR,REQ_FL SMALLINT,MOD_FL SMALLINT,VIEW_FL SMALLINT,MULT_FL SMALLINT,PROG INTEGER NOT NULL,PARURL_NM VARCHAR,PRIORITY INTEGER,CONSTRAINT XPKSBI_OBJ_PAR_1 PRIMARY KEY(OBJ_PAR_ID));
INSERT INTO SBI_OBJ_PAR (PAR_ID,BIOBJ_ID,LABEL,REQ_FL,MOD_FL,VIEW_FL,MULT_FL,PROG,PARURL_NM) SELECT PAR_ID,BIOBJ_ID,LABEL,REQ_FL,MOD_FL,VIEW_FL,MULT_FL,PROG,PARURL_NM FROM SBI_OBJ_PAR_2;
DROP TABLE SBI_OBJ_PAR_2;
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_1 FOREIGN KEY(BIOBJ_ID) REFERENCES SBI_OBJECTS(BIOBJ_ID);
ALTER TABLE SBI_OBJ_PAR ADD CONSTRAINT FK_SBI_OBJ_PAR_2 FOREIGN KEY(PAR_ID) REFERENCES SBI_PARAMETERS(PAR_ID);
CREATE MEMORY TABLE SBI_OBJ_PARUSE (
	OBJ_PAR_ID INTEGER NOT NULL,
	USE_ID INTEGER NOT NULL,
	OBJ_PAR_FATHER_ID INTEGER NOT NULL,
	FILTER_COLUMN VARCHAR NOT NULL,
	FILTER_OPERATION VARCHAR NOT NULL,
	CONSTRAINT XPKSBI_OBJ_PARUSE PRIMARY KEY(OBJ_PAR_ID,USE_ID),
	CONSTRAINT FK_SBI_OBJ_PARUSE_1 FOREIGN KEY(OBJ_PAR_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID),
	CONSTRAINT FK_SBI_OBJ_PARUSE_2 FOREIGN KEY(USE_ID) REFERENCES SBI_PARUSE(USE_ID),
	CONSTRAINT FK_SBI_OBJ_PARUSE_3 FOREIGN KEY(OBJ_PAR_FATHER_ID) REFERENCES SBI_OBJ_PAR(OBJ_PAR_ID)
);
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('EXT','External Engine','ENGINE_TYPE','Engine types','Business intelligence external engine of SpagoBI platform');
INSERT INTO SBI_DOMAINS (VALUE_CD,VALUE_NM,DOMAIN_CD,DOMAIN_NM,VALUE_DS) VALUES('INT','Internal Engine','ENGINE_TYPE','Engine types','Business intelligence internal engine of SpagoBI platform');
ALTER TABLE sbi_engines ADD COLUMN ENGINE_TYPE INTEGER;
ALTER TABLE sbi_engines ADD COLUMN CLASS_NM VARCHAR;
ALTER TABLE sbi_engines ADD COLUMN BIOBJ_TYPE INTEGER;
ALTER TABLE sbi_engines ADD CONSTRAINT FK_SBI_ENGINES_1 FOREIGN KEY(BIOBJ_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID);
ALTER TABLE sbi_engines ADD CONSTRAINT FK_SBI_ENGINES_2 FOREIGN KEY(ENGINE_TYPE) REFERENCES SBI_DOMAINS(VALUE_ID);
UPDATE sbi_engines SET ENGINE_TYPE = (SELECT  VALUE_ID  FROM SBI_DOMAINS WHERE VALUE_CD = 'EXT');
UPDATE sbi_engines SET BIOBJ_TYPE = (SELECT  VALUE_ID  FROM SBI_DOMAINS WHERE VALUE_CD = 'REPORT');

COMMENT: columns ENGINE_TYPE and BIOBJ_TYPE are set to 'EXT' and to 'REPORT' respectively as default values. After script execution it is necessary to go to the engine detail page (for each engine) and set correct values.

ALTER TABLE sbi_paruse ADD COLUMN MAN_IN INTEGER;
UPDATE sbi_paruse SET MAN_IN=0;

ALTER TABLE SBI_OBJECTS ADD COLUMN UUID VARCHAR;

COMMIT;
