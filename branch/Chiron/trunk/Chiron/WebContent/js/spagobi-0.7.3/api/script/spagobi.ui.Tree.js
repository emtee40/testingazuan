{type:"class",attributes:{"name":"Tree","hasWarning":"true","packageName":"spagobi.ui","superClass":"qx.ui.tree.Tree","fullName":"spagobi.ui.Tree","type":"class"},children:[{type:"desc",attributes:{"text":"<p>Class for creating the Tree Widget</p>"}},{type:"constructor",children:[{type:"method",attributes:{"isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"config"},children:[{type:"desc",attributes:{"text":"<p>- Object with properties described above</p>"}}]}]},{type:"desc",attributes:{"text":"<p>Constructor of Customized class</p>\n\n<p>It creates a Tree with the root name as the string passed to it</p>\n\n<p>Structure of object passed as parameter :</p>\n\n<p>config :{</p>\n\n<p>root : String</p>\n\n<p>}</p>\n\n<p>*Example :- *</p>\n\n<p>var myTree = new spagobi.ui.Tree(&#8220;Root&#8221;);</p>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","hasError":"true","name":"_insertCmd"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"desc",attributes:{"text":"<p>Event Listener Function called when the Insert option of Context menu is clicked</p>\n\n<p>It is called internally by the onClickMenu() function</p>\n\n<p>*Example :- *</p>\n\n<p>var insertCommand = new qx.client.Command();</p>\n\n<p>insertCommand.addEventListener(&#8220;execute&#8221;, this._insertCmd,this);</p>\n\n<p>var insertButton = new qx.ui.menu.Button(&#8220;Insert&#8221;,null,insertCommand);</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"29","line":"273"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_insertDetails"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"desc",attributes:{"text":"<p>Event Listener function to get the details of the new node to be created</p>\n\n<p>It is called internally by the _insertCmd() function</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"33","line":"326"}}]}]},{type:"method",attributes:{"name":"addNode"},children:[{type:"params",children:[{type:"param",attributes:{"name":"config"},children:[{type:"desc",attributes:{"text":"<p>- Object with properties as described above</p>"}}]}]},{type:"desc",attributes:{"text":"<p>Function to add a Sub-folder(Leaf or Non-Leaf Node) in the tree</p>\n\n<p>It also adds the checkbox field if set as true in the object property</p>\n\n<p>It returns the reference of the created Node of type TreeFolder or TreeFile</p>\n\n<p>Structure of the object passed as parameter :</p>\n\n<p>config : {</p>\n\n<p>name 	  : String (Name of the Node),</p>\n\n<p>init_icon : image path in double quotes (Icon to be shown when Node appears) &#8211; optional,</p>\n\n<p>click_icon: image path (Icon to be shown when Node is clicked) &#8211; optional,</p>\n\n<p>parent 	  : TreeFolder (Parent node to which new Node will be added),</p>\n\n<p>id 		  : String (to identify the Node of the tree),</p>\n\n<p>checkBox  : Boolean (if Checkbox is required or not) &#8211; optional,</p>\n\n<p>file	  : Boolean (true to indicate File Node)</p>\n\n<p>}</p>\n\n<p><strong>Example :-</strong> \n The below code creates the tree as :	\n Root</p>\n\n<p>&nbsp;&nbsp;&#8212;	SubFolder1</p>\n\n<p>&nbsp;&nbsp;&#8212;|_| SubFolder2</p>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&#8212;|_| File1\n var myTree = new spagobi.ui.Tree({root: &#8220;Root&#8221; });\n var node1 = myTree.addNode({\n 							name  : &#8220;SubFolder1&#8221;,\n  						   	parent: myTree,\n						   	id	 : &#8220;node1&#8221;	\n			     		   });\n var node2 = myTree.addNode({\n							name  : &#8220;SubFolder2&#8221;,\n							parent: myTree,\n							id	  : &#8220;node2&#8221;,\n							init_icon: &#8220;icon/16/places/user-trash.png&#8221;,\n							click_icon: &#8221;&#8221;,\n							checkBox  : true	\n							});\n var node3 = myTree.addNode({\n	  						name  : &#8220;File1&#8221;,\n	  						parent: node2,\n	  						id	  : &#8220;node3&#8221;,\n	  						checkBox: true,\n	  						init_icon: &#8220;icon/16/places/user-desktop.png&#8221;,\n	  						click_icon: &#8221;&#8221;,\n	  						file  : true	\n							});</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>Reference to the created tree node</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"AbstractTreeElement"}}]}]}]},{type:"method",attributes:{"hasError":"true","name":"deleteNode"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"desc",attributes:{"text":"<p>Function to delete a Node from the Tree</p>\n\n<p>It is called by the Context Menu option at a node</p>\n\n<p><strong>Example:-</strong></p>\n\n<p>var deleteCommand = new qx.client.Command();</p>\n\n<p>deleteCommand.addEventListener(&#8220;execute&#8221;, this.deleteNode,this);</p>\n\n<p>var deleteButton = new qx.ui.menu.Button(&#8220;Delete&#8221;,null,deleteCommand);</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"27","line":"473"}}]}]},{type:"method",attributes:{"name":"deleteNodeById"},children:[{type:"params",children:[{type:"param",attributes:{"name":"id"},children:[{type:"desc",attributes:{"text":"<p>Node-id referring to the selected Node</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"String"}}]}]}]},{type:"desc",attributes:{"text":"<p>Function to delete a Node from the Tree based on Node id</p>"}}]},{type:"method",attributes:{"hasError":"true","name":"deleteTreeNode"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"34","line":"513"}}]}]},{type:"method",attributes:{"name":"getCurrentNode"},children:[{type:"desc",attributes:{"text":"<p>Function to get the currently selected node of the tree</p>\n\n<p><strong>Example:-</strong></p>\n\n<p>var myTree = new spagobi.ui.Tree({root: &#8220;Root&#8221; });</p>\n\n<p>var node3 = myTree.addNode({\n						  							name  : &#8220;File3&#8221;,\n						  							parent: myTree,\n						  							id	  : &#8220;node3&#8221;,\n						  							file  : true	\n  													});</p>\n\n<p>var n = myTree.getSelectedElement(node3);</p>"}},{type:"return",children:[{type:"desc",attributes:{"text":"<p>- The currently selected Node of the tree</p>"}},{type:"types",children:[{type:"entry",attributes:{"type":"AbstractTreeElement"}}]}]}]},{type:"method",attributes:{"hasError":"true","name":"getNodeData"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"31","line":"590"}}]}]},{type:"method",attributes:{"hasError":"true","name":"moveDownNode"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"32","line":"572"}}]}]},{type:"method",attributes:{"hasError":"true","name":"moveUpNode"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"30","line":"556"}}]}]},{type:"method",attributes:{"hasError":"true","name":"onClickMenu"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"desc",attributes:{"text":"<p>Function to show a Context Menu associated to the node when it is clicked</p>\n\n<p>It is called by a generic event handler associated with the tree</p>\n\n<p>*Example :- *</p>\n\n<p>var myTree = new spagobi.ui.Tree({root: &#8220;Root&#8221;});</p>\n\n<p>myTree.addEventListener(&#8220;click&#8221;,myTree.onClickMenu,myTree);</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"30","line":"86"}}]}]}]}]}