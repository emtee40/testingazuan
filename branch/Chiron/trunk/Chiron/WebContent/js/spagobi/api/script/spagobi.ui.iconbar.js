{type:"class",attributes:{"name":"IconBar","hasWarning":"true","packageName":"spagobi.ui","superClass":"qx.ui.container.Composite","fullName":"spagobi.ui.IconBar","type":"class"},children:[{type:"desc",attributes:{"text":"<p>This class defines the Left Vertical Bar of the the <span class=\"caps\">GUI</span> which extends the \nQooxdoo&#8217;s VerticalBoxLayout class.</p>"}},{type:"constructor",children:[{type:"method",attributes:{"overriddenFrom":"qx.ui.container.Composite","isCtor":"true","name":"ctor"},children:[{type:"params",children:[{type:"param",attributes:{"name":"config"},children:[{type:"desc",attributes:{"text":"<p>(qx.core.object)</p>"}}]}]},{type:"desc",attributes:{"text":"<p>Call to the constructor with the main &#8220;Config object&#8221; as its argument which contains the following  properties:</p>\n\n<p>defaultBackgroudColor -> This is the default background color of the button.</p>\n\n<p>focusedBackgroudColor  -> This is the color of the background when a particular button is focussed.</p>\n\n<p>These properties are optional and if the user does not provide these value then the default values will be</p>\n\n<p>_selectedBackgroudColor: &#8216;white&#8217; and _focusedBackgroudColor: &#8217;#DEFF83&#8217;,</p>\n\n<p><strong>Example :-</strong> \n <code></p>\n\n<p>var a : { selectedBackgroudColor: &#8220;white&#8221;, focusedBackgroudColor: null};</p>\n\n<p>var b = IconBar(a);\n <code></p>"}}]}]},{type:"methods",children:[{type:"method",attributes:{"access":"protected","hasError":"true","name":"_addAtom"},children:[{type:"params",children:[{type:"param",attributes:{"name":"name"}},{type:"param",attributes:{"name":"image"}},{type:"param",attributes:{"name":"callback"}},{type:"param",attributes:{"name":"context"}},{type:"param",attributes:{"name":"tooltip"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>name</code> is not documented.","column":"10","line":"134"}},{type:"error",attributes:{"msg":"Parameter <code>image</code> is not documented.","column":"10","line":"134"}},{type:"error",attributes:{"msg":"Parameter <code>callback</code> is not documented.","column":"10","line":"134"}},{type:"error",attributes:{"msg":"Parameter <code>context</code> is not documented.","column":"10","line":"134"}},{type:"error",attributes:{"msg":"Parameter <code>tooltip</code> is not documented.","column":"10","line":"134"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"10","line":"134"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_check"},children:[{type:"params",children:[{type:"param",attributes:{"name":"button"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>button</code> is not documented.","column":"8","line":"172"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"8","line":"172"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_onkeydown"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"12","line":"245"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"12","line":"245"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_onkeypress"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"13","line":"255"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"13","line":"255"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_onmousedown"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"14","line":"207"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"14","line":"207"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_onmouseout"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"13","line":"235"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"13","line":"235"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_onmouseover"},children:[{type:"params",children:[{type:"param",attributes:{"name":"e"}}]},{type:"errors",children:[{type:"error",attributes:{"msg":"Parameter <code>e</code> is not documented.","column":"14","line":"220"}},{type:"error",attributes:{"msg":"Documentation is missing.","column":"14","line":"220"}}]}]},{type:"method",attributes:{"access":"protected","hasError":"true","name":"_uncheck"},children:[{type:"errors",children:[{type:"error",attributes:{"msg":"Documentation is missing.","column":"10","line":"184"}}]}]},{type:"method",attributes:{"name":"addButton"},children:[{type:"params",children:[{type:"param",attributes:{"name":"buttonConfig"},children:[{type:"desc",attributes:{"text":"<p>(qx.core.object)</p>"}}]}]},{type:"desc",attributes:{"text":"<p>This function adds the button on the vertical bar (the butons are actually atoms).\n The argument to this function is a complex object namely buttonConfig which has the folowing properties.</p>\n\n<p>name     -> the name of the button by which it is identified</p>\n\n<p>image    -> The image of the button, as how the button will look.</p>\n\n<p>callback -> Callback is the function which will be executed when the button is clicked.</p>\n\n<p>context  -> Context is the scope to which the callback function will be executed</p>\n\n<p>tooltip  ->This is the tooltip which is a text assciated with each button and is visible when the mouse goes over any button.</p>"}}]},{type:"method",attributes:{"hasError":"true","name":"select"},children:[{type:"params",children:[{type:"param",attributes:{"name":"button"}}]},{type:"desc",attributes:{"text":"<p>This function checks the button and sets the background color to focusedBackgroudColor(see constructor).\n If another button is checked, this function unchecks the previously checked button\n and sets the background of the previously checked button to defaultBackgroudColor (see constructor) and sets the background color of the current button.\n This function takes an argument &#8220;button&#8221; which is of type &#8220;event&#8221;.</p>"}},{type:"errors",children:[{type:"error",attributes:{"msg":"Contains information for a non-existing parameter <code>e</code>.","column":"8","line":"196"}},{type:"error",attributes:{"msg":"Parameter <code>button</code> is not documented.","column":"8","line":"196"}}]}]}]}]}