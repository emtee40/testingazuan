<?xml version="1.0"?>

<project name="SpagoBIGeoEngine" default="compile">

	<description>
		SpagoBIGeoEngine CLI build file
	</description>
	
	<!-- Load all the default properties, and any the user wants    -->
	<!-- to contribute (without having to type -D or edit this file -->
	<property file="${basedir}/build.properties" />
	

	<!-- the normal classpath -->
	<path id="classpath">	
	  	<!-- Include all elements exposed in project lib dir -->
	  	<fileset dir="${lib.dir}">
	  	      <include name="*.jar"/>
	  	</fileset>	
		
		<fileset dir="${server.lib.dir}">
			  <include name="*.jar"/>
	    </fileset>	
	</path>
	
		
	<!-- ====================================================== -->
	<!-- Stuff needed by all targets                            -->
	<!-- ====================================================== -->
	<target name="init">
	  <mkdir dir="${build.dir}"/>
	  <mkdir dir="${build.classes}"/>	
	  <mkdir dir="${build.docs}"/>
	  <mkdir dir="${build.javadoc}"/>
	  <mkdir dir="${build.dir}/lib"/>
	  <mkdir dir="${dist.dir}"/>	  
	  <mkdir dir="${docs.dir}"/>
	</target>
	
	<!-- ====================================================== -->
	<!-- Compile the Java files                                 -->
	<!-- ====================================================== -->
	<target name="compile" depends="init">
		<echo>Compiling ${Name} ...</echo>
		<javac 
	     encoding="${build.encoding}" 
	     srcdir="${src.dir}"
	     includes="**/*.java"
	     destdir="${build.classes}"
	     debug="${debug}"
	     optimize="${optimize}"
	     deprecation="${deprecation}">
	     <classpath refid="classpath"/>
	  </javac>    
	</target>
	
	
	
	<!-- ================================================================== -->
	<!-- Make project-name.jar                                              -->
	<!-- ================================================================== -->
	<!--                                                                    -->
	<!-- ================================================================== -->
	<target name="jar" depends="compile">
	  <copy todir="${build.classes}" includeEmptyDirs="false">
	   	<fileset dir="${conf.dir}"/>
	  </copy>
	  <copy todir="${build.dir}/lib" includeEmptyDirs="false">
		<fileset dir="${lib.dir}"/>
	  </copy>
	  <!-- Create application JAR file -->
		<jar jarfile="${build.dir}/${final.name}.jar" basedir="${build.classes}"/>
	</target>
	
	<!-- ================================================================== -->
	<!-- Documentation                                                      -->
	<!-- ================================================================== -->
	<target name="javadoc" depends="compile">
	  <mkdir dir="${build.javadoc}"/>
	  <javadoc
	      overview="${src.dir}/overview.html"
	      destdir="${build.javadoc}"
	      author="true"
	      version="true"
	      use="true"
	      windowtitle="${Name} ${version} API"
	      doctitle="${Name} ${version} API"
	      bottom="Copyright &amp;copy; ${year} Engineering Ingegneria Informatica Spa">
	    	<packageset dir="${src.dir}"/>
	        <classpath refid="classpath"/>
	  </javadoc>
	</target>	
	
	
	<!-- ================================================================== -->
	<!-- D I S T R I B U T I O N                                            -->
	<!-- ================================================================== -->
	<!--                                                                    -->
	<!-- ================================================================== -->
	<target name="dist" depends="jar, javadoc">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/bin"/>
		<mkdir dir="${dist.dir}/classes"/>
		<mkdir dir="${dist.dir}/conf"/>
		<mkdir dir="${dist.dir}/conf/js/lib/svg-widgets"/>
		<mkdir dir="${dist.dir}/conf/maps"/>
		<mkdir dir="${dist.dir}/conf/log"/>
		
		<mkdir dir="${dist.dir}/tests"/>
		
	  	<mkdir dir="${dist.dir}/lib"/>
		
		
		<mkdir dir="${dist.dir}/tmp"/>	  	
	  	<mkdir dir="${dist.dir}/docs"/>
	  	<mkdir dir="${dist.dir}/docs/api"/>

		
		<copy todir="${dist.dir}/bin" includeEmptyDirs="false">
		  	<fileset dir="bin"/>
		</copy>
		
		<copy todir="${dist.dir}/classes" includeEmptyDirs="false">
			 <fileset dir="${build.dir}/classes"/>
		</copy>
		
		<copy todir="${dist.dir}/conf/js/lib/svg-widgets" includeEmptyDirs="false">
			<fileset dir="${basedir}/WebContent/js/lib/svg-widgets"/>
		</copy>		

		<copy todir="${dist.dir}/conf/maps/" file="${basedir}/WebContent/maps/spagobigeo.svg"/>
		<copy todir="${dist.dir}/conf/maps/" file="${basedir}/WebContent/maps/export_spagobigeo.svg"/>
		<copy todir="${dist.dir}/conf/" file="${basedir}/WebContent/WEB-INF/conf/empty.xml"/>
		
		<copy todir="${dist.dir}/tests" includeEmptyDirs="false">
			<fileset dir="${basedir}/tests"/>
		</copy>	
		
	  	<copy todir="${dist.dir}/lib" includeEmptyDirs="false">
	    	<fileset dir="${build.dir}/lib"/>
	  	</copy>

	  	<copy file="${build.dir}/${final.name}.jar" todir="${dist.dir}"/>

	  	<copy todir="${dist.dir}/docs">
	    	<fileset dir="${docs.dir}"/>
	  	</copy>

	  	<copy todir="${dist.dir}/docs/api">
	    	<fileset dir="${build.javadoc}"/>
	  	</copy>	  	

	  	<copy todir="${dist.dir}/" file="build.xml"/>
	  	<copy todir="${dist.dir}/" file="build.properties"/>
	  
		
	</target>
	
	<!-- ================================================================== -->
	<!-- Make release tarball                                               -->
	<!-- ================================================================== -->
	<target name="tar" depends="dist">
		<tar compression="gzip" longfile="gnu"
	         destfile="dist/${final.name}.tar.gz">
	    	<tarfileset dir="dist" mode="664">
				<exclude name="${final.name}/bin/*" />
	        	<include name="${final.name}/**" />
	      	</tarfileset>
	      	<tarfileset dir="dist" mode="755">
	        	<include name="${final.name}/bin/*" />
	      	</tarfileset>
	    </tar>
	</target>	
	
	
		
	<!-- ================================================================== -->
	<!-- Clean.  Delete the build files, and their directories              -->
	<!-- ================================================================== -->
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>
	
</project>
	