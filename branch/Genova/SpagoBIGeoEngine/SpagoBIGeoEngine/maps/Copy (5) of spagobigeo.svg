<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg width="100%" height="100%" viewBox="0 0 1100 768" onload="init(evt);" zoomAndPan="disable" 
xmlns:batik="http://xml.apache.org/batik/ext" xmlns:attrib="http://www.carto.net/attrib" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet">

		<rect x="-3000" y="-500" width="10000" height="3000" stroke="none" fill="#e6e6e6"/>
		
		<g id="imports">
		
		</g>
		
		
		<script id="init" type="text/ecmascript"><![CDATA[
				
		]]></script>
		
		
		<script type="text/ecmascript"><![CDATA[
				
		//global variables for mapApp and map object
		var myMapApp = new mapApp();
		var myMainMap;
		var radioGroup;
		var checkBoxes = new Array();
		
		//var myRadioButtons = radioButtonGroup(radiobutton,functionToCall);
		var attribNS="http://www.carto.net/attrib";
		var suspendProcess;
		var windowPositions = new Array();
			
		var detailTabGroup;	
		
		var isShowTableModalityActive = true;
			
		function init() {
			window.setTimeout("initApplication()",500);
		}
			
			
		function initApplication(evt) {			
			if (document.documentElement.suspendRedraw) {
				suspendProcess = document.documentElement.suspendRedraw(30000);
			}
			
			setTresholds();
			
			//dynamic layer array that allow loading from database
			var dynamicLayers = new Array();
			//initialize digiLayers (layers that allow digitizing)
			var digiLayers = new Array();
			//define some styles for the map object
			var zoomRectStyles = {"fill":"none","stroke":"crimson","stroke-width":0.002,"stroke-dasharray":"0.012,0.002"};
			var highlightStyles = {"stroke":"crimson","stroke-width":0.002};
			var dragRectStyles = {"fill":"dimgray","fill-opacity":0.3};
			//initialize myMainMap object, you need to adopt the parameters here
		

			myMainMap = new map("mainMap",35910,35,0.6,0,26911,"m",1,false,"","",dynamicLayers,digiLayers,"",zoomRectStyles,highlightStyles,dragRectStyles,"referenceMap","myDragCrossSymbol",4750);
			
			//create zoom slider	
			myMapApp.zoomSlider = new slider(180,153,myMainMap.minWidth,20,153,myMainMap.maxWidth,myMainMap.maxWidth,"mapZoomSlider","dimgray",2,10,"sliderSymbol",myMapApp.refMapDragger,true);
					
			//create windows
			myMapApp.Windows = new Array();
			
			//first a few styles
			var winPlaceholderStyles = {"fill":"none","stroke":"dimgray","stroke-width":1.5};
			var windowStyles = {"fill":"#fffce6","stroke":"dimgray","stroke-width":1};
			var titlebarStyles = {"fill":"steelblue","stroke":"dimgray","stroke-width":1};
			var statusbarStyles = {"fill":"aliceblue","stroke":"dimgray","stroke-width":1};
			var titletextStyles = {"font-family":"Arial,Helvetica","font-size":14,"fill":"white"};
			var statustextStyles = {"font-family":"Arial,Helvetica","font-size":10,"fill":"dimgray"};
			var buttonStyles = {"fill":"steelblue","stroke":"white","stroke-width":2};
			var titlebarHeight = 17;
			var statusbarHeight = 13;
			
			//initialize windows
			myMapApp.Windows["navWindow"] = new Window("navWindow","Windows",210,200,10,491,true,8,8,1092,690,true,winPlaceholderStyles,windowStyles,3,true,false,"Navigation","",false,true,true,titlebarStyles,titlebarHeight,statusbarStyles,statusbarHeight,titletextStyles,statustextStyles,buttonStyles,windowHandling);
			myMapApp.Windows["navWindow"].appendContent("referenceMap",true);
			myMapApp.Windows["navWindow"].appendContent("zoomIn",true);
			myMapApp.Windows["navWindow"].appendContent("mapZoomSlider",true);
			myMapApp.Windows["navWindow"].appendContent("zoomOut",true);
			myMapApp.Windows["navWindow"].appendContent("zoomFull",true);
			myMapApp.Windows["navWindow"].appendContent("zoomManual",true);
			myMapApp.Windows["navWindow"].appendContent("panManual",true);
			myMapApp.Windows["navWindow"].appendContent("infoButton",true);
			myMapApp.Windows["navWindow"].appendContent("backwardExtent",true);
			myMapApp.Windows["navWindow"].appendContent("forwardExtent",true);
			
			myMapApp.Windows["basiclayer"] = new Window("basiclayer","Windows",210,200,436,491,true,8,8,1092,690,true,winPlaceholderStyles,windowStyles,3,true,false,"Map Layers","",false,true,true,titlebarStyles,titlebarHeight,statusbarStyles,statusbarHeight,titletextStyles,statustextStyles,buttonStyles,windowHandling);
			myMapApp.Windows["basiclayer"].appendContent("checkBoxes",true);
			myMapApp.Windows["basiclayer"].minimize(true);
			
			myMapApp.Windows["thematic"] = new Window("thematic","Windows",210,200,223,491,true,8,8,1092,690,true,winPlaceholderStyles,windowStyles,3,true,false,"Thematic Topics","",false,true,true,titlebarStyles,titlebarHeight,statusbarStyles,statusbarHeight,titletextStyles,statustextStyles,buttonStyles,windowHandling);
			myMapApp.Windows["thematic"].appendContent("radioButtons",true);
			myMapApp.Windows["thematic"].minimize(true);
			
			myMapApp.Windows["detail"] = new Window("detail","Windows",210,200,649,491,true,8,8,1092,690,true,winPlaceholderStyles,windowStyles,3,true,false,"Detail","",false,true,true,titlebarStyles,titlebarHeight,statusbarStyles,statusbarHeight,titletextStyles,statustextStyles,buttonStyles,windowHandling);
			myMapApp.Windows["detail"].appendContent("detailTabGroup",true);
			myMapApp.Windows["detail"].minimize(true);
			
			myMapApp.Windows["legend"] = new Window("legend","Windows",210,200,862,491,true,8,8,1092,690,true,winPlaceholderStyles,windowStyles,3,true,false,"Legend","",false,true,true,titlebarStyles,titlebarHeight,statusbarStyles,statusbarHeight,titletextStyles,statustextStyles,buttonStyles,windowHandling);
			myMapApp.Windows["legend"].appendContent("coulourboxes",true);
			myMapApp.Windows["legend"].minimize(true);
			
		  //tab panel instance creation
			var tabStyles = {"fill":"rgb(180,180,180)","stroke":"dimgray","stroke-width":1,"cursor":"pointer"};
		      var tabwindowStyles = {"fill":"white","stroke":"dimgray","stroke-width":1};
		      var tabtextStyles = {"font-family":"Arial,Helvetica","font-size":15,"fill":"dimgray","font-weight":"normal"};
		      var tabtextStylesCenter = {"font-family":"Arial,Helvetica","font-size":15,"fill":"dimgray","font-weight":"normal","text-anchor":"middle"};
		                
		      //setting tabTitles
		      var tabTitles = new Array("Values","Chart");
		     
		      detailTabGroup = new tabgroup("detailTabGroup","detailTabGroup",5,21,200,175,20,"round","round",5,0,tabStyles,"lightgray",tabwindowStyles,tabtextStyles,tabTitles,0,false,undefined);
		              
		      //add new content
		      detailTabGroup.addContent("detailTabGroup__0_content",0,true);
		      detailTabGroup.addContent("detailTabGroup__1_content",1,true);
		                      
		      //activate tab
		      //detailTabGroup.activateTabByIndex(0,false);
		      //detailTabGroup.resize(400,100);   
			
			//now initialize buttons
			myMapApp.buttons = new Array();
			//button styles, adopt the style settings to match your needs
			var buttonTextStyles = {"font-family":"Arial,Helvetica","fill":"dimgray","font-size":10};
			var buttonStyles = {"fill":"white"};
			var shadeLightStyles = {"fill":"rgb(235,235,235)"};
			var shadeDarkStyles = {"fill":"dimgray"};
			
			//button instance creation
			//groupId,functionToCall,buttonType,buttonText,buttonSymbolId,x,y,width,height,textStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,shadowOffset
			myMapApp.buttons["zoomIn"] = new button("zoomIn",zoomImageButtons,"rect",undefined,"magnifyerZoomIn",7,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["zoomOut"] = new button("zoomOut",zoomImageButtons,"rect",undefined,"magnifyerZoomOut",32,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["infoButton"] = new switchbutton("infoButton",zoomImageSwitchButtons,"rect",undefined,"infoBut",132,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["infoButton"].setSwitchValue(true,false);
			statusChange("Mode: Infomode");
			myMapApp.buttons["zoomFull"] = new button("zoomFull",zoomImageButtons,"rect",undefined,"magnifyerFull",57,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["zoomManual"] = new switchbutton("zoomManual",zoomImageSwitchButtons,"rect",undefined,"magnifyerManual",82,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["panManual"] = new switchbutton("panManual",zoomImageSwitchButtons,"rect",undefined,"symbPan",107,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["recenterMap"] = new switchbutton("recenterMap",zoomImageSwitchButtons,"rect",undefined,"symbRecenter",132,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["backwardExtent"] = new button("backwardExtent",zoomImageButtons,"rect",undefined,"symbArrowLeft",157,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["forwardExtent"] = new button("forwardExtent",zoomImageButtons,"rect",undefined,"symbArrowRight",182,165,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			//see if we need to disable buttons
			myMainMap.checkButtons();
			
			//create checkbox array
			myMapApp.checkBoxes = new Array();
			//labeltext styles
			var labeltextStyles = {"font-family":"Arial,Helvetica","fill":"dimgray","font-size":14};
			
			
			
			//create individual checkboxes
			for(i = 0; i < layer_names.length; i++) {
				var offset = 45 + (30*i);
				myMapApp.checkBoxes[layer_names[i]] = new checkBox("cb_" + layer_names[i],"checkBoxes",30,offset,"checkBoxRect","checkBoxCross",true,layer_descriptions[i],labeltextStyles,12,undefined,toggleMapLayer);
			}
			
			
			//radio button group
			radioGroup= new radioButtonGroup("radioButtons",setKpi);
			//the following two checkboxes are added to the radio button group stored in the object instance 'radioGroupQuality'
			for(i = 0; i < kpi_names.length; i++) {
				var offset = 50 + (30*i);
				myMapApp.checkBoxes[kpi_names[i]] = new checkBox(kpi_names[i],"radioButtons",30,offset,"radioBorder","radioPoint",false,kpi_descriptions[i],labeltextStyles,12,radioGroup,undefined);
			}
			
			// create detail infopanels
			myMapApp.infoPanel = new Array();
			var dynamText = document.getElementById("dynamText");
			for(i = 0; i < kpi_names.length; i++) {
				var offset = 50 + (i*25);
				var panel = document.createElementNS(svgNS,"text");
				panel.setAttribute("id","infopanel" + (i+1));
				panel.setAttribute("x", "20");
				panel.setAttribute("y", "" + offset);
				panel.setAttribute("fill", "dimgray");
				panel.setAttribute("font-family", "Arial,Helvetica");
				panel.setAttribute("font-size", "14px");
				panel.setAttribute("startOffset", "0");
				
				var text_node = document.createTextNode(kpi_descriptions[i]);
				panel.appendChild(text_node);
				
				dynamText.appendChild(panel);
				
				myMapApp.infoPanel[i] = panel;
			}

			
			
			myMapApp.legPanel1 = document.getElementById("legpanel1");
			myMapApp.legPanel2 = document.getElementById("legpanel2");
			myMapApp.legPanel3 = document.getElementById("legpanel3");
			myMapApp.legPanel4 = document.getElementById("legpanel4");
			myMapApp.legPanel5 = document.getElementById("legpanel5");
			
			myMapApp.legRect1 = document.getElementById("rect1");
			myMapApp.legRect2 = document.getElementById("rect2");
			myMapApp.legRect3 = document.getElementById("rect3");
			myMapApp.legRect4 = document.getElementById("rect4");
			myMapApp.legRect5 = document.getElementById("rect5");
			
			myMapApp.loadStatus = document.getElementById("statusColorMap");
			myMapApp.loadStatus = document.getElementById("statusColorMap");
			myMapApp.targetLayer = document.getElementById(layer_names[target_layer_index]);

			//load function specific to the current map project
			radioGroup.selectById(kpi_names[selected_kpi_index],true);
			
			loadProjectSpecific();
			
			if (document.documentElement.suspendRedraw) {
				document.documentElement.unsuspendRedraw(suspendProcess);
			}
		}
		
	   //this function is called after each pan or zoom or change of map extent
       //you can place project specific functions here that need to re.on the map extent, e.g. adopting line-widths, loading additional data, etc.
       function loadProjectSpecific() {
           var names = [];
           var values = [];
           var maxValue = 0;
           var child = myMapApp.targetLayer.firstChild;
           while(child) {
               if (child.nodeName == "path") {
                                     for(i = 0; i < kpi_names.length; i++) {
                       var t = parseFloat(child.getAttributeNS(attribNS, kpi_names[i]));
                       if(t > maxValue) {
                           maxValue = t;
                       }
                   }
               }
               child = child.nextSibling;
           }                                         
           var detailBarChartRenderer = new BarChartRenderer(50, 35,100,100,3);
           detailBarChartRenderer.maxGridLineValue = maxValue;
           var layerBarChartRenderer = new BarChartRenderer(50, 35,100,100,3);
           layerBarChartRenderer.maxGridLineValue = maxValue;
           layerBarChartRenderer.gridLineVisible = false;
           layerBarChartRenderer.labelsVisible = false;
           child = myMapApp.targetLayer.firstChild;
           while(child) {
               if (child.nodeName == "path") {
                                     names = new Array();
                   values = new Array();
                                     for(i = 0; i < kpi_names.length; i++) {
                       names[i] = kpi_names[i];
                       values[i] = child.getAttributeNS(attribNS, kpi_names[i]);
                   }
                                     detailBarChartRenderer.setDataset(names, values, kpi_colours);
                   detailBarChartRenderer.render(document.getElementById("detailTabGroup__1_content"), child.getAttributeNS(null, "id") + "_chart", "none");
                   if(includeChartLayer == true) {
                       layerBarChartRenderer.setDataset(names, values, kpi_colours);
                       var chartW = 800;
                       var chartH = 1600;
                       var centroide = document.getElementById("centroidi_" + child.getAttributeNS(null, "id"));
                       layerBarChartRenderer.chartX = centroide.getAttributeNS(null, "cx") - (chartW/2);
                       layerBarChartRenderer.chartY = centroide.getAttributeNS(null, "cy") - (chartH);
                       layerBarChartRenderer.chartW = chartW;
                       layerBarChartRenderer.chartH = chartH;
                       layerBarChartRenderer.render(document.getElementById("grafici"), child.getAttributeNS(null, "id") + "_chartLayer", "inherit");
                   }
                   
                   if(includeValuesLayer == true) {
                       var text;
                       
                       var rounded_value = values[selected_kpi_index];
                   	   var value_string = rounded_value.toString();
		   			   var decimal_location = value_string.indexOf(".");		
		   			   if (decimal_location != -1) {
                   	   		var value_float = round_decimals( parseFloat(value_string), 2 );
                   	   		text = value_float.toString();
                   	   } else {                       	
                       		text = values[selected_kpi_index];
                  	   }
                       
                       
                       var valueLabel = document.createElementNS(svgNS,"text");
                       var centroide = document.getElementById("centroidi_" + child.getAttributeNS(null, "id"));
                       valueLabel.setAttribute("x",centroide.getAttributeNS(null, "cx"));
                       valueLabel.setAttribute("y",centroide.getAttributeNS(null, "cy"));
                       valueLabel.setAttribute("id", "label_" + child.getAttributeNS(null, "id"));
                       valueLabel.setAttribute("text-anchor","middle");
                       valueLabel.setAttribute("font-family","Arial,Helvetica");
                       valueLabel.setAttribute("font-size","600px");
                       valueLabel.setAttribute("fill","black");
                       var textNode = document.createTextNode(text);
                       valueLabel.appendChild(textNode);
                       var valuesLayer = document.getElementById("valori");
                       valuesLayer.appendChild(valueLabel);
                   }
               }
               child = child.nextSibling;
           }
       } 
		
	   var num_group = new Array();
	   for(i = 0; i < kpi_names.length; i++) num_group[kpi_names[i]] = 5;
	   
	   var lb = new Array();
	   for(i = 0; i < kpi_names.length; i++) lb[kpi_names[i]] = 0;
	    
	   var ub = new Array();	
	   for(i = 0; i < kpi_names.length; i++) ub[kpi_names[i]] = 5;
	    
	   var lb_color = new Array();
	   for(i = 0; i < kpi_names.length; i++) lb_color[kpi_names[i]] = "#FFFFFF";
	    
	   var ub_color = new Array();
	   for(i = 0; i < kpi_names.length; i++) ub_color[kpi_names[i]] = "#000000";
	    
	   var null_values_color = new Array();
	   for(i = 0; i < kpi_names.length; i++) null_values_color[kpi_names[i]] = "#123456";
	   
		
		var trasholdCalculationType = new Array();
		for(i = 0; i < kpi_names.length; i++) trasholdCalculationType[kpi_names[i]] = "quantile";
		
	   function setTresholds() {	   		
	   
			for(i = 0; i < kpi_names.length; i++) {			
				
				setQuantileTrasholds(kpi_names[i]);
				
				alert("--> " + kpi_names[i]);
			}
		}
		
		function setQuantileTrasholds(kpiName) {
			if(lb[kpiName] == null) {
		   			lb[kpiName] = kpi_ordered_values[kpiName][0];
		   		}
		   		if(ub[kpiName] == null) {
		   			ub[kpiName] = kpi_ordered_values[kpiName][kpi_ordered_values[kpi_names[kpiName]].length-1];
		   		}
		   		
		   		if(lb[kpiName] > ub[kpiName]) {
		   			var t = lb[kpiName];
		   			ub[kpiName] = lb[kpiName];
		   			lb[kpiName] = t;
		   		}
		   		
		   		if(ub[kpiName] < kpi_ordered_values[kpiName][0] || lb[kpiName] >  kpi_ordered_values[kpiName][kpi_ordered_values[kpiName].length-1]) {
		   			lb[kpiName] = kpi_ordered_values[kpiName][0];
		   			ub[kpiName] = kpi_ordered_values[kpiName][kpi_ordered_values[kpiName].length-1];
		   		}
				
				eval("thresh_"+kpiName+"=new Array()");
				var trasholds = eval("thresh_"+kpiName);
				
				var diff_value_num = 0;	
				var start_index = 0;	
				if(kpi_ordered_values[kpiName][0] >= lb[kpiName] && kpi_ordered_values[kpiName][kpi_ordered_values[kpiName].length-1] <= ub[kpiName]) {
					diff_value_num = kpi_ordered_values[kpiName].length;
					start_index = 0;
				} else {
					for(j = 0; j < kpi_ordered_values[kpiName].length; j++) {
						
			   			if(kpi_ordered_values[kpiName][j] >= lb[kpiName] && kpi_ordered_values[kpiName][j] <= ub[kpiName]) {
			   				start_index = (start_index == 0?j:start_index);
			   				diff_value_num++;
			   				//alert(kpi_ordered_values[kpiName][j] + "; " + diff_value_num + "; " + start_index);
			   			}
		   			}
		   		}
		   		
		   		//alert(start_index + " - " + diff_value_num)
				
				if(diff_value_num < num_group[kpiName]) num_group[kpiName] = diff_value_num;
				var blockSize = Math.floor( diff_value_num / num_group[kpiName] );
			
				trasholds[0] = lb[kpiName];
				for(j = 1; j < num_group[kpiName] ; j++){
					//alert( (j*blockSize) + " < " + kpi_ordered_values[kpiName].length + " = " + kpi_ordered_values[kpiName][j*blockSize]);
					trasholds[j] = kpi_ordered_values[kpiName][start_index + (j*blockSize)];
				}
				trasholds[num_group[kpiName]] = ub[kpiName];
				
				alert(kpiName + " - " + trasholds);
		}
		
			
		//this function toggles the display attribute of a map layer
		function toggleMapLayer(id,checkStatus,labelText) {
			var layerId = id.replace(/cb_/, "");
			var mapLayer = document.getElementById(layerId);
			var displayStatus = "none";
			if (checkStatus) {
				displayStatus = "inherit";
			}
			mapLayer.setAttributeNS(null,"display",displayStatus);
		}
		
		
		
		function setKpi(cbId,radioId,label) {
			if (document.documentElement.suspendRedraw) {
				suspendProcess = document.documentElement.suspendRedraw(30000);
			}
			//set current topic in mapApp object
			myMapApp.curKpi = radioId;
			myMapApp.colArray = eval("col_"+myMapApp.curKpi);
			myMapApp.threshArray = eval("thresh_"+myMapApp.curKpi);
			myMapApp.curLabel = label;
			
			for (var i = 0;i<num_group[myMapApp.curKpi];i++) {
				//color rectangle
				eval("myMapApp.legRect"+(i+1)).setAttributeNS(null,"fill",myMapApp.colArray[i]);
				var closingChar = (i!=myMapApp.colArray.length-1?")":"]");
				var textString = "-   ["+myMapApp.threshArray[i] + " - "+myMapApp.threshArray[i+1] + closingChar;
				eval("myMapApp.legPanel"+(i+1)).firstChild.nodeValue = textString;
			}
			
			myMapApp.loadStatus.setAttributeNS(null,"display","inline");		
			
			window.setTimeout("colourMap()",200);
			if (document.documentElement.suspendRedraw) {
				document.documentElement.unsuspendRedraw(suspendProcess);
			}
		}
			
			
		function mouseClickHandler(evt) {
			var targetElemet = evt.target;
			
			alert(evt.type);
			
			if(isShowTableModalityActive) {
				var parameters = new Array();
         		parameters[0] = targetElemet.getAttribute("id");
         		alert("fine1");
         		alert("p-->" + this.parent); 
         		alert("t-->" + this.top); 
         		alert("fine2");
         		top.executeFunctionInChildFrame(0, "showTable", parameters);
				
				alert("fine");
				
				//alert("bella di padella: " + targetElemet.getAttribute("id"));
				//parent.showTable(targetElemet.getAttribute("id"));				
			} else {
				alert("Sorry, drill modality is not fully sopported yet");
			}
		}	
		
		function round_decimals(original_number, decimals) {
		   var result1 = original_number * Math.pow(10, decimals);
		   var result2 = Math.round(result1);
		   var result3 = result2 / Math.pow(10, decimals);
		   return pad_with_zeros(result3, decimals);
		}
			
		function pad_with_zeros(rounded_value, decimal_places) {
		
		   // Convert the number to a string
		   var value_string = rounded_value.toString();
		   
		   // Locate the decimal point
		   var decimal_location = value_string.indexOf(".");
		
		   // Is there a decimal point?
		   if (decimal_location == -1) {
		       // If no, then all decimal places will be padded with 0s
		       decimal_part_length = 0;
		       // If decimal_places is greater than zero, tack on a decimal point
		       value_string += decimal_places > 0 ? "." : "";
		   } else {		
		       // If yes, then only the extra decimal places will be padded with 0s
		       decimal_part_length = value_string.length - decimal_location - 1;
		   }
		   
		   // Calculate the number of decimal places that need to be padded with 0s
		   var pad_total = decimal_places - decimal_part_length;
		   if (pad_total > 0) {
		   		// Pad the string with 0s
		   		for (var counter = 1; counter <= pad_total; counter++) value_string += "0";
		   }
		   return value_string;
		}

        function showData(evt){
           var el = evt.target;
           var nome = el.getAttributeNS(attribNS,"nome");
           if(nome == null || nome == "") nome = el.getAttribute("id");
           
           var id = el.getAttributeNS(null,"id");
           var kpi_values = [];
           
           for(i = 0; i < kpi_names.length; i++) {
                   kpi_values[kpi_names[i]] = el.getAttributeNS(attribNS,kpi_names[i]);
           }
           
           var targetValue = parseFloat(kpi_values[myMapApp.curKpi]);
           
           //determine class
           var colIndex = -1;   
           
           if(targetValue ==  myMapApp.threshArray[myMapApp.threshArray.length-1] ) {
           		colIndex = myMapApp.threshArray.length-2;
           } else {             
	           for (var i = 0;i<myMapApp.threshArray.length-1;i++) {
	               if (targetValue >= myMapApp.threshArray[i] && targetValue <  myMapApp.threshArray[i+1]) {
	                   colIndex = i;
	                   break;
	               }
	           }
	       }
           
           var curLegendRect = (colIndex != -1? eval("myMapApp.legRect"+(colIndex+1)) : null);
           
           if (evt.type=="mouseover"){
               myMapApp.Windows["detail"].setTitleText(nome);
               if (!myMapApp.Windows["detail"].closed) {
                   for(i = 0; i < kpi_names.length; i++) {
                        var rounded_value = kpi_values[kpi_names[i]];
                   		var value_string = rounded_value.toString();
		   				var decimal_location = value_string.indexOf(".");		
		   				if (decimal_location != -1) {
                   	   		var value_float = parseFloat(kpi_values[kpi_names[i]]);
                   	   		myMapApp.infoPanel[i].firstChild.nodeValue = kpi_descriptions[i] + " " + round_decimals(value_float,2);
                   	   	} else {                       	
                       		myMapApp.infoPanel[i].firstChild.nodeValue = kpi_descriptions[i] + " " + kpi_values[kpi_names[i]];
                  		}
				   }
                   if(document.getElementById(id + "_chart") != null) {
                   		document.getElementById(id + "_chart").setAttributeNS(null, "display","block");
                   }
                }
                             
                myMapApp.Windows["legend"].setTitleText(myMapApp.curKpi + ": " + round_decimals(targetValue,2));
               	if (curLegendRect != null && !myMapApp.Windows["legend"].closed) {
                   curLegendRect.setAttributeNS(null, "stroke-width",2);
                   curLegendRect.setAttributeNS(null, "stroke","black");
               	}
            }
                     
            if (evt.type=="mouseout"){
               myMapApp.Windows["detail"].setTitleText("Detail");
               if (!myMapApp.Windows["detail"].closed) {
                   for(i = 0; i < kpi_names.length; i++) {
                       myMapApp.infoPanel[i].firstChild.nodeValue = kpi_descriptions[i] + " ";
                   }
                   if(document.getElementById(id + "_chart") != null) {
                       document.getElementById(id + "_chart").setAttributeNS(null, "display","none");
                   }
               }
               myMapApp.Windows["legend"].setTitleText("Legend");
               if (curLegendRect != null && !myMapApp.Windows["legend"].closed) {
                   curLegendRect.setAttributeNS(null, "stroke-width",1);
                   curLegendRect.setAttributeNS(null, "stroke","dimgray");
               }
             }
        } 
			
		function colourMap() {
			if (document.documentElement.suspendRedraw) {
				suspendProcess = document.documentElement.suspendRedraw(20000);
			}
						
			var child = myMapApp.targetLayer.firstChild;
			 
			// alert(child.getAttributeNS(attribNS,myMapApp.curKpi));
			 
			while(child) {
				if (child.nodeName == "path") {
					var kpiAttrib = parseInt(child.getAttributeNS(attribNS,myMapApp.curKpi));
			
			
					var targetColor = "#666666";
					
					
					if(child.getAttributeNS(attribNS,myMapApp.curKpi) == "") {
						//alert("FOUND " + null_values_color[myMapApp.curKpi]);
						targetColor = null_values_color[myMapApp.curKpi];
					} else if(kpiAttrib < lb[myMapApp.curKpi]) {
						targetColor = lb_color[myMapApp.curKpi];
					} else if(kpiAttrib > ub[myMapApp.curKpi]) {
						targetColor = ub_color[myMapApp.curKpi];
					} else if(kpiAttrib == ub[myMapApp.curKpi]) {
						targetColor = myMapApp.colArray[myMapApp.threshArray.length-2];
					} else  {
						for (var i = 0;i<myMapApp.threshArray.length-1;i++) {
							if (kpiAttrib >= myMapApp.threshArray[i] && kpiAttrib <  myMapApp.threshArray[i+1]) {
								targetColor = myMapApp.colArray[i];
								break;
							}
						}
					}
					
					//if(targetColor == "#666666") alert(child.getAttribute("id") + " - " + child.getAttributeNS(attribNS,myMapApp.curKpi));
					
					child.setAttributeNS(null,"fill",targetColor);
					
					if(includeValuesLayer == true) {
					   var text = "";
					   var rounded_value = child.getAttributeNS(attribNS,myMapApp.curKpi);
                   	   var value_string = rounded_value.toString();
		   			   var decimal_location = value_string.indexOf(".");		
		   			   if (decimal_location != -1) {
		   			   		alert(value_string + " - " + parseFloat(value_string) + " - " + round_decimals(parseFloat(value_string), 2) );
                   	   		var value_float = round_decimals( parseFloat(value_string), 2 );
                   	   		text = value_float.toString();
                   	   } else {                       	
                       		text = child.getAttributeNS(attribNS,myMapApp.curKpi);
                  	   }
						var valueLabel = document.getElementById("label_" + child.getAttributeNS(null, "id"));					
						valueLabel.firstChild.nodeValue = text;
					}
				}
				child = child.nextSibling;
			}
			
			myMapApp.loadStatus.setAttributeNS(null,"display","none");
			if (document.documentElement.suspendRedraw) {
				document.documentElement.unsuspendRedraw(suspendProcess);
			}
		}
			
	function windowHandling(id,evtType) {
		if (evtType == "minimized") {
			windowPositions[id] = {"x":myMapApp.Windows[id].transX,"y":myMapApp.Windows[id].transY};
			myMapApp.Windows[id].moveable = false;
			y = 720;
			if (id == "navWindow") {
				x = 10;
			}
			if (id == "basiclayer") {
				x = 436;
			}
			if (id == "thematic") {
				x = 223;
			}
			if (id == "legend") {
				x = 862;
			}
			if (id == "detail") {
				x = 649;
			}
			
			myMapApp.Windows[id].moveTo(x,y,false);
		}
		if (evtType == "maximized") {
			myMapApp.Windows[id].moveTo(windowPositions[id].x,windowPositions[id].y,false);
			myMapApp.Windows[id].moveable = true;
		}
	}
			
]]></script>
		
		<defs>
			<!-- Symbols for checkboxes -->
			<symbol id="checkBoxRect" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<rect x="-6" y="-6" width="12" height="12" fill="white" stroke="dimgray" stroke-width="1.5"/>
			</symbol>
			
			<symbol id="checkBoxCross" overflow="visible" fill="none" stroke="dimgray" stroke-width="1" pointer-events="none" preserveAspectRatio="xMidYMid meet">
				<line x1="-5" y1="-5" x2="5" y2="5"/>
				<line x1="-5" y1="5" x2="5" y2="-5"/>
			</symbol>
			<!-- symbols for radio buttons -->
			<symbol id="radioBorder" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<circle fill="white" stroke="dimgray" stroke-width="1.5" cursor="pointer" r="5" cx="0" cy="0"/>
			</symbol>
			<symbol id="radioPoint" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<circle fill="dimgray" r="3" pointer-events="none" cx="0" cy="0"/>
			</symbol>
			<!-- Symbols for Zoom Magnifyer glasses -->
			<symbol id="magnifyerFull" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<text y="7.5" font-family="Arial,Helvetica" fill="dimgray" font-size="18px" font-weight="bold" text-anchor="middle" pointer-events="none" startOffset="0">F</text>
			</symbol>
			
			<symbol id="infoBut" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<circle fill="none" stroke="dimgray" stroke-width="1.5" r="7.5" cx="0" cy="0"/>
				<text y="5" font-family="Arial,Helvetica" font-size="13px" font-weight="bold" fill="dimgray" text-anchor="middle" pointer-events="none" startOffset="0">i</text>
			</symbol>
			<symbol id="magnifyerManual" overflow="visible" fill="none" stroke="dimgray" stroke-width="1.5" preserveAspectRatio="xMidYMid meet">
				<rect x="-6" y="-6" width="12" height="12" stroke-dasharray="1.5,1.5"/>
				<line x1="-3" y1="0" x2="3" y2="0"/>
				<line x1="0" y1="-3" x2="0" y2="3"/>
				
			</symbol>
			<symbol id="magnifyerZoomIn" overflow="visible" fill="none" stroke="dimgray" stroke-width="2" preserveAspectRatio="xMidYMid meet">
				<line x1="-4" y1="0" x2="4" y2="0"/>
				<line x1="0" y1="-4" x2="0" y2="4"/>
			</symbol>
			<symbol id="magnifyerZoomOut" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<line x1="-4" y1="0" x2="4" y2="0" fill="none" stroke="dimgray" stroke-width="2"/>
			</symbol>
			<!-- hand symbol for panning -->
			
			<symbol id="symbPan" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<path transform="scale(1.2)" fill="none" stroke="dimgray" stroke-width="1" d="M-2 6 C -2.2 2.5 -8.0 -0 -5.7 -1.9 C -4.3 -2.5 -3.3 -0.5 -2.5 0.7 C -3.2 -2.1 -5.5 -5.2 -3.6 -5.8 C -2.1 -6.3 -1.6 -3.6 -1.1 -1.9 C -0.9 -4.2 -1.6 -6.4 -0.2 -6.6 C 1.4 -6.8 0.9 -3 1.1 -1.9 C 1.5 -3.5 1.2 -6.1 2.5 -6.1 C 3.9 -6.1 3.5 -3.2 3.6 -1.6 C 4 -2.9 4.1 -4.3 5.3 -4.4 C 7.3 -3.5 4 2.2 3 6z"/>
			</symbol>
			<!-- Symbol for Arrows -->
			<symbol id="symbArrow" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<polyline fill="none" stroke="dimgray" stroke-width="1" points="-3,-6 3,-6 3,1 5,1 0,7 -5,1 -3,1 -3,-5"/>
			</symbol>
			<symbol id="symbArrowLeft" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<use xlink:href="#symbArrow" transform="rotate(90)"/>
				
			</symbol>
			<symbol id="symbArrowRight" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<use xlink:href="#symbArrow" transform="rotate(-90)"/>
			</symbol>
			<!-- Symbol for Recentering Map -->
			<symbol id="symbRecenter" overflow="visible" preserveAspectRatio="xMidYMid meet">
				<circle fill="dimgray" cx="0" cy="0" r="1" pointer-events="none"/>
				<g fill="none" stroke="dimgray" stroke-width="1.5" pointer-events="none">
					<line x1="-7" y1="-7" x2="-3" y2="-3"/>
					
					<line x1="7" y1="7" x2="3" y2="3"/>
					<line x1="-7" y1="7" x2="-3" y2="3"/>
					<line x1="7" y1="-7" x2="3" y2="-3"/>
				</g>
			</symbol>
			<!-- Symbol for Slider -->
			<symbol id="sliderSymbol" overflow="visible" pointer-events="none" preserveAspectRatio="xMidYMid meet">
				<line x1="0" y1="-5" x2="0" y2="5" fill="none" stroke="dimgray" stroke-width="5"/>
			</symbol>
			
			<!-- Symbol for Dragging if zoomed in far -->
			<symbol id="myDragCrossSymbol" overflow="visible" stroke-width="2000" fill="none" stroke="darkblue" pointer-events="none" preserveAspectRatio="xMidYMid meet">
				<line x1="-7000" y1="0" x2="-2500" y2="0"/>
				<line x1="7000" y1="0" x2="2500" y2="0"/>
				<line x1="0" y1="-3300" x2="0" y2="-7800"/>
				<line x1="0" y1="3300" x2="0" y2="7800"/>
			</symbol>
			<!-- Marker for Extent-Arrows -->
			<marker id="myStartArrow" overflow="visible" orient="auto" preserveAspectRatio="xMidYMid meet">
				
				<polyline fill="dimgray" points="-0.5,0 8,-2 8,2"/>
			</marker>
			<marker id="myEndArrow" overflow="visible" orient="auto" preserveAspectRatio="xMidYMid meet">
				<polyline fill="dimgray" points="0.5,0 -8,-2 -8,2"/>
			</marker>
		<symbol id="maximizeButton" overflow="visible" preserveAspectRatio="xMidYMid meet"><rect x="-5.5" y="-5.5" width="11" height="11" fill="steelblue" stroke="white" stroke-width="2" pointer-events="fill"/></symbol><symbol id="minimizeButton" overflow="visible" preserveAspectRatio="xMidYMid meet"><rect x="-5.5" y="-5.5" width="11" height="11" fill="steelblue" pointer-events="fill"/><line x1="5.5" x2="-5.5" y1="5.5" y2="5.5" stroke="white" stroke-width="2"/></symbol></defs>
		<title>SpagoBI Geo Engine</title>
		
		
		<!-- sfondo del pannello che contiene la mappa -->
		<rect x="0" y="0" width="1100" height="722" stroke="none" fill="#e6e6e6"/>
		
		<!-- sfondo della mappa -->
		<rect x="4" y="4" width="1092" height="690" fill="#dce6fa"/>
		
		<!-- Main Map Frame -->
		<svg id="mainMap" x="4" y="4" width="1092" height="690" viewBox="0 0 0 0" 
			xmlns:attrib="http://www.carto.net/attrib" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" 
			preserveAspectRatio="xMidYMid meet" zoomAndPan="magnify">
			
			<style type="text/css">
				<![CDATA[
				circle {stroke-width:2}
				]]>
			</style>


				
				<g id="mainMapGroup">
		
				<rect id="mapBackgroundRect" x="0" y="0" width="0" height="0" fill="none" stroke="none" pointer-events="fill"/>
			
				<g id="eventCatcher" fill="white" stroke="gainsboro" stroke-width="2000" stroke-linecap="round" stroke-linejoin="round" 
					 onmouseover="showData(evt)" onmouseout="showData(evt)" onclick="mouseClickHandler(evt)">
				
				<g id="targetMap">
				
				
				
				</g>
				
				<g id="grafici" fill="white" stroke="black" stroke-width="0.2" stroke-linecap="square " stroke-linejoin="miter">	</g>
				<g id="valori" fill="white" stroke="black" stroke-width="0.2" stroke-linecap="square " stroke-linejoin="miter">	</g>
				
				</g>
				</g>
		</svg>

	<!-- cornice della mappa -->
	<rect x="4" y="4" width="1092" height="690" fill="none" stroke="dimgray"/>
		
	<g id="statusColorMap" display="none">
		<rect x="500" y="200" width="160" height="50" fill="#fffce6" fill-opacity="0.8"/>
		<text x="515" y="220" fill="steelblue" font-family="Arial,Helvetica" font-size="14px" startOffset="0">loading Data ...</text>
		<text x="560" y="240" fill="steelblue" font-family="Arial,Helvetica" font-size="14px" startOffset="0">...coloring Map</text>
	</g>
	
	    <!-- this group holds navigation, title and if you like, legend information -->
	    <g>
	        
	        <!-- map impressum and status Bar -->
	        <g text-rendering="optimizeLegibility" font-family="Arial,Helvetica" fill="dimgray" font-size="12px">
	            <!-- text with this id is required to show help texts -->
	            <text id="statusText" x="-745" y="-100" startOffset="0">Statusbar: Mode: Infomode</text>
	            
	        	<text x="10" y="713" startOffset="0">Map Authors: Engineering Ingegneria Informatica S.p.A.</text>
	        	<text x="1090" y="713" text-anchor="end" startOffset="0">Source: SIT Comune di Genova</text>
	        </g>
	    </g>
	    <!-- small reference map, shares the same coordinate system than the main map -->
	    <!-- it is very recommended that the width and height of the nested svg element has the same ratio as the viewBox width and height -->
		
	    <!-- this group holds the zoom slider and buttons -->
	    <g>
	        <!-- empty group where zoomSlider is later appended -->
	        
	        <!-- button for zoom-in, above slider -->
	        
	        <!-- button for zoom-out, below slider -->
	        
	        <!-- info button -->
	        
	        <!-- button for full view (f) -->
	        
	        <!-- button for manual zoom (rectangle) -->
	        
	        <!-- button for manual pan -->
	        
	        <!-- button for redefining map center -->
	        <g id="recenterMap" display="none"><rect x="131" y="164" width="20" height="20" points="132,185 132,165 152,165" fill="rgb(235,235,235)"/>
					<rect x="133" y="166" width="20" height="20" points="132,185 132,165 152,165" fill="dimgray"/>
					<rect x="132" y="165" width="20" height="20" fill="white" cursor="pointer"/>
					<use x="142" y="175" href="#symbRecenter" pointer-events="none"/>
					<rect x="131" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/></g>
	        <!-- button for backwarding map extent (extent history) -->
	        
	        <!-- button for forwarding map extent (extent history) -->
	        
	        <!-- button for demonstrating highlight feature of the map -->
	        <g id="highlightMap" cursor="pointer"/>		
	    </g>
	 lo
	    
	    <!-- WINDOWS CONTENT -->
	    <g id="Windows">
			
				<!-- Navigation Window -->
				<g id="navWindow" transform="translate(10,537)">
					
					<rect width="210" height="200" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					<rect width="210" height="17" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					
					<g id="windowMainGroupnavWindow">
						<!--
						<rect width="210" height="200" fill="#fffce6" stroke="dimgray" stroke-width="1"/>
						-->
						<g/>
						<svg id="referenceMap" x="10" y="8" viewBox="-2471570.4 -1631093.7 4844781 3030131.8" width="190" height="150" 
								 xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" 
								 preserveAspectRatio="xMidYMid meet" zoomAndPan="magnify" cursor="crosshair" display="inherit">
								 
								 <rect x="-2471570.4" y="-1631093.7" width="4844781" height="3030131.8" fill="none" stroke="none" pointer-events="fill"/>
								 <rect fill="none" pointer-events="fill" x="-2471570.4" y="-1631093.7" width="4844781" height="3030131.8"/>
								
								<!-- here you can place any graphical elements for your reference/overview map -->
								<use xlink:href="#mainMapGroup" fill="white" stroke="black" stroke-width="2419.9" stroke-linecap="round" stroke-linejoin="round" pointer-events="none"/>
								<rect x="-2471570.4" y="-1631093.7" width="4844781" height="3030131.8" fill="dimgray" fill-opacity="0.3" pointer-events="none"/>
								<use x="-2471570.4" y="-1631093.7" visibility="hidden" href="#myDragCrossSymbol"/>
								
								<g visibility="hidden" stroke="crimson" stroke-width="55689.5" pointer-events="none">
									<line x1="-2471570" x2="2373210" y1="-116028" y2="-116028"/>
									<line x1="-49179.9" x2="-49179.9" y1="-1631090" y2="1399040"/>
								</g>
						</svg>
						
						<g id="zoomIn" cursor="pointer" display="inherit">
							<rect x="6" y="164" width="20" height="20" points="7,185 7,165 27,165" fill="rgb(235,235,235)"/>
							<rect x="8" y="166" width="20" height="20" points="7,185 7,165 27,165" fill="dimgray"/>
							<rect x="7" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="17" y="175" href="#magnifyerZoomIn" pointer-events="none"/>
							<rect x="6" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="none" cursor="default"/>
						</g>
						
						<g id="mapZoomSlider" display="inherit">
							<!--
							<line x1="180" y1="153" x2="20" y2="153" stroke="dimgray" stroke-width="10" opacity="0" stroke-linecap="square" id="mapZoomSlider_invisibleSliderLine"/>
							<line x1="180" y1="153" x2="20" y2="153" stroke="dimgray" stroke-width="2" id="mapZoomSlider_visibleSliderLine" pointer-events="none"/>
							<use xlink:href="#sliderSymbol" transform="translate(20,153.00000000000003) rotate(180)" id="mapZoomSlider_sliderSymbol"/>
							-->
						</g>
						
						<g id="zoomOut" cursor="pointer" display="inherit">
							<rect x="31" y="164" width="20" height="20" points="32,185 32,165 52,165" fill="rgb(235,235,235)"/>
							<rect x="33" y="166" width="20" height="20" points="32,185 32,165 52,165" fill="dimgray"/>
							<rect x="32" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="42" y="175" href="#magnifyerZoomOut" pointer-events="none"/>
							<rect x="31" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/>
						</g>
						
						<g id="zoomFull" cursor="pointer" display="inherit">
							<rect x="56" y="164" width="20" height="20" points="57,185 57,165 77,165" fill="rgb(235,235,235)"/>
							<rect x="58" y="166" width="20" height="20" points="57,185 57,165 77,165" fill="dimgray"/>
							<rect x="57" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="67" y="175" href="#magnifyerFull" pointer-events="none"/>
							<rect x="56" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/>
						</g>
						
						<g id="zoomManual" cursor="pointer" display="inherit">
							<rect x="81" y="164" width="20" height="20" points="82,185 82,165 102,165" fill="rgb(235,235,235)"/>
							<rect x="83" y="166" width="20" height="20" points="82,185 82,165 102,165" fill="dimgray"/>
							<rect x="82" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="92" y="175" href="#magnifyerManual" pointer-events="none"/>
							<rect x="81" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="none" cursor="default"/>
						</g>
						
						<g id="panManual" cursor="pointer" display="inherit">
							<rect x="106" y="164" width="20" height="20" points="107,185 107,165 127,165" fill="rgb(235,235,235)"/>
							<rect x="108" y="166" width="20" height="20" points="107,185 107,165 127,165" fill="dimgray"/>
							<rect x="107" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="117" y="175" href="#symbPan" pointer-events="none"/>
							<rect x="106" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/>
						</g>
						
						<g id="infoButton" cursor="pointer" display="inherit">
							<rect x="131" y="164" width="20" height="20" points="132,185 132,165 152,165" fill="dimgray"/>
							<rect x="133" y="166" width="20" height="20" points="132,185 132,165 152,165" fill="rgb(235,235,235)"/>
							<rect x="132" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="142" y="175" href="#infoBut" pointer-events="none"/>
							<rect x="131" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="none" cursor="default"/>
						</g>
						
						<g id="backwardExtent" cursor="pointer" display="inherit">
							<rect x="156" y="164" width="20" height="20" points="157,185 157,165 177,165" fill="rgb(235,235,235)"/>
							<rect x="158" y="166" width="20" height="20" points="157,185 157,165 177,165" fill="dimgray"/>
							<rect x="157" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="167" y="175" href="#symbArrowLeft" pointer-events="none"/>
							<rect x="156" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/>
						</g>
						
						<g id="forwardExtent" cursor="pointer" display="inherit">
							<rect x="181" y="164" width="20" height="20" points="182,185 182,165 202,165" fill="rgb(235,235,235)"/>
							<rect x="183" y="166" width="20" height="20" points="182,185 182,165 202,165" fill="dimgray"/>
							<rect x="182" y="165" width="20" height="20" fill="white" cursor="pointer"/>
							<use x="192" y="175" href="#symbArrowRight" pointer-events="none"/>
							<rect x="181" y="164" width="22" height="22" fill="white" fill-opacity="0.5" stroke="none" display="inherit" cursor="default"/>
						</g>
					</g>
					<!--
					<g>
						<rect width="210" height="17" fill="steelblue" stroke="dimgray" stroke-width="1" id="titleBarnavWindow" cursor="pointer"/>
						<text x="3" y="14" font-family="Arial,Helvetica" font-size="14px" fill="white" pointer-events="none" startOffset="0">
						Navigation
						</text>
						<use x="198.5" y="8.5" cursor="pointer" id="maximizeButtonnavWindow" href="#maximizeButton"/>
						<use x="181.5" y="8.5" cursor="pointer" id="minimizeButtonnavWindow" href="#minimizeButton"/>
					</g>
					-->
				</g>
					
				<!-- Layers Window -->
				<g id="basiclayer" transform="translate(436,720)">
					<rect width="210" height="200" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					<rect width="210" height="17" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					
					<g id="windowMainGroupbasiclayer" display="none">
						<!--
						<rect width="210" height="200" fill="#fffce6" stroke="dimgray" stroke-width="1"/>
						-->
						<g/>
						
						<g id="checkBoxes" display="inherit">
							<!--
							<use x="30" y="80" href="#checkBoxRect"/>
							<use x="30" y="80" href="#checkBoxCross"/>
							
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="84.5" startOffset="0">Streets</text>
							
							
							<use x="30" y="110" href="#checkBoxRect"/>
							<use x="30" y="110" href="#checkBoxCross"/>		
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="114.5" startOffset="0">Urban Areas</text>
							
							
							<use x="30" y="140" href="#checkBoxRect"/>
							<use x="30" y="140" href="#checkBoxCross" display="none"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="144.5" startOffset="0">States</text>
							-->
						</g>					
					</g>
					
					<!--
					<g>
						<rect width="210" height="17" fill="steelblue" stroke="dimgray" stroke-width="1" id="titleBarbasiclayer" cursor="pointer"/>
						<text x="3" y="14" font-family="Arial,Helvetica" font-size="14px" fill="white" pointer-events="none" startOffset="0">Map Layers</text>
						<use x="198.5" y="8.5" cursor="pointer" id="maximizeButtonbasiclayer" href="#maximizeButton"/>
						<use x="181.5" y="8.5" cursor="pointer" id="minimizeButtonbasiclayer" href="#minimizeButton"/>
					</g>
					-->					
				</g>
				
				<!-- Thematics Window -->
				<g id="thematic" transform="translate(223,537)"><rect width="210" height="200" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					<rect width="210" height="17" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					
					<g id="windowMainGroupthematic">					
						<!--
						<rect width="210" height="200" fill="#fffce6" stroke="dimgray" stroke-width="1"/>
						<g/>
						-->
						
						<g id="radioButtons" display="inherit">
							<!--
							<use x="30" y="50" href="#radioBorder"/>
							<use x="30" y="50" href="#radioPoint" display="none"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="54.5" startOffset="0">Assault</text>
							
							<use x="30" y="80" href="#radioBorder"/>
							<use x="30" y="80" href="#radioPoint" display="inherit"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="84.5" startOffset="0">Murder</text>
							
							<use x="30" y="110" href="#radioBorder"/>
							<use x="30" y="110" href="#radioPoint" display="none"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="114.5" startOffset="0">Robbery &amp; Car Theft</text>
							
							<use x="30" y="140" href="#radioBorder"/>
							<use x="30" y="140" href="#radioPoint" display="none"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="144.5" startOffset="0">Burglary</text>
							
							<use x="30" y="170" href="#radioBorder"/>
							<use x="30" y="170" href="#radioPoint" display="none"/>
							<text font-family="Arial,Helvetica" fill="dimgray" font-size="15px" x="42" y="174.5" startOffset="0">Poverty Status</text>
							-->
						</g>					
					</g>
					
					<!--
					<g>
						<rect width="210" height="17" fill="steelblue" stroke="dimgray" stroke-width="1" id="titleBarthematic" cursor="pointer"/>
						<text x="3" y="14" font-family="Arial,Helvetica" font-size="14px" fill="white" pointer-events="none" startOffset="0">Thematic Topics</text>
						<use x="198.5" y="8.5" cursor="pointer" id="maximizeButtonthematic" href="#maximizeButton"/>
						<use x="181.5" y="8.5" cursor="pointer" id="minimizeButtonthematic" href="#minimizeButton"/>
					</g>
					-->
				</g>
				
				
				
				
				<!-- Detail Window -->
				<g id="detail" transform="translate(649,720)">
					<rect width="441" height="200" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					<rect width="441" height="17" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
						
					<g id="windowMainGroupdetail" display="inherit">
						
						<!--
						<rect width="441" height="200" fill="#fffce6" stroke="dimgray" stroke-width="1"/>
						<g/>
						-->
						
						<g id="detailTabGroup" display="none">
							<g> 
									<g>            
											<g id="detailTabGroup__0_content">
													<g id="dynamText" class="allText normalText">
														<!--
														<text id="infopanel1" x="20" y="50" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">Iscritti </text>
														<text id="infopanel2" x="20" y="75" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">Asili </text>
														<text id="infopanel3" x="20" y="100" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">Docenti </text>
													-->
													</g>
											</g>
									</g>									
											 
									<g>                
											<g id="detailTabGroup__1_content">
											
											<!--
											<g id="chart" transform="translate(50 35)" font-size="8" shape-rendering="geometricPrecision" display="none">
													<rect id="chartBox" x="0" y="0" width="100" height="100" fill="none" stroke="gray" stroke-width=".2"/>
											</g>
											-->
											</g>
									</g>
							</g>
						</g>
						
					
						
					</g>
				</g>
				
				
				<!-- Legend Window -->
				<g id="legend" transform="translate(649,720)">
					<rect width="441" height="200" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
					<rect width="441" height="17" fill="none" stroke="dimgray" stroke-width="1.5" display="none"/>
						
					<g id="windowMainGrouplegend" display="none">
						
						<!--
						<rect width="441" height="200" fill="#fffce6" stroke="dimgray" stroke-width="1"/>
						<g/>
						-->
							
						<g id="coulourboxes" display="inherit">
							
							<text id="legpanel5" x="70" y="50" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">&gt; 2.5 - 22</text>
							<text id="legpanel4" x="70" y="75" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">&gt; 1 - 2.5</text>
							<text id="legpanel3" x="70" y="100" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">&gt; 0.2 - 1</text>
							<text id="legpanel2" x="70" y="125" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">&gt; 0.02 - 0.2</text>
							<text id="legpanel1" x="70" y="150" fill="dimgray" font-family="Arial,Helvetica" font-size="14px" startOffset="0">&gt; 0 - 0.02</text>
							
							<rect id="rect5" fill="#500000" stroke="dimgray" x="30" y="35" width="30" height="20"/> 
							<rect id="rect4" fill="#BD3618" stroke="dimgray" x="30" y="60" width="30" height="20" stroke-width="1"/> 
							<rect id="rect3" fill="#F77B11" stroke="dimgray" x="30" y="85" width="30" height="20" stroke-width="1"/> 
							<rect id="rect2" fill="#FECC55" stroke="dimgray" x="30" y="110" width="30" height="20" stroke-width="1"/> 
							<rect id="rect1" fill="#F7F791" stroke="dimgray" x="30" y="135" width="30" height="20" stroke-width="1"/>		
						</g>
					</g>
				
					<!--
					<g>
						<rect width="441" height="17" fill="steelblue" stroke="dimgray" stroke-width="1" id="titleBarlegend" cursor="pointer"/>
						<text x="3" y="14" font-family="Arial,Helvetica" font-size="14px" fill="white" pointer-events="none" startOffset="0">Legend and Values</text>
						<use x="429.5" y="8.5" cursor="pointer" id="maximizeButtonlegend" href="#maximizeButton"/>
						<use x="412.5" y="8.5" cursor="pointer" id="minimizeButtonlegend" href="#minimizeButton"/>
					</g>
					-->
				</g>
		
		</g>
	
	
		 
		
		<!-- tab content -->
    
	
		<!-- show data -->
	
		
	
		<svg id="logo" x="1040" y="-1" width="500" height="200" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid meet" zoomAndPan="magnify">
			<g transform="scale(0.3)">
			
			</g>
		</svg>
	</svg>
