<script language="javascript" type="text/javascript">

Sbi.template = {


	// --------------------------------------------------------------------------------
	// DATASETS
	// --------------------------------------------------------------------------------
	datasets: [
        {
            id: 'testConsoleChart'
            , label: 'testConsoleChart'
            , params: {}  
            , refreshTime: '30'
        }
	]
	
	
	// --------------------------------------------------------------------------------
	// SUMMARY PANEL
	// --------------------------------------------------------------------------------
	, summaryPanel: {
    
	    // layout properties
	    collassable: true
	    , collapsed: false
	    , hidden: false
    
    
    	// ogni dataset può avere più grafici associati (1..N)
    	, charts: [
        {
        	dataset: 'testStore'
            , widgetConfig: {
            	type: 'chart.ext.line'
        		, xField: 'name'
                , yField: 'visits'
            }
         	
        }, {
        	dataset: 'testConsoleChart'
        	, widgetConfig: {
        		type: 'chart.ext.bar'
            	, xField: 'quarter'
            	, yField: 'sales'
        	}
        } , {
        	dataset: 'testConsoleChart'
        	, widgetConfig: {
        		type: 'chart.ext.pie'
        		, dataField: 'sales'
	        	, categoryField: 'quarter'
        	}
        } ,  {
        	dataset: 'testConsoleChart'
            , widgetConfig: {
           		//type: 'chart.sbi.rotate'
           		type: 'chart.of.bar'
           	}
        }  ,  {
        	dataset: 'testConsoleChart'
            , widgetConfig: {
            	type: 'chart.sbi.rotate'
               	//type: 'chart.of.bar'
            }
        } ,  {
        	dataset: 'testConsoleChart'
            , widgetConfig: {
               	type: 'chart.fcf.bar'
               	//type: 'chart.of.bar'
            }
        }
    	]
    
	}	

	//--------------------------------------------------------------------------------
	// DETAIL PANEL
	// -------------------------------------------------------------------------------
	, detailPanel: {
    	// 1 page per tab (in futuro forse anche altri layout)
    	pages: [
    	{
			title: 'Pag. 1'
			, msg: 'Io sono la PRIMA pagina'
			, navigationBar: {
				documents: [
				{
					text: 'Bottone 1'
					,tooltip: 'Bottone 1'
					,label: 'QBE_FOODMART'
					,staticParams: {param1: 'paramValue'}
				}, {
					text: 'Bottone 2'
					,tooltip: 'Bottone 2'
					,label: 'QBE_FOODMART'
				}, {
					text: 'Bottone 3'
					,tooltip: 'Bottone 3'
					,label: 'QBE_FOODMART'
				}
				]
			}
	    	// tollbar con filtri sui dati mostarti nella griglia
	        ,filterBar: {
	            // default = filtering toolbar della lookup field; 
	            // automatic = crea un filtro per ogni colonna della griglia (operator: 'EQUALS_TO'; operand: DISTINCT) 
	            // custom: permette di creare filtri personalizzati solo su alcune colonne della griglia. La definizione di tali filtri si trova all'interno dell'attributo filters
	            type: 'custom'  
	            
	            // nel caso di filtro custom i seguenti parametri di default vengono applicati qualora non espressamente specificati dall'utente
	            , defaults: {
	                operator: 'EQUALS_TO'
	                ,operand: 'DISTINCT' // DISTINCT | MANUAL
	            }     
	
	            , filters: [
	              {
	           	  	 text: 'Brands'
	               , column: 'brandname'
	               , operator: 'EQUALS_TO'
	               , operand: 'DISTINCT'
	               }, {
	                 text: 'Products'
	               , column: 'productName'
	               , operator: 'EQUALS_TO'
	               , operand: 'DISTINCT'
	               }
	            ]
	            
	            , actions: [
	                {
	                    name: 'refresh'
	                    , hidden: false
	                    , config: {}}
	                    , {name: 'errors'
	                    ,  hidden: false
	                    ,  config: 
	                       {
	                        staticParams: {param1: 'paramValue1'
	                                      ,param2: 'paramValue2' }
	                        }
	                     }, {
	                       name: 'errors_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                       		staticParams: {param1: 'paramValue'}
	                      }
	                    }, {
	                       name: 'warnings'
	                    ,  hidden: false
	                    ,  config: {
	                       		staticParams: {param1: 'paramValue'}
	                       }
	                     }, {name: 'warnings_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     },{
	                       name: 'views'
	                    ,  hidden: false
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     }, {name: 'views_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     }
	            ]
	
	            , table: {
		            
		            // colonne aggiungibili alla griglia di base
		            dataset: {
		                  // LABEL del dataset in spagobi
		                	label: 'testConsole' 
		                   	, refreshTime: '30' // in secondi
		            } 
							, inlineCharts: [
																{ // 0..n volte
																		type: 'bar'
																		, column: 'chart_store_cost'
																		, color: 'gray'
																		// se e di tipo numerico usa il valore passato; 
																		// se e 'remote' calcola il massimo lato server (NOTA: il calcolo viene fatto contestualmente al refresh dei dati ed il valore ottenuto viene copiato nei metadati del resultset)
																		// se locale e uguale al massimo dei valori presenti nella pagina attualmente visualizzata
																		, maxValue: 200 // | 'remote' | 'local'
																		, tooltip: 'volume vendite'
																}, { // 0..n volte
																		 type: 'point'
																		 , column: 'chart_unit_sales'
																		 , color: 'red'
																		 // soglia oltre alla quale il simbolo deve essere visualizzato
																		 , threshold: '25'
																		 , tooltip: 'superata la soglia di 25 errori'
																}
															]
		
	            , inlineActions: [
																{
																		name: 'start'
																		, hidden: false
																		, tooltip: 'Start the process'
																		, config: {}
																}, {
																		name: 'stop'
																		, hidden: false
																		, tooltip: 'Stop the process'
																		, config: {
																				params: {
																						// parametri statici e dinamici definiti come in detailPanel.pages.navigationBar.documents
																				}
																		}
																}, {
																		name: 'errors'
																		, hidden: false
																		, tooltip: 'View Error messages'
																		, config: {
																				 staticParams: {
																										param1: 'param1Value'
																									 ,param2: 'paramValue2' 
																									 }
																		 ,   dynamicParams: [{
																														brandnamexxx: 'Brand'  //dataindex: url new request
																													, scope: 'dataset'    // [env|dataset] 
																													},{
																														products: 'Products'
																													, scope: 'dataset'
																													},{
																														month: 'Month'
																													, scope: 'env'
																													}]	      		                        
																		}
																}, {
																		name: 'errors_inactive'
																		, hidden: false
																		, tooltip: 'Enable Errors'
																		, config: {}
																}, {
																		name: 'warnings'
																		, hidden: false
																		, tooltip: 'View allarms'
																		, config: {}
																}, {
																		name: 'warnings_inactive'
																		, hidden: false
																		, tooltip: 'Enable allarms'
																		, config: {}
																}, {
																		name: 'informationlog'
																		, hidden: false
																		, tooltip: 'Download log files'
																		, config: {}
																}, { // 0..n volte
																		name: 'crossnav'
																		, hidden: false
																		, tooltip: 'Cross on XXX document'
																		, config: {
																				target: 'new' // self | new
																			 , document: 
																				{
																					label: 'testReportParams'
																						, staticParams: {P4: 'paramValue_AA' , P5: 'paramValue_BB'} 
																						, dynamicParams: [{
																																brandname: 'P1'  //dataindex: url new request
																															, scope: 'dataset'    // [env|dataset] 
																															},{
																																productName: 'P2'
																															, scope: 'dataset'
																															},{
																																month: 'P3'
																															, scope: 'env'
																														 }]	 
																				}
																		}
																}, { 
																		name: 'crossnav'
																		, hidden: false
																		, tooltip: 'Cross on YYY document (popup)'
																		, config: {
																				target: 'self' // self | new
																			, document: 
																			{
																				label: 'testReportParams'
																			, staticParams: {P3:'paramValue_A' , P5: 'paramValue_B'} 
																			, dynamicParams: [{
																								brandname: 'P1'  //dataindex: url new request
																							, scope: 'dataset'    // [env|dataset] 
																							},{
																								productName: 'P2'
																							, scope: 'dataset'
																							},{
																								month: 'P4'
																							, scope: 'env'
																						 }]	 
																			}
																		}
																},{
																		name: 'monitor'
																		, hidden: false
																		, tooltip: 'Active monitoring'
																		, config: {}
																},{
																		name: 'monitor_inactive'
																		, hidden: false
																		, tooltip: 'Disable monitoring'
																		, config: {}
																},{
																		name: 'views'
																		, hidden: false
																		, tooltip: 'View taken'
																		, config: {}
																},{
																		name: 'views_inactive'
																		, hidden: false
																		, tooltip: 'View taken'
																		, config: {}
																}
															]    
		        }//table
	    	} //filterBar
	
			
		}/*,{
			title: 'Pag. 2'
			, msg: 'Io sono la SECONDA pagina'
			, navigationBar: {
				documents: [
				{
					text: 'Bottone 4'
					,tooltip: 'Bottone 4'
					,label: 'QBE_FOODMART'
					,staticParams: {param1: 'paramValue'}
				}, {
					text: 'Bottone 5'
					,tooltip: 'Bottone 5'
					,label: 'QBE_FOODMART'
				}
				]
			}
			
	    	// tollbar con filtri sui dati mostarti nella griglia
	        ,filterBar: {
	            // default = filtering toolbar della lookup field; 
	            // automatic = crea un filtro per ogni colonna della griglia (operator: 'EQUALS_TO'; operand: DISTINCT) 
	            // custom: permette di creare filtri personalizzati solo su alcune colonne della griglia. La definizione di tali filtri si trova all'interno dell'attributo filters
	            type: 'custom'  
	            
	            // nel caso di filtro custom i seguenti parametri di default vengono applicati qualora non espressamente specificati dall'utente
	            , defaults: {
	                operator: 'EQUALS_TO'
	                ,operand: 'DISTINCT' // DISTINCT | MANUAL
	            }     
								
	            , filters: [
	              {
	           	  	 text: 'Brands'
	               , column: 'brandname'
	               , operator: 'EQUALS_TO'
	               , operand: 'DISTINCT'
	               }, {
	                 text: 'Products'
	               , column: 'productName'
	               , operator: 'EQUALS_TO'
	               , operand: 'DISTINCT'
	               }
	            ]
	           
	            , actions: [
	                {
	                    name: 'refresh'
	                    , hidden: false
	                    , config: {}}
	                    , {name: 'errors'
	                    ,  hidden: false
	                    ,  config: 
	                       {
	                        staticParams: {param1: 'paramValue1'
	                                      ,param2: 'paramValue2' }
	                        }
	                     }, {
	                       name: 'errors_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                       		staticParams: {param1: 'paramValue'}
	                      }
	                    }, {
	                       name: 'warnings'
	                    ,  hidden: false
	                    ,  config: {
	                       		staticParams: {param1: 'paramValue'}
	                       }
	                     }, {name: 'warnings_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     },{
	                       name: 'views'
	                    ,  hidden: false
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     }, {name: 'views_inactive'
	                    ,  hidden: true
	                    ,  config: {
	                        	staticParams: {param1: 'paramValue'}
	                       }
	                     }
	            ]

	            , table: {
		            
		            // colonne aggiungibili alla griglia di base
		            dataset: {
		                  // LABEL del dataset in spagobi
		                	label: 'testConsole' 
		                   	, refreshTime: '30' // in secondi
		            } 

	            , inlineActions: [
	      		                {
	      		                    name: 'start'
	      		                    , hidden: false
	      		                    , tooltip: 'Start the process'
	      		                    , config: {}
	      		                }, {
	      		                    name: 'stop'
	      		                    , hidden: false
	      		                    , tooltip: 'Stop the process'
	      		                    , config: {
	      		                        params: {
	      		                            // parametri statici e dinamici definiti come in detailPanel.pages.navigationBar.documents
	      		                        }
	      		                    }
	      		                }, {
	      		                    name: 'errors'
	      		                    , hidden: false
	      		                    , tooltip: 'View Error messages'
	      		                    , config: {
	      		                         staticParams: {
				                                        param1: 'param1Value'
				                                       ,param2: 'paramValue2' 
                                    				   }
	      		                     ,   dynamicParams: [{
                                                        brandname: 'Brand'  //dataindex: url new request
                                                      , scope: 'dataset'    // [env|dataset] 
                                                      },{
                                                        productName: 'Product'
                                                      , scope: 'dataset'
                                                      },{
                                                        month: 'Month'		 //executionContext: url new request
                                                      , scope: 'env'
                                                      }]	      		                        
	      		                    }
	      		                }, {
	      		                    name: 'errors_inactive'
	      		                    , hidden: false
	      		                    , tooltip: 'Enable Errors'
	      		                    , config: {}
	      		                }, {
	      		                    name: 'warnings'
	      		                    , hidden: false
	      		                    , tooltip: 'View allarms'
	      		                    , config: {}
	      		                }, {
	      		                    name: 'warnings_inactive'
	      		                    , hidden: false
	      		                    , tooltip: 'Enable allarms'
	      		                    , config: {}
	      		                }, {
	      		                    name: 'informationlog'
	      		                    , hidden: false
	      		                    , tooltip: 'Download log files'
	      		                    , config: {}
	      		                }, { // 0..n volte
	      		                    name: 'crossnav'
	      		                    , hidden: false
	      		                    , tooltip: 'Cross on XXX document'
	      		                    , config: {
	      		                        target: 'new' // self | new
	      		                       , document: 
                            				{
                            					label: 'testReportParams'
                            				, staticParams: {P4: 'paramValue_AA' , P5: 'paramValue_BB'} 
                                    , dynamicParams: [{
                                                        brandname: 'P1'  //dataindex: url new request
                                                      , scope: 'dataset'    // [env|dataset] 
                                                      },{
                                                        productName: 'P2'
                                                      , scope: 'dataset'
                                                      },{
                                                        month: 'P3'
                                                      , scope: 'env'
                                                     }]	 
                            				}
	      		                    }
	      		                }, { // 0..n volte
	      		                    name: 'crossnav'
	      		                    , hidden: false
	      		                    , tooltip: 'Cross on YYY document (popup)'
	      		                    , config: {
																				target: 'self' // self | new
																			, document: 
																			{
																				label: 'testReportParams'
																			, staticParams: {P3:'paramValue_A' , P5: 'paramValue_B'} 
																			, dynamicParams: [{
																								brandname: 'P1'  //dataindex: url new request
																							, scope: 'dataset'    // [env|dataset] 
																							},{
																								productName: 'P2'
																							, scope: 'dataset'
																							},{
																								month: 'P4'
																							, scope: 'env'
																						 }]	 
																			}
																		}
	      		                },{
	      		                    name: 'monitor'
	      		                    , hidden: false
	      		                    , tooltip: 'Active monitoring'
	      		                    , config: {}
	      		                },{
	      		                    name: 'monitor_inactive'
	      		                    , hidden: false
	      		                    , tooltip: 'Disable monitoring'
	      		                    , config: {}
	      		                },{
	      		                    name: 'views'
	      		                    , hidden: false
	      		                    , tooltip: 'View taken'
	      		                    , config: {}
	      		                },{
	      		                    name: 'views_inactive'
	      		                    , hidden: false
	      		                    , tooltip: 'View taken'
	      		                    , config: {}
	      		                }
	      		            ]  
												
		        }//table
						
	    	} //filterBar
	
			
		}*/
		] //pages
	}	//detailPanel
} //template


</script>
