<%-- 

SpagoBI - The Business Intelligence Free Platform

Copyright (C) 2005 Engineering Ingegneria Informatica S.p.A.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

--%>

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    
<%@ page import="java.util.*,
				 it.eng.spago.base.*,
				 it.eng.spagobi.engines.geo.*,
				 it.eng.spagobi.engines.geo.service.*,
				 it.eng.spagobi.engines.geo.service.initializer.*,
				 it.eng.spagobi.engines.geo.commons.service.*,
				 it.eng.spagobi.utilities.engines.*,
				 it.eng.spagobi.engines.geo.commons.constants.*,
				 it.eng.spagobi.utilities.callbacks.mapcatalogue.*,
				 it.eng.spagobi.engines.geo.map.provider.*,
				 it.eng.spagobi.engines.geo.map.renderer.*,
				 it.eng.spagobi.engines.geo.dataset.provider.* "%>
				 

	<%-- Necessary for window Javascript library --%>
	<script type="text/javascript" src='../js/lib/prototype-window/prototype.js'></script>
  	<script type="text/javascript" src='../js/lib/prototype-window/effects.js'></script>
  	<script type="text/javascript" src='../js/lib/prototype-window/window.js'></script>
  	<script type="text/javascript" src='../js/lib/prototype-window/debug.js'></script>
  	<script type="text/javascript" src='../js/lib/prototype-window/application.js"'/></script>
  	
  	
	<link rel="stylesheet" href ="../css/jsr168.css" type="text/css"/>
	<link rel="stylesheet" href ="../../../css/external.css" type="text/css"/>
	
	<link rel="stylesheet" href ="../css/spagobi.css" type="text/css"/>
	
	<%-- Necessary for window Javascript library --%>
	<link rel="stylesheet" href ="../js/lib/prototype-window/themes/default.css" type="text/css"/>	 
  	<link rel="stylesheet" href ="../js/lib/prototype-window/themes/alert.css" type="text/css"/>	 
  	<link rel="stylesheet" href ="../js/lib/prototype-window/themes/alert_lite.css" type="text/css" />
  	<link rel="stylesheet" href ="../js/lib/prototype-window/themes/mac_os_x.css" type="text/css"/>	
  	<link rel="stylesheet" href ="../js/lib/prototype-window/themes/debug.css" type="text/css"/>

<% 
	RequestContainer requestContainer = null;
	ResponseContainer responseContainer = null;
	SessionContainer sessionContainer = null;   
	SourceBean serviceRequest = null;
	SourceBean serviceResponse = null;
	GeoEngineAnalysisState analysisState = null;
	EngineAnalysisMetadata analysisMetadata = null;
	
	GeoEngineInstance geoEngineInstance = null;
	IDatasetProvider datamartProvider = null;
	IMapProvider mapProvider = null;
	IMapRenderer mapRenderer = null;
	String baseUrl = null;
	
	requestContainer = RequestContainerAccess.getRequestContainer(request);
	responseContainer = ResponseContainerAccess.getResponseContainer(request);
	sessionContainer = requestContainer.getSessionContainer();
	
	serviceRequest = requestContainer.getServiceRequest();
	serviceResponse = responseContainer.getServiceResponse();
	
	baseUrl = request.getProtocol().substring(0, request.getProtocol().indexOf('/')) + "://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath();	
	
	
	geoEngineInstance = (GeoEngineInstance)sessionContainer.getAttribute( GeoEngineConstants.GEO_ENGINE_INSTANCE );
	
	analysisMetadata = geoEngineInstance.getAnalysisMetadata();
	analysisState = (GeoEngineAnalysisState)geoEngineInstance.getAnalysisState();
	
	
	mapRenderer = geoEngineInstance.getMapRenderer();
	mapProvider = geoEngineInstance.getMapProvider();
	datamartProvider = geoEngineInstance.getDatasetProvider();
%>
    
